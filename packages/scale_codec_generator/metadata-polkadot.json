{
    "lookup": {
        "types": [
            {
                "id": 0,
                "type": {
                    "path": [
                        "sp_core",
                        "crypto",
                        "AccountId32"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 1,
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 1,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 32,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 2,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U8"
                    },
                    "docs": []
                }
            },
            {
                "id": 3,
                "type": {
                    "path": [
                        "frame_system",
                        "AccountInfo"
                    ],
                    "params": [
                        {
                            "name": "Index",
                            "type": 4
                        },
                        {
                            "name": "AccountData",
                            "type": 5
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "nonce",
                                    "type": 4,
                                    "typeName": "Index",
                                    "docs": []
                                },
                                {
                                    "name": "consumers",
                                    "type": 4,
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "providers",
                                    "type": 4,
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "sufficients",
                                    "type": 4,
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": 5,
                                    "typeName": "AccountData",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 4,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U32"
                    },
                    "docs": []
                }
            },
            {
                "id": 5,
                "type": {
                    "path": [
                        "pallet_balances",
                        "AccountData"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "free",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "reserved",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "misc_frozen",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "fee_frozen",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 6,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U128"
                    },
                    "docs": []
                }
            },
            {
                "id": 7,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 8
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": 8,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": 8,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": 8,
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 8,
                "type": {
                    "path": [
                        "sp_weights",
                        "weight_v2",
                        "Weight"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "ref_time",
                                    "type": 9,
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "proof_size",
                                    "type": 9,
                                    "typeName": "u64",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 9,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 10
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 10,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U64"
                    },
                    "docs": []
                }
            },
            {
                "id": 11,
                "type": {
                    "path": [
                        "primitive_types",
                        "H256"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 1,
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 12,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 13,
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "Digest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "logs",
                                    "type": 14,
                                    "typeName": "Vec<DigestItem>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 14,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 15
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 15,
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "DigestItem"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PreRuntime",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 16,
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Consensus",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 16,
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Seal",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 16,
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Other",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "RuntimeEnvironmentUpdated",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 16,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 4,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 17,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 18
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 18,
                "type": {
                    "path": [
                        "frame_system",
                        "EventRecord"
                    ],
                    "params": [
                        {
                            "name": "E",
                            "type": 19
                        },
                        {
                            "name": "T",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "phase",
                                    "type": 156,
                                    "typeName": "Phase",
                                    "docs": []
                                },
                                {
                                    "name": "event",
                                    "type": 19,
                                    "typeName": "E",
                                    "docs": []
                                },
                                {
                                    "name": "topics",
                                    "type": 157,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 19,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "RuntimeEvent"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "System",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 20,
                                            "typeName": "frame_system::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Scheduler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 29,
                                            "typeName": "pallet_scheduler::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Preimage",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 34,
                                            "typeName": "pallet_preimage::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Indices",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 35,
                                            "typeName": "pallet_indices::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Balances",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 36,
                                            "typeName": "pallet_balances::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "TransactionPayment",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 38,
                                            "typeName": "pallet_transaction_payment::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "Staking",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 39,
                                            "typeName": "pallet_staking::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Offences",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 44,
                                            "typeName": "pallet_offences::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Session",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 46,
                                            "typeName": "pallet_session::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Grandpa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 47,
                                            "typeName": "pallet_grandpa::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ImOnline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 52,
                                            "typeName": "pallet_im_online::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "Democracy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 61,
                                            "typeName": "pallet_democracy::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Council",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 65,
                                            "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "TechnicalCommittee",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 66,
                                            "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "PhragmenElection",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 67,
                                            "typeName": "pallet_elections_phragmen::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "TechnicalMembership",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 70,
                                            "typeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "Treasury",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 71,
                                            "typeName": "pallet_treasury::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Claims",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 72,
                                            "typeName": "claims::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Vesting",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 75,
                                            "typeName": "pallet_vesting::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Utility",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 76,
                                            "typeName": "pallet_utility::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Identity",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 77,
                                            "typeName": "pallet_identity::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Proxy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 78,
                                            "typeName": "pallet_proxy::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Multisig",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 81,
                                            "typeName": "pallet_multisig::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Bounties",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 83,
                                            "typeName": "pallet_bounties::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": []
                                },
                                {
                                    "name": "ChildBounties",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 84,
                                            "typeName": "pallet_child_bounties::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": []
                                },
                                {
                                    "name": "Tips",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 85,
                                            "typeName": "pallet_tips::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "ElectionProviderMultiPhase",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 86,
                                            "typeName": "pallet_election_provider_multi_phase::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": []
                                },
                                {
                                    "name": "VoterList",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 89,
                                            "typeName": "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": []
                                },
                                {
                                    "name": "NominationPools",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 90,
                                            "typeName": "pallet_nomination_pools::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": []
                                },
                                {
                                    "name": "FastUnstake",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 93,
                                            "typeName": "pallet_fast_unstake::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInclusion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 95,
                                            "typeName": "parachains_inclusion::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 53,
                                    "docs": []
                                },
                                {
                                    "name": "Paras",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 107,
                                            "typeName": "parachains_paras::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 56,
                                    "docs": []
                                },
                                {
                                    "name": "Ump",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 108,
                                            "typeName": "parachains_ump::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 59,
                                    "docs": []
                                },
                                {
                                    "name": "Hrmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 111,
                                            "typeName": "parachains_hrmp::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 60,
                                    "docs": []
                                },
                                {
                                    "name": "ParasDisputes",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 113,
                                            "typeName": "parachains_disputes::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 62,
                                    "docs": []
                                },
                                {
                                    "name": "Registrar",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 117,
                                            "typeName": "paras_registrar::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 70,
                                    "docs": []
                                },
                                {
                                    "name": "Slots",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 118,
                                            "typeName": "slots::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 71,
                                    "docs": []
                                },
                                {
                                    "name": "Auctions",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 119,
                                            "typeName": "auctions::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 72,
                                    "docs": []
                                },
                                {
                                    "name": "Crowdloan",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 120,
                                            "typeName": "crowdloan::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 73,
                                    "docs": []
                                },
                                {
                                    "name": "XcmPallet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 121,
                                            "typeName": "pallet_xcm::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 20,
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ExtrinsicSuccess",
                                    "fields": [
                                        {
                                            "name": "dispatch_info",
                                            "type": 21,
                                            "typeName": "DispatchInfo",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An extrinsic completed successfully."
                                    ]
                                },
                                {
                                    "name": "ExtrinsicFailed",
                                    "fields": [
                                        {
                                            "name": "dispatch_error",
                                            "type": 24,
                                            "typeName": "DispatchError",
                                            "docs": []
                                        },
                                        {
                                            "name": "dispatch_info",
                                            "type": 21,
                                            "typeName": "DispatchInfo",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An extrinsic failed."
                                    ]
                                },
                                {
                                    "name": "CodeUpdated",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "`:code` was updated."
                                    ]
                                },
                                {
                                    "name": "NewAccount",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A new account was created."
                                    ]
                                },
                                {
                                    "name": "KilledAccount",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "An account was reaped."
                                    ]
                                },
                                {
                                    "name": "Remarked",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "On on-chain remark happened."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Event for the System pallet."
                    ]
                }
            },
            {
                "id": 21,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "DispatchInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "weight",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "class",
                                    "type": 22,
                                    "typeName": "DispatchClass",
                                    "docs": []
                                },
                                {
                                    "name": "pays_fee",
                                    "type": 23,
                                    "typeName": "Pays",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 22,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "DispatchClass"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Normal",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Operational",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Mandatory",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 23,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "Pays"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Yes",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "No",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 24,
                "type": {
                    "path": [
                        "sp_runtime",
                        "DispatchError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Other",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "CannotLookup",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BadOrigin",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Module",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 25,
                                            "typeName": "ModuleError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "ConsumerRemaining",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "NoProviders",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "TooManyConsumers",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Token",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 26,
                                            "typeName": "TokenError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Arithmetic",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 27,
                                            "typeName": "ArithmeticError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Transactional",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 28,
                                            "typeName": "TransactionalError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Exhausted",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Corruption",
                                    "fields": [],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "Unavailable",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 25,
                "type": {
                    "path": [
                        "sp_runtime",
                        "ModuleError"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "index",
                                    "type": 2,
                                    "typeName": "u8",
                                    "docs": []
                                },
                                {
                                    "name": "error",
                                    "type": 16,
                                    "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 26,
                "type": {
                    "path": [
                        "sp_runtime",
                        "TokenError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NoFunds",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "WouldDie",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BelowMinimum",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "CannotCreate",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "UnknownAsset",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Frozen",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Unsupported",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 27,
                "type": {
                    "path": [
                        "sp_runtime",
                        "ArithmeticError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Underflow",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DivisionByZero",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 28,
                "type": {
                    "path": [
                        "sp_runtime",
                        "TransactionalError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "LimitReached",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NoLayer",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 29,
                "type": {
                    "path": [
                        "pallet_scheduler",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Scheduled",
                                    "fields": [
                                        {
                                            "name": "when",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Scheduled some task."
                                    ]
                                },
                                {
                                    "name": "Canceled",
                                    "fields": [
                                        {
                                            "name": "when",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Canceled some task."
                                    ]
                                },
                                {
                                    "name": "Dispatched",
                                    "fields": [
                                        {
                                            "name": "task",
                                            "type": 30,
                                            "typeName": "TaskAddress<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 31,
                                            "typeName": "Option<TaskName>",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Dispatched some task."
                                    ]
                                },
                                {
                                    "name": "CallUnavailable",
                                    "fields": [
                                        {
                                            "name": "task",
                                            "type": 30,
                                            "typeName": "TaskAddress<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 31,
                                            "typeName": "Option<TaskName>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "The call for the provided hash was not found so the task has been aborted."
                                    ]
                                },
                                {
                                    "name": "PeriodicFailed",
                                    "fields": [
                                        {
                                            "name": "task",
                                            "type": 30,
                                            "typeName": "TaskAddress<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 31,
                                            "typeName": "Option<TaskName>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "The given task was unable to be renewed since the agenda is full at that block."
                                    ]
                                },
                                {
                                    "name": "PermanentlyOverweight",
                                    "fields": [
                                        {
                                            "name": "task",
                                            "type": 30,
                                            "typeName": "TaskAddress<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 31,
                                            "typeName": "Option<TaskName>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "The given task can never be executed since it is overweight."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events type."
                    ]
                }
            },
            {
                "id": 30,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 31,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 1
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 32,
                "type": {
                    "path": [
                        "Result"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 33
                        },
                        {
                            "name": "E",
                            "type": 24
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ok",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 33,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Err",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 24,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 33,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": []
                    },
                    "docs": []
                }
            },
            {
                "id": 34,
                "type": {
                    "path": [
                        "pallet_preimage",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noted",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A preimage has been noted."
                                    ]
                                },
                                {
                                    "name": "Requested",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A preimage has been requested."
                                    ]
                                },
                                {
                                    "name": "Cleared",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A preimage has ben cleared."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 35,
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "IndexAssigned",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A account index was assigned."
                                    ]
                                },
                                {
                                    "name": "IndexFreed",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A account index has been freed up (unassigned)."
                                    ]
                                },
                                {
                                    "name": "IndexFrozen",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A account index has been frozen to its current account ID."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 36,
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Endowed",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "free_balance",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An account was created with some free balance."
                                    ]
                                },
                                {
                                    "name": "DustLost",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                                        "resulting in an outright loss."
                                    ]
                                },
                                {
                                    "name": "Transfer",
                                    "fields": [
                                        {
                                            "name": "from",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "to",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Transfer succeeded."
                                    ]
                                },
                                {
                                    "name": "BalanceSet",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "free",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserved",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A balance was set by root."
                                    ]
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Some balance was reserved (moved from free to reserved)."
                                    ]
                                },
                                {
                                    "name": "Unreserved",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Some balance was unreserved (moved from reserved to free)."
                                    ]
                                },
                                {
                                    "name": "ReserveRepatriated",
                                    "fields": [
                                        {
                                            "name": "from",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "to",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "destination_status",
                                            "type": 37,
                                            "typeName": "Status",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Some balance was moved from the reserve of the first account to the second account.",
                                        "Final argument indicates the destination balance type."
                                    ]
                                },
                                {
                                    "name": "Deposit",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Some amount was deposited (e.g. for transaction fees)."
                                    ]
                                },
                                {
                                    "name": "Withdraw",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                                    ]
                                },
                                {
                                    "name": "Slashed",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Some amount was removed from the account (e.g. for misbehavior)."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 37,
                "type": {
                    "path": [
                        "frame_support",
                        "traits",
                        "tokens",
                        "misc",
                        "BalanceStatus"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Free",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 38,
                "type": {
                    "path": [
                        "pallet_transaction_payment",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TransactionFeePaid",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "actual_fee",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "tip",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                                        "has been paid by `who`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 39,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "EraPaid",
                                    "fields": [
                                        {
                                            "name": "era_index",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "validator_payout",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "remainder",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "The era payout has been set; the first balance is the validator-payout; the second is",
                                        "the remainder from the maximum amount of reward."
                                    ]
                                },
                                {
                                    "name": "Rewarded",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "The nominator has been rewarded by this amount."
                                    ]
                                },
                                {
                                    "name": "Slashed",
                                    "fields": [
                                        {
                                            "name": "staker",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A staker (validator or nominator) has been slashed by the given amount."
                                    ]
                                },
                                {
                                    "name": "SlashReported",
                                    "fields": [
                                        {
                                            "name": "validator",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "fraction",
                                            "type": 40,
                                            "typeName": "Perbill",
                                            "docs": []
                                        },
                                        {
                                            "name": "slash_era",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A slash for the given validator, for the given percentage of their stake, at the given",
                                        "era as been reported."
                                    ]
                                },
                                {
                                    "name": "OldSlashingReportDiscarded",
                                    "fields": [
                                        {
                                            "name": "session_index",
                                            "type": 4,
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "An old slashing report from a prior era was discarded because it could",
                                        "not be processed."
                                    ]
                                },
                                {
                                    "name": "StakersElected",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "A new set of stakers was elected."
                                    ]
                                },
                                {
                                    "name": "Bonded",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "An account has bonded this amount. \\[stash, amount\\]",
                                        "",
                                        "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                                        "it will not be emitted for staking rewards when they are added to stake."
                                    ]
                                },
                                {
                                    "name": "Unbonded",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "An account has unbonded this amount."
                                    ]
                                },
                                {
                                    "name": "Withdrawn",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                                        "from the unlocking queue."
                                    ]
                                },
                                {
                                    "name": "Kicked",
                                    "fields": [
                                        {
                                            "name": "nominator",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "A nominator has been kicked from a validator."
                                    ]
                                },
                                {
                                    "name": "StakingElectionFailed",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The election failed. No new era is planned."
                                    ]
                                },
                                {
                                    "name": "Chilled",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "An account has stopped participating as either a validator or nominator."
                                    ]
                                },
                                {
                                    "name": "PayoutStarted",
                                    "fields": [
                                        {
                                            "name": "era_index",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "validator_stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "The stakers' rewards are getting paid."
                                    ]
                                },
                                {
                                    "name": "ValidatorPrefsSet",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "prefs",
                                            "type": 41,
                                            "typeName": "ValidatorPrefs",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "A validator has set their preferences."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 40,
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "per_things",
                        "Perbill"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 41,
                "type": {
                    "path": [
                        "pallet_staking",
                        "ValidatorPrefs"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "commission",
                                    "type": 42,
                                    "typeName": "Perbill",
                                    "docs": []
                                },
                                {
                                    "name": "blocked",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 42,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 40
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 43,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "Bool"
                    },
                    "docs": []
                }
            },
            {
                "id": 44,
                "type": {
                    "path": [
                        "pallet_offences",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Offence",
                                    "fields": [
                                        {
                                            "name": "kind",
                                            "type": 45,
                                            "typeName": "Kind",
                                            "docs": []
                                        },
                                        {
                                            "name": "timeslot",
                                            "type": 12,
                                            "typeName": "OpaqueTimeSlot",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "There is an offence reported of the given `kind` happened at the `session_index` and",
                                        "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                                        "\\[kind, timeslot\\]."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events type."
                    ]
                }
            },
            {
                "id": 45,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 16,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 46,
                "type": {
                    "path": [
                        "pallet_session",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewSession",
                                    "fields": [
                                        {
                                            "name": "session_index",
                                            "type": 4,
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New session has happened. Note that the argument is the session index, not the",
                                        "block number as the type might suggest."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 47,
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewAuthorities",
                                    "fields": [
                                        {
                                            "name": "authority_set",
                                            "type": 48,
                                            "typeName": "AuthorityList",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New authority set has been applied."
                                    ]
                                },
                                {
                                    "name": "Paused",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Current authority set has been paused."
                                    ]
                                },
                                {
                                    "name": "Resumed",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Current authority set has been resumed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 48,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 49
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 49,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            50,
                            10
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 50,
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 51,
                                    "typeName": "ed25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 51,
                "type": {
                    "path": [
                        "sp_core",
                        "ed25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 1,
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 52,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "HeartbeatReceived",
                                    "fields": [
                                        {
                                            "name": "authority_id",
                                            "type": 53,
                                            "typeName": "T::AuthorityId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new heartbeat was received from `AuthorityId`."
                                    ]
                                },
                                {
                                    "name": "AllGood",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "At the end of the session, no offence was committed."
                                    ]
                                },
                                {
                                    "name": "SomeOffline",
                                    "fields": [
                                        {
                                            "name": "offline",
                                            "type": 55,
                                            "typeName": "Vec<IdentificationTuple<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "At the end of the session, at least one validator was found to be offline."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 53,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 54,
                "type": {
                    "path": [
                        "sp_core",
                        "sr25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 1,
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 55,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 56
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 56,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            57
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 57,
                "type": {
                    "path": [
                        "pallet_staking",
                        "Exposure"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "total",
                                    "type": 58,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "own",
                                    "type": 58,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "others",
                                    "type": 59,
                                    "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 58,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 6
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 59,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 60
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 60,
                "type": {
                    "path": [
                        "pallet_staking",
                        "IndividualExposure"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "who",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "value",
                                    "type": 58,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 61,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A motion has been proposed by a public account."
                                    ]
                                },
                                {
                                    "name": "Tabled",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A public proposal has been tabled for referendum vote."
                                    ]
                                },
                                {
                                    "name": "ExternalTabled",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "An external proposal has been tabled."
                                    ]
                                },
                                {
                                    "name": "Started",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "threshold",
                                            "type": 62,
                                            "typeName": "VoteThreshold",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A referendum has begun."
                                    ]
                                },
                                {
                                    "name": "Passed",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A proposal has been approved by referendum."
                                    ]
                                },
                                {
                                    "name": "NotPassed",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A proposal has been rejected by referendum."
                                    ]
                                },
                                {
                                    "name": "Cancelled",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A referendum has been cancelled."
                                    ]
                                },
                                {
                                    "name": "Delegated",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "target",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "An account has delegated their vote to another account."
                                    ]
                                },
                                {
                                    "name": "Undelegated",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "An account has cancelled a previous delegation operation."
                                    ]
                                },
                                {
                                    "name": "Vetoed",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": "until",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "An external proposal has been vetoed."
                                    ]
                                },
                                {
                                    "name": "Blacklisted",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "A proposal_hash has been blacklisted permanently."
                                    ]
                                },
                                {
                                    "name": "Voted",
                                    "fields": [
                                        {
                                            "name": "voter",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "vote",
                                            "type": 63,
                                            "typeName": "AccountVote<BalanceOf<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "An account has voted in a referendum"
                                    ]
                                },
                                {
                                    "name": "Seconded",
                                    "fields": [
                                        {
                                            "name": "seconder",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "prop_index",
                                            "type": 4,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "An account has secconded a proposal"
                                    ]
                                },
                                {
                                    "name": "ProposalCanceled",
                                    "fields": [
                                        {
                                            "name": "prop_index",
                                            "type": 4,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "A proposal got canceled."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 62,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "vote_threshold",
                        "VoteThreshold"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "SuperMajorityApprove",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "SuperMajorityAgainst",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "SimpleMajority",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 63,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "vote",
                        "AccountVote"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Standard",
                                    "fields": [
                                        {
                                            "name": "vote",
                                            "type": 64,
                                            "typeName": "Vote",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Split",
                                    "fields": [
                                        {
                                            "name": "aye",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "nay",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 64,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "vote",
                        "Vote"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 2,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 65,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "threshold",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                                        "`MemberCount`)."
                                    ]
                                },
                                {
                                    "name": "Voted",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "voted",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "yes",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "no",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A motion (given hash) has been voted on by given account, leaving",
                                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                                    ]
                                },
                                {
                                    "name": "Approved",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A motion was approved by the required threshold."
                                    ]
                                },
                                {
                                    "name": "Disapproved",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A motion was not approved by the required threshold."
                                    ]
                                },
                                {
                                    "name": "Executed",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A motion was executed; result will be `Ok` if it returned without error."
                                    ]
                                },
                                {
                                    "name": "MemberExecuted",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A single member did some action; result will be `Ok` if it returned without error."
                                    ]
                                },
                                {
                                    "name": "Closed",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "yes",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "no",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A proposal was closed because its threshold was reached or after its duration was up."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 66,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "threshold",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                                        "`MemberCount`)."
                                    ]
                                },
                                {
                                    "name": "Voted",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "voted",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "yes",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "no",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A motion (given hash) has been voted on by given account, leaving",
                                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                                    ]
                                },
                                {
                                    "name": "Approved",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A motion was approved by the required threshold."
                                    ]
                                },
                                {
                                    "name": "Disapproved",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A motion was not approved by the required threshold."
                                    ]
                                },
                                {
                                    "name": "Executed",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A motion was executed; result will be `Ok` if it returned without error."
                                    ]
                                },
                                {
                                    "name": "MemberExecuted",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A single member did some action; result will be `Ok` if it returned without error."
                                    ]
                                },
                                {
                                    "name": "Closed",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "yes",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "no",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A proposal was closed because its threshold was reached or after its duration was up."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 67,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewTerm",
                                    "fields": [
                                        {
                                            "name": "new_members",
                                            "type": 68,
                                            "typeName": "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new term with new_members. This indicates that enough candidates existed to run",
                                        "the election, not that enough have has been elected. The inner value must be examined",
                                        "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
                                        "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
                                        "begin with."
                                    ]
                                },
                                {
                                    "name": "EmptyTerm",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "No (or not enough) candidates existed for this round. This is different from",
                                        "`NewTerm(\\[\\])`. See the description of `NewTerm`."
                                    ]
                                },
                                {
                                    "name": "ElectionError",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Internal error happened while trying to perform election."
                                    ]
                                },
                                {
                                    "name": "MemberKicked",
                                    "fields": [
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A member has been removed. This should always be followed by either `NewTerm` or",
                                        "`EmptyTerm`."
                                    ]
                                },
                                {
                                    "name": "Renounced",
                                    "fields": [
                                        {
                                            "name": "candidate",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Someone has renounced their candidacy."
                                    ]
                                },
                                {
                                    "name": "CandidateSlashed",
                                    "fields": [
                                        {
                                            "name": "candidate",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A candidate was slashed by amount due to failing to obtain a seat as member or",
                                        "runner-up.",
                                        "",
                                        "Note that old members and runners-up are also candidates."
                                    ]
                                },
                                {
                                    "name": "SeatHolderSlashed",
                                    "fields": [
                                        {
                                            "name": "seat_holder",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A seat holder was slashed by amount by being forcefully removed from the set."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 68,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 69
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 69,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 70,
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "MemberAdded",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The given member was added; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MemberRemoved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The given member was removed; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MembersSwapped",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Two members were swapped; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MembersReset",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The membership was reset; see the transaction for who the new set is."
                                    ]
                                },
                                {
                                    "name": "KeyChanged",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "One of the members' keys changed."
                                    ]
                                },
                                {
                                    "name": "Dummy",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Phantom member, never used."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 71,
                "type": {
                    "path": [
                        "pallet_treasury",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New proposal."
                                    ]
                                },
                                {
                                    "name": "Spending",
                                    "fields": [
                                        {
                                            "name": "budget_remaining",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "We have ended a spend period and will now allocate funds."
                                    ]
                                },
                                {
                                    "name": "Awarded",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "award",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Some funds have been allocated."
                                    ]
                                },
                                {
                                    "name": "Rejected",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "slashed",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A proposal was rejected; funds were slashed."
                                    ]
                                },
                                {
                                    "name": "Burnt",
                                    "fields": [
                                        {
                                            "name": "burnt_funds",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Some of our funds have been burnt."
                                    ]
                                },
                                {
                                    "name": "Rollover",
                                    "fields": [
                                        {
                                            "name": "rollover_balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Spending has finished; this is the amount that rolls over until next spend."
                                    ]
                                },
                                {
                                    "name": "Deposit",
                                    "fields": [
                                        {
                                            "name": "value",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Some funds have been deposited."
                                    ]
                                },
                                {
                                    "name": "SpendApproved",
                                    "fields": [
                                        {
                                            "name": "proposal_index",
                                            "type": 4,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "A new spend proposal has been approved."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 72,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Claimed",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "ethereum_address",
                                            "type": 73,
                                            "typeName": "EthereumAddress",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Someone claimed some DOTs."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 73,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "EthereumAddress"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 74,
                                    "typeName": "[u8; 20]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 74,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 20,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 75,
                "type": {
                    "path": [
                        "pallet_vesting",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "VestingUpdated",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "unvested",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "The amount vested has been updated. This could indicate a change in funds available.",
                                        "The balance given is the amount which is left unvested (and thus locked)."
                                    ]
                                },
                                {
                                    "name": "VestingCompleted",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An \\[account\\] has become fully vested."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 76,
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "BatchInterrupted",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "error",
                                            "type": 24,
                                            "typeName": "DispatchError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                                        "well as the error."
                                    ]
                                },
                                {
                                    "name": "BatchCompleted",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Batch of dispatches completed fully with no error."
                                    ]
                                },
                                {
                                    "name": "BatchCompletedWithErrors",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Batch of dispatches completed but has errors."
                                    ]
                                },
                                {
                                    "name": "ItemCompleted",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "A single item within a Batch of dispatches has completed with no error."
                                    ]
                                },
                                {
                                    "name": "ItemFailed",
                                    "fields": [
                                        {
                                            "name": "error",
                                            "type": 24,
                                            "typeName": "DispatchError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A single item within a Batch of dispatches has completed with error."
                                    ]
                                },
                                {
                                    "name": "DispatchedAs",
                                    "fields": [
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A call was dispatched."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 77,
                "type": {
                    "path": [
                        "pallet_identity",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "IdentitySet",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A name was set or reset (which will remove all judgements)."
                                    ]
                                },
                                {
                                    "name": "IdentityCleared",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A name was cleared, and the given balance returned."
                                    ]
                                },
                                {
                                    "name": "IdentityKilled",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A name was removed and the given balance slashed."
                                    ]
                                },
                                {
                                    "name": "JudgementRequested",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "registrar_index",
                                            "type": 4,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A judgement was asked from a registrar."
                                    ]
                                },
                                {
                                    "name": "JudgementUnrequested",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "registrar_index",
                                            "type": 4,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A judgement request was retracted."
                                    ]
                                },
                                {
                                    "name": "JudgementGiven",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "registrar_index",
                                            "type": 4,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A judgement was given by a registrar."
                                    ]
                                },
                                {
                                    "name": "RegistrarAdded",
                                    "fields": [
                                        {
                                            "name": "registrar_index",
                                            "type": 4,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A registrar was added."
                                    ]
                                },
                                {
                                    "name": "SubIdentityAdded",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "main",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "A sub-identity was added to an identity and the deposit paid."
                                    ]
                                },
                                {
                                    "name": "SubIdentityRemoved",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "main",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "A sub-identity was removed from an identity and the deposit freed."
                                    ]
                                },
                                {
                                    "name": "SubIdentityRevoked",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "main",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "A sub-identity was cleared, and the given deposit repatriated from the",
                                        "main identity account to the sub-identity account."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 78,
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ProxyExecuted",
                                    "fields": [
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A proxy was executed correctly, with the given."
                                    ]
                                },
                                {
                                    "name": "PureCreated",
                                    "fields": [
                                        {
                                            "name": "pure",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "disambiguation_index",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A pure account has been created by new proxy with given",
                                        "disambiguation index and proxy type."
                                    ]
                                },
                                {
                                    "name": "Announced",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 11,
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "An announcement was placed to make a call in the future."
                                    ]
                                },
                                {
                                    "name": "ProxyAdded",
                                    "fields": [
                                        {
                                            "name": "delegator",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "delegatee",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A proxy was added."
                                    ]
                                },
                                {
                                    "name": "ProxyRemoved",
                                    "fields": [
                                        {
                                            "name": "delegator",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "delegatee",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A proxy was removed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 79,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "ProxyType"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Any",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NonTransfer",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Governance",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Staking",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "IdentityJudgement",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "CancelProxy",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Auction",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 80,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U16"
                    },
                    "docs": []
                }
            },
            {
                "id": 81,
                "type": {
                    "path": [
                        "pallet_multisig",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewMultisig",
                                    "fields": [
                                        {
                                            "name": "approving",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "multisig",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "CallHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new multisig operation has begun."
                                    ]
                                },
                                {
                                    "name": "MultisigApproval",
                                    "fields": [
                                        {
                                            "name": "approving",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "timepoint",
                                            "type": 82,
                                            "typeName": "Timepoint<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "multisig",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "CallHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A multisig operation has been approved by someone."
                                    ]
                                },
                                {
                                    "name": "MultisigExecuted",
                                    "fields": [
                                        {
                                            "name": "approving",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "timepoint",
                                            "type": 82,
                                            "typeName": "Timepoint<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "multisig",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "CallHash",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A multisig operation has been executed."
                                    ]
                                },
                                {
                                    "name": "MultisigCancelled",
                                    "fields": [
                                        {
                                            "name": "cancelling",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "timepoint",
                                            "type": 82,
                                            "typeName": "Timepoint<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "multisig",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "CallHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A multisig operation has been cancelled."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 82,
                "type": {
                    "path": [
                        "pallet_multisig",
                        "Timepoint"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "height",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "index",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 83,
                "type": {
                    "path": [
                        "pallet_bounties",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "BountyProposed",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New bounty proposal."
                                    ]
                                },
                                {
                                    "name": "BountyRejected",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "bond",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A bounty proposal was rejected; funds were slashed."
                                    ]
                                },
                                {
                                    "name": "BountyBecameActive",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A bounty proposal is funded and became active."
                                    ]
                                },
                                {
                                    "name": "BountyAwarded",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A bounty is awarded to a beneficiary."
                                    ]
                                },
                                {
                                    "name": "BountyClaimed",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "payout",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A bounty is claimed by beneficiary."
                                    ]
                                },
                                {
                                    "name": "BountyCanceled",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A bounty is cancelled."
                                    ]
                                },
                                {
                                    "name": "BountyExtended",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A bounty expiry is extended."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 84,
                "type": {
                    "path": [
                        "pallet_child_bounties",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Added",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A child-bounty is added."
                                    ]
                                },
                                {
                                    "name": "Awarded",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A child-bounty is awarded to a beneficiary."
                                    ]
                                },
                                {
                                    "name": "Claimed",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "payout",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A child-bounty is claimed by beneficiary."
                                    ]
                                },
                                {
                                    "name": "Canceled",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_index",
                                            "type": 4,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A child-bounty is cancelled."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 85,
                "type": {
                    "path": [
                        "pallet_tips",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewTip",
                                    "fields": [
                                        {
                                            "name": "tip_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new tip suggestion has been opened."
                                    ]
                                },
                                {
                                    "name": "TipClosing",
                                    "fields": [
                                        {
                                            "name": "tip_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A tip suggestion has reached threshold and is closing."
                                    ]
                                },
                                {
                                    "name": "TipClosed",
                                    "fields": [
                                        {
                                            "name": "tip_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "payout",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A tip suggestion has been closed."
                                    ]
                                },
                                {
                                    "name": "TipRetracted",
                                    "fields": [
                                        {
                                            "name": "tip_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A tip suggestion has been retracted."
                                    ]
                                },
                                {
                                    "name": "TipSlashed",
                                    "fields": [
                                        {
                                            "name": "tip_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "finder",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A tip suggestion has been slashed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 86,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "SolutionStored",
                                    "fields": [
                                        {
                                            "name": "compute",
                                            "type": 87,
                                            "typeName": "ElectionCompute",
                                            "docs": []
                                        },
                                        {
                                            "name": "prev_ejected",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A solution was stored with the given compute.",
                                        "",
                                        "If the solution is signed, this means that it hasn't yet been processed. If the",
                                        "solution is unsigned, this means that it has also been processed.",
                                        "",
                                        "The `bool` is `true` when a previous solution was ejected to make room for this one."
                                    ]
                                },
                                {
                                    "name": "ElectionFinalized",
                                    "fields": [
                                        {
                                            "name": "compute",
                                            "type": 87,
                                            "typeName": "ElectionCompute",
                                            "docs": []
                                        },
                                        {
                                            "name": "score",
                                            "type": 88,
                                            "typeName": "ElectionScore",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "The election has been finalized, with the given computation and score."
                                    ]
                                },
                                {
                                    "name": "ElectionFailed",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "An election failed.",
                                        "",
                                        "Not much can be said about which computes failed in the process."
                                    ]
                                },
                                {
                                    "name": "Rewarded",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "An account has been rewarded for their signed submission being finalized."
                                    ]
                                },
                                {
                                    "name": "Slashed",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 0,
                                            "typeName": "<T as frame_system::Config>::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "An account has been slashed for submitting an invalid signed submission."
                                    ]
                                },
                                {
                                    "name": "SignedPhaseStarted",
                                    "fields": [
                                        {
                                            "name": "round",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "The signed phase of the given round has started."
                                    ]
                                },
                                {
                                    "name": "UnsignedPhaseStarted",
                                    "fields": [
                                        {
                                            "name": "round",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The unsigned phase of the given round has started."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 87,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "ElectionCompute"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "OnChain",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Signed",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Unsigned",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Fallback",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Emergency",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 88,
                "type": {
                    "path": [
                        "sp_npos_elections",
                        "ElectionScore"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "minimal_stake",
                                    "type": 6,
                                    "typeName": "ExtendedBalance",
                                    "docs": []
                                },
                                {
                                    "name": "sum_stake",
                                    "type": 6,
                                    "typeName": "ExtendedBalance",
                                    "docs": []
                                },
                                {
                                    "name": "sum_stake_squared",
                                    "type": 6,
                                    "typeName": "ExtendedBalance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 89,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Rebagged",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "from",
                                            "type": 10,
                                            "typeName": "T::Score",
                                            "docs": []
                                        },
                                        {
                                            "name": "to",
                                            "type": 10,
                                            "typeName": "T::Score",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Moved an account from one bag to another."
                                    ]
                                },
                                {
                                    "name": "ScoreUpdated",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_score",
                                            "type": 10,
                                            "typeName": "T::Score",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Updated the score of some account to the given amount."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 90,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Created",
                                    "fields": [
                                        {
                                            "name": "depositor",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A pool has been created."
                                    ]
                                },
                                {
                                    "name": "Bonded",
                                    "fields": [
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "bonded",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "joined",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A member has became bonded in a pool."
                                    ]
                                },
                                {
                                    "name": "PaidOut",
                                    "fields": [
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "payout",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A payout has been made to a member."
                                    ]
                                },
                                {
                                    "name": "Unbonded",
                                    "fields": [
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "points",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "era",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A member has unbonded from their pool.",
                                        "",
                                        "- `balance` is the corresponding balance of the number of points that has been",
                                        "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                                        "  pool.",
                                        "- `points` is the number of points that are issued as a result of `balance` being",
                                        "dissolved into the corresponding unbonding pool.",
                                        "- `era` is the era in which the balance will be unbonded.",
                                        "In the absence of slashing, these values will match. In the presence of slashing, the",
                                        "number of points that are issued in the unbonding pool will be less than the amount",
                                        "requested to be unbonded."
                                    ]
                                },
                                {
                                    "name": "Withdrawn",
                                    "fields": [
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "points",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A member has withdrawn from their pool.",
                                        "",
                                        "The given number of `points` have been dissolved in return of `balance`.",
                                        "",
                                        "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                                        "will be 1."
                                    ]
                                },
                                {
                                    "name": "Destroyed",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A pool has been destroyed."
                                    ]
                                },
                                {
                                    "name": "StateChanged",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_state",
                                            "type": 91,
                                            "typeName": "PoolState",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The state of a pool has changed"
                                    ]
                                },
                                {
                                    "name": "MemberRemoved",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "member",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "A member has been removed from a pool.",
                                        "",
                                        "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked)."
                                    ]
                                },
                                {
                                    "name": "RolesUpdated",
                                    "fields": [
                                        {
                                            "name": "root",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "state_toggler",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "nominator",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "The roles of a pool have been updated to the given new roles. Note that the depositor",
                                        "can never change."
                                    ]
                                },
                                {
                                    "name": "PoolSlashed",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "The active balance of pool `pool_id` has been slashed to `balance`."
                                    ]
                                },
                                {
                                    "name": "UnbondingPoolSlashed",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "era",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events of this pallet."
                    ]
                }
            },
            {
                "id": 91,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "PoolState"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Open",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Blocked",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Destroying",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 92,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 93,
                "type": {
                    "path": [
                        "pallet_fast_unstake",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unstaked",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A staker was unstaked."
                                    ]
                                },
                                {
                                    "name": "Slashed",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A staker was slashed for requesting fast-unstake whilst being exposed."
                                    ]
                                },
                                {
                                    "name": "InternalError",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "An internal error happened. Operations will be paused now."
                                    ]
                                },
                                {
                                    "name": "BatchChecked",
                                    "fields": [
                                        {
                                            "name": "eras",
                                            "type": 94,
                                            "typeName": "Vec<EraIndex>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A batch was partially checked for the given eras, but the process did not finish."
                                    ]
                                },
                                {
                                    "name": "BatchFinished",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "A batch was terminated.",
                                        "",
                                        "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                                        "of the batch. A new batch will be created upon next block."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "The events of this pallet."
                    ]
                }
            },
            {
                "id": 94,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 4
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 95,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "CandidateBacked",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 96,
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 105,
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 106,
                                            "typeName": "GroupIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A candidate was backed. `[candidate, head_data]`"
                                    ]
                                },
                                {
                                    "name": "CandidateIncluded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 96,
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 105,
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 106,
                                            "typeName": "GroupIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A candidate was included. `[candidate, head_data]`"
                                    ]
                                },
                                {
                                    "name": "CandidateTimedOut",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 96,
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 105,
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A candidate timed out. `[candidate, head_data]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 96,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CandidateReceipt"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "descriptor",
                                    "type": 97,
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "commitments_hash",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 97,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CandidateDescriptor"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "para_id",
                                    "type": 98,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "relay_parent",
                                    "type": 11,
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "collator",
                                    "type": 99,
                                    "typeName": "CollatorId",
                                    "docs": []
                                },
                                {
                                    "name": "persisted_validation_data_hash",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "pov_hash",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "erasure_root",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "signature",
                                    "type": 100,
                                    "typeName": "CollatorSignature",
                                    "docs": []
                                },
                                {
                                    "name": "para_head",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "validation_code_hash",
                                    "type": 103,
                                    "typeName": "ValidationCodeHash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 98,
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "Id"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 99,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "collator_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 100,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "collator_app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 101,
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 101,
                "type": {
                    "path": [
                        "sp_core",
                        "sr25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 102,
                                    "typeName": "[u8; 64]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 102,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 64,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 103,
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCodeHash"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 104,
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "HeadData"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 105,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CoreIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 106,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "GroupIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 107,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "CurrentCodeUpdated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Current code has been updated for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "CurrentHeadUpdated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Current head has been updated for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "CodeUpgradeScheduled",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A code upgrade has been scheduled for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "NewHeadNoted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A new head has been noted for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "ActionQueued",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A para has been queued to execute pending actions. `para_id`"
                                    ]
                                },
                                {
                                    "name": "PvfCheckStarted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 103,
                                            "typeName": "ValidationCodeHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "The given para either initiated or subscribed to a PVF check for the given validation",
                                        "code. `code_hash` `para_id`"
                                    ]
                                },
                                {
                                    "name": "PvfCheckAccepted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 103,
                                            "typeName": "ValidationCodeHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The given validation code was accepted by the PVF pre-checking vote.",
                                        "`code_hash` `para_id`"
                                    ]
                                },
                                {
                                    "name": "PvfCheckRejected",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 103,
                                            "typeName": "ValidationCodeHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "The given validation code was rejected by the PVF pre-checking vote.",
                                        "`code_hash` `para_id`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 108,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidFormat",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "MessageId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Upward message is invalid XCM.",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "UnsupportedVersion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "MessageId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Upward message is unsupported version of XCM.",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "ExecutedUpward",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 109,
                                            "typeName": "Outcome",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Upward message executed with the given outcome.",
                                        "\\[ id, outcome \\]"
                                    ]
                                },
                                {
                                    "name": "WeightExhausted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "The weight limit for handling upward messages was reached.",
                                        "\\[ id, remaining, required \\]"
                                    ]
                                },
                                {
                                    "name": "UpwardMessagesReceived",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Some upward messages have been received and will be processed.",
                                        "\\[ para, count, size \\]"
                                    ]
                                },
                                {
                                    "name": "OverweightEnqueued",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "The weight budget was exceeded for an individual upward message.",
                                        "",
                                        "This message can be later dispatched manually using `service_overweight` dispatchable",
                                        "using the assigned `overweight_index`.",
                                        "",
                                        "\\[ para, id, overweight_index, required \\]"
                                    ]
                                },
                                {
                                    "name": "OverweightServiced",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Upward message from the overweight queue was executed with the given actual weight",
                                        "used.",
                                        "",
                                        "\\[ overweight_index, used \\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 109,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "traits",
                        "Outcome"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Complete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Incomplete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 110,
                                            "typeName": "Error",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Error",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 110,
                                            "typeName": "Error",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 110,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "traits",
                        "Error"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Unimplemented",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "UntrustedReserveLocation",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "UntrustedTeleportLocation",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "MultiLocationFull",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "MultiLocationNotInvertible",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "BadOrigin",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "InvalidLocation",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "AssetNotFound",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "FailedToTransactAsset",
                                    "fields": [],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "NotWithdrawable",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "LocationCannotHold",
                                    "fields": [],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ExceedsMaxMessageSize",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "DestinationUnsupported",
                                    "fields": [],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "Transport",
                                    "fields": [],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Unroutable",
                                    "fields": [],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "UnknownClaim",
                                    "fields": [],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "FailedToDecode",
                                    "fields": [],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "MaxWeightInvalid",
                                    "fields": [],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "NotHoldingFees",
                                    "fields": [],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "TooExpensive",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "UnhandledXcmVersion",
                                    "fields": [],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "WeightLimitReached",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "Barrier",
                                    "fields": [],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "WeightNotComputable",
                                    "fields": [],
                                    "index": 25,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 111,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "OpenChannelRequested",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Open HRMP channel requested.",
                                        "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
                                    ]
                                },
                                {
                                    "name": "OpenChannelCanceled",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 112,
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An HRMP channel request sent by the receiver was canceled by either party.",
                                        "`[by_parachain, channel_id]`"
                                    ]
                                },
                                {
                                    "name": "OpenChannelAccepted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Open HRMP channel accepted. `[sender, recipient]`"
                                    ]
                                },
                                {
                                    "name": "ChannelClosed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 112,
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "HRMP channel closed. `[by_parachain, channel_id]`"
                                    ]
                                },
                                {
                                    "name": "HrmpChannelForceOpened",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "An HRMP channel was opened via Root origin.",
                                        "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 112,
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "HrmpChannelId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sender",
                                    "type": 98,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "recipient",
                                    "type": 98,
                                    "typeName": "Id",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 113,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "DisputeInitiated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 114,
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 115,
                                            "typeName": "DisputeLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A dispute has been initiated. \\[candidate hash, dispute location\\]"
                                    ]
                                },
                                {
                                    "name": "DisputeConcluded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 114,
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 116,
                                            "typeName": "DisputeResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A dispute has concluded for or against a candidate.",
                                        "`\\[para id, candidate hash, dispute result\\]`"
                                    ]
                                },
                                {
                                    "name": "DisputeTimedOut",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 114,
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A dispute has timed out due to insufficient participation.",
                                        "`\\[para id, candidate hash\\]`"
                                    ]
                                },
                                {
                                    "name": "Revert",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A dispute has concluded with supermajority against a candidate.",
                                        "Block authors should no longer build on top of this head and should",
                                        "instead revert the block at the given height. This should be the",
                                        "number of the child of the last known valid block in the chain."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 114,
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "CandidateHash"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 115,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Local",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Remote",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 116,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeResult"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Valid",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Invalid",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 117,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Registered",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "manager",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Deregistered",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 118,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewLeasePeriod",
                                    "fields": [
                                        {
                                            "name": "lease_period",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new `[lease_period]` is beginning."
                                    ]
                                },
                                {
                                    "name": "Leased",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "leaser",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_begin",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_count",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "extra_reserved",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "total_amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A para has won the right to a continuous set of lease periods as a parachain.",
                                        "First balance is any extra amount reserved on top of the para's existing deposit.",
                                        "Second balance is the total amount reserved."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 119,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AuctionStarted",
                                    "fields": [
                                        {
                                            "name": "auction_index",
                                            "type": 4,
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "lease_period",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "ending",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An auction started. Provides its index and the block number where it will begin to",
                                        "close and the first lease period of the quadruplet that is auctioned."
                                    ]
                                },
                                {
                                    "name": "AuctionClosed",
                                    "fields": [
                                        {
                                            "name": "auction_index",
                                            "type": 4,
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An auction ended. All funds become unreserved."
                                    ]
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": "bidder",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "extra_reserved",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "total_amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
                                        "Second is the total."
                                    ]
                                },
                                {
                                    "name": "Unreserved",
                                    "fields": [
                                        {
                                            "name": "bidder",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Funds were unreserved since bidder is no longer active. `[bidder, amount]`"
                                    ]
                                },
                                {
                                    "name": "ReserveConfiscated",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "leaser",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve",
                                        "but no parachain slot has been leased."
                                    ]
                                },
                                {
                                    "name": "BidAccepted",
                                    "fields": [
                                        {
                                            "name": "bidder",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_slot",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_slot",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A new bid has been accepted as the current winner."
                                    ]
                                },
                                {
                                    "name": "WinningOffset",
                                    "fields": [
                                        {
                                            "name": "auction_index",
                                            "type": 4,
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "block_number",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The winning offset was chosen for an auction. This will map into the `Winning` storage map."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 120,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Created",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new crowdloaning campaign."
                                    ]
                                },
                                {
                                    "name": "Contributed",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "fund_index",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Contributed to a crowd sale."
                                    ]
                                },
                                {
                                    "name": "Withdrew",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "fund_index",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Withdrew full balance of a contributor."
                                    ]
                                },
                                {
                                    "name": "PartiallyRefunded",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "The loans in a fund have been partially dissolved, i.e. there are some left",
                                        "over child keys that still need to be killed."
                                    ]
                                },
                                {
                                    "name": "AllRefunded",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "All loans in a fund have been refunded."
                                    ]
                                },
                                {
                                    "name": "Dissolved",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Fund is dissolved."
                                    ]
                                },
                                {
                                    "name": "HandleBidResult",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "result",
                                            "type": 32,
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The result of trying to submit a new bid to the Slots pallet."
                                    ]
                                },
                                {
                                    "name": "Edited",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "The configuration to a crowdloan has been edited."
                                    ]
                                },
                                {
                                    "name": "MemoUpdated",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "memo",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "A memo has been updated."
                                    ]
                                },
                                {
                                    "name": "AddedToNewRaise",
                                    "fields": [
                                        {
                                            "name": "para_id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "A parachain has been moved to `NewRaise`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 121,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Attempted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 109,
                                            "typeName": "xcm::latest::Outcome",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Execution of an XCM message was attempted.",
                                        "",
                                        "\\[ outcome \\]"
                                    ]
                                },
                                {
                                    "name": "Sent",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A XCM message was sent.",
                                        "",
                                        "\\[ origin, destination, message \\]"
                                    ]
                                },
                                {
                                    "name": "UnexpectedResponse",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Query response received which does not match a registered query. This may be because a",
                                        "matching query was never registered, it may be because it is a duplicate response, or",
                                        "because the query timed out.",
                                        "",
                                        "\\[ origin location, id \\]"
                                    ]
                                },
                                {
                                    "name": "ResponseReady",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 140,
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Query response has been received and is ready for taking with `take_response`. There is",
                                        "no registered notification call.",
                                        "",
                                        "\\[ id, response \\]"
                                    ]
                                },
                                {
                                    "name": "Notified",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Query response has been received and query is removed. The registered notification has",
                                        "been dispatched and executed successfully.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyOverweight",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Query response has been received and query is removed. The registered notification could",
                                        "not be dispatched because the dispatch weight is greater than the maximum weight",
                                        "originally budgeted by this runtime for the query result.",
                                        "",
                                        "\\[ id, pallet index, call index, actual weight, max budgeted weight \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyDispatchError",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Query response has been received and query is removed. There was a general error with",
                                        "dispatching the notification call.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyDecodeFailed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Query response has been received and query is removed. The dispatch was unable to be",
                                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                                        "is not `(origin, QueryId, Response)`.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "InvalidResponder",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 149,
                                            "typeName": "Option<MultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Expected query response has been received but the origin location of the response does",
                                        "not match that expected. The query remains registered for a later, valid, response to",
                                        "be received and acted upon.",
                                        "",
                                        "\\[ origin location, id, expected location \\]"
                                    ]
                                },
                                {
                                    "name": "InvalidResponderVersion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Expected query response has been received but the expected origin location placed in",
                                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                                        "",
                                        "This is unexpected (since a location placed in storage in a previously executing",
                                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                                        "valid response will be dropped. Manual governance intervention is probably going to be",
                                        "needed.",
                                        "",
                                        "\\[ origin location, id \\]"
                                    ]
                                },
                                {
                                    "name": "ResponseTaken",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Received query response has been read and removed.",
                                        "",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "AssetsTrapped",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 150,
                                            "typeName": "VersionedMultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Some assets have been placed in an asset trap.",
                                        "",
                                        "\\[ hash, origin, assets \\]"
                                    ]
                                },
                                {
                                    "name": "VersionChangeNotified",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "An XCM version change notification message has been attempted to be sent.",
                                        "",
                                        "\\[ destination, result \\]"
                                    ]
                                },
                                {
                                    "name": "SupportedVersionChanged",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "The supported version of a location has been changed. This might be through an",
                                        "automatic notification or a manual intervention.",
                                        "",
                                        "\\[ location, XCM version \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyTargetSendFail",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 110,
                                            "typeName": "XcmError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "A given location which had a version change subscription was dropped owing to an error",
                                        "sending the notification to it.",
                                        "",
                                        "\\[ location, query ID, error \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyTargetMigrationFail",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 155,
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "A given location which had a version change subscription was dropped owing to an error",
                                        "migrating the location to our new XCM format.",
                                        "",
                                        "\\[ location, query ID \\]"
                                    ]
                                },
                                {
                                    "name": "AssetsClaimed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 150,
                                            "typeName": "VersionedMultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": [
                                        "Some assets have been claimed from an asset trap",
                                        "",
                                        "\\[ hash, origin, assets \\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 122,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multilocation",
                        "MultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "parents",
                                    "type": 2,
                                    "typeName": "u8",
                                    "docs": []
                                },
                                {
                                    "name": "interior",
                                    "type": 123,
                                    "typeName": "Junctions",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 123,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multilocation",
                        "Junctions"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Here",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "X1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "X2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "X3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "X4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "X5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "X6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "X7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "X8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 124,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 124,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "junction",
                        "Junction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parachain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "AccountId32",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AccountIndex64",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AccountKey20",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "key",
                                            "type": 74,
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "PalletInstance",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralIndex",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralKey",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 127,
                                            "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "OnlyChild",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Plurality",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 128,
                                            "typeName": "BodyId",
                                            "docs": []
                                        },
                                        {
                                            "name": "part",
                                            "type": 129,
                                            "typeName": "BodyPart",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 125,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 4
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 126,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "NetworkId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Any",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Named",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 127,
                                            "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Polkadot",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Kusama",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 127,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 128,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "BodyId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Named",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 127,
                                            "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Executive",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Technical",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Legislative",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Judicial",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 129,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "BodyPart"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Voice",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Members",
                                    "fields": [
                                        {
                                            "name": "count",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Fraction",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AtLeastProportion",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "MoreThanProportion",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 130,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 131,
                                    "typeName": "Vec<Instruction<RuntimeCall>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 131,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 132
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 132,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Instruction"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 140,
                                            "typeName": "Response",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 144,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ClearOrigin",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "DescendOrigin",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 123,
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ReportError",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 135,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": 148,
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "RefundSurplus",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "SetErrorHandler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 130,
                                            "typeName": "Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "SetAppendix",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 130,
                                            "typeName": "Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "ClearError",
                                    "fields": [],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "ClaimAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "ticket",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 27,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 133,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAssets"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 134,
                                    "typeName": "Vec<MultiAsset>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 134,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 135
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 135,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": 136,
                                    "typeName": "AssetId",
                                    "docs": []
                                },
                                {
                                    "name": "fun",
                                    "type": 137,
                                    "typeName": "Fungibility",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 136,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "AssetId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Concrete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Abstract",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 137,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "Fungibility"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fungible",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NonFungible",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 138,
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 138,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "AssetInstance"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Undefined",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Array4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 16,
                                            "typeName": "[u8; 4]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Array8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 139,
                                            "typeName": "[u8; 8]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Array16",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 45,
                                            "typeName": "[u8; 16]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Array32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Blob",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 139,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 8,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 140,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ExecutionResult",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 141,
                                            "typeName": "Option<(u32, Error)>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Version",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "super::Version",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 141,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 142
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 142,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 142,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            110
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 143,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "OriginKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Native",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "SovereignAccount",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Superuser",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Xcm",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 144,
                "type": {
                    "path": [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "encoded",
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 145,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAssetFilter"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Definite",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Wild",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 146,
                                            "typeName": "WildMultiAsset",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 146,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "WildMultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "AllOf",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 136,
                                            "typeName": "AssetId",
                                            "docs": []
                                        },
                                        {
                                            "name": "fun",
                                            "type": 147,
                                            "typeName": "WildFungibility",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 147,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "WildFungibility"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fungible",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NonFungible",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 148,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "WeightLimit"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unlimited",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Limited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 149,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 122
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 150,
                "type": {
                    "path": [
                        "xcm",
                        "VersionedMultiAssets"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 151,
                                            "typeName": "Vec<v0::MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "v1::MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 151,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 152
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 152,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "multi_asset",
                        "MultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AllFungible",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AllNonFungible",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "AllAbstractFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "AllAbstractNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "AllConcreteFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "AllConcreteNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "AbstractFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "AbstractNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "instance",
                                            "type": 138,
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ConcreteFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "ConcreteNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "instance",
                                            "type": 138,
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 153,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "multi_location",
                        "MultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "X1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "X2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "X3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "X4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "X5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "X6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "X7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "X8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 154,
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 154,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "Junction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parent",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AccountId32",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AccountIndex64",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "AccountKey20",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": 126,
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "key",
                                            "type": 74,
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "PalletInstance",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralIndex",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 58,
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralKey",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 127,
                                            "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "OnlyChild",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Plurality",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 128,
                                            "typeName": "BodyId",
                                            "docs": []
                                        },
                                        {
                                            "name": "part",
                                            "type": 129,
                                            "typeName": "BodyPart",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 155,
                "type": {
                    "path": [
                        "xcm",
                        "VersionedMultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 153,
                                            "typeName": "v0::MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "v1::MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 156,
                "type": {
                    "path": [
                        "frame_system",
                        "Phase"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ApplyExtrinsic",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Finalization",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Initialization",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 157,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 11
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 158,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 30
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 159,
                "type": {
                    "path": [
                        "frame_system",
                        "LastRuntimeUpgradeInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "spec_version",
                                    "type": 125,
                                    "typeName": "codec::Compact<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "spec_name",
                                    "type": 160,
                                    "typeName": "sp_runtime::RuntimeString",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 160,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "Str"
                    },
                    "docs": []
                }
            },
            {
                "id": 161,
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "remark",
                                    "fields": [
                                        {
                                            "name": "remark",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Make some on-chain remark.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_heap_pages",
                                    "fields": [
                                        {
                                            "name": "pages",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the number of pages in the WebAssembly environment's heap."
                                    ]
                                },
                                {
                                    "name": "set_code",
                                    "fields": [
                                        {
                                            "name": "code",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set the new runtime code.",
                                        "",
                                        "# <weight>",
                                        "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
                                        "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
                                        "  expensive).",
                                        "- 1 storage write (codec `O(C)`).",
                                        "- 1 digest item.",
                                        "- 1 event.",
                                        "The weight of this function is dependent on the runtime, but generally this is very",
                                        "expensive. We will treat this as a full block.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_code_without_checks",
                                    "fields": [
                                        {
                                            "name": "code",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Set the new runtime code without doing any checks of the given `code`.",
                                        "",
                                        "# <weight>",
                                        "- `O(C)` where `C` length of `code`",
                                        "- 1 storage write (codec `O(C)`).",
                                        "- 1 digest item.",
                                        "- 1 event.",
                                        "The weight of this function is dependent on the runtime. We will treat this as a full",
                                        "block. # </weight>"
                                    ]
                                },
                                {
                                    "name": "set_storage",
                                    "fields": [
                                        {
                                            "name": "items",
                                            "type": 162,
                                            "typeName": "Vec<KeyValue>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Set some items of storage."
                                    ]
                                },
                                {
                                    "name": "kill_storage",
                                    "fields": [
                                        {
                                            "name": "keys",
                                            "type": 164,
                                            "typeName": "Vec<Key>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Kill some items from storage."
                                    ]
                                },
                                {
                                    "name": "kill_prefix",
                                    "fields": [
                                        {
                                            "name": "prefix",
                                            "type": 12,
                                            "typeName": "Key",
                                            "docs": []
                                        },
                                        {
                                            "name": "subkeys",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Kill all storage items with a key that starts with the given prefix.",
                                        "",
                                        "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                                        "the prefix we are removing to accurately calculate the weight of this function."
                                    ]
                                },
                                {
                                    "name": "remark_with_event",
                                    "fields": [
                                        {
                                            "name": "remark",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Make some on-chain remark and emit event."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 162,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 163
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 163,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            12,
                            12
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 164,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 12
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 165,
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "BlockWeights"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "base_block",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "max_block",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "per_class",
                                    "type": 166,
                                    "typeName": "PerDispatchClass<WeightsPerClass>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 166,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 167
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": 167,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": 167,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": 167,
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 167,
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "WeightsPerClass"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "base_extrinsic",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "max_extrinsic",
                                    "type": 168,
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                },
                                {
                                    "name": "max_total",
                                    "type": 168,
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                },
                                {
                                    "name": "reserved",
                                    "type": 168,
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 168,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 8
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 8,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 169,
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "BlockLength"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max",
                                    "type": 170,
                                    "typeName": "PerDispatchClass<u32>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 170,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": 4,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": 4,
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": 4,
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 171,
                "type": {
                    "path": [
                        "sp_weights",
                        "RuntimeDbWeight"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "read",
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "write",
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 172,
                "type": {
                    "path": [
                        "sp_version",
                        "RuntimeVersion"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "spec_name",
                                    "type": 160,
                                    "typeName": "RuntimeString",
                                    "docs": []
                                },
                                {
                                    "name": "impl_name",
                                    "type": 160,
                                    "typeName": "RuntimeString",
                                    "docs": []
                                },
                                {
                                    "name": "authoring_version",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "spec_version",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "impl_version",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "apis",
                                    "type": 173,
                                    "typeName": "ApisVec",
                                    "docs": []
                                },
                                {
                                    "name": "transaction_version",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "state_version",
                                    "type": 2,
                                    "typeName": "u8",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 173,
                "type": {
                    "path": [
                        "Cow"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 174
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 174,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 174,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 175
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 175,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            139,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 176,
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidSpecName",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The name of specification does not match between the current runtime",
                                        "and the new runtime."
                                    ]
                                },
                                {
                                    "name": "SpecVersionNeedsToIncrease",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The specification version is not allowed to decrease between the current runtime",
                                        "and the new runtime."
                                    ]
                                },
                                {
                                    "name": "FailedToExtractRuntimeVersion",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Failed to extract the runtime version from the new runtime.",
                                        "",
                                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                                    ]
                                },
                                {
                                    "name": "NonDefaultComposite",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Suicide called when the account has non-default composite data."
                                    ]
                                },
                                {
                                    "name": "NonZeroRefCount",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "There is a non-zero reference count preventing the account from being purged."
                                    ]
                                },
                                {
                                    "name": "CallFiltered",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The origin filter prevent the call to be dispatched."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the System pallet"
                    ]
                }
            },
            {
                "id": 177,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 178
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 449,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 178,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 179
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 179,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 179,
                "type": {
                    "path": [
                        "pallet_scheduler",
                        "Scheduled"
                    ],
                    "params": [
                        {
                            "name": "Name",
                            "type": 1
                        },
                        {
                            "name": "Call",
                            "type": 180
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "PalletsOrigin",
                            "type": 256
                        },
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "maybe_id",
                                    "type": 31,
                                    "typeName": "Option<Name>",
                                    "docs": []
                                },
                                {
                                    "name": "priority",
                                    "type": 2,
                                    "typeName": "schedule::Priority",
                                    "docs": []
                                },
                                {
                                    "name": "call",
                                    "type": 180,
                                    "typeName": "Call",
                                    "docs": []
                                },
                                {
                                    "name": "maybe_periodic",
                                    "type": 183,
                                    "typeName": "Option<schedule::Period<BlockNumber>>",
                                    "docs": []
                                },
                                {
                                    "name": "origin",
                                    "type": 256,
                                    "typeName": "PalletsOrigin",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 180,
                "type": {
                    "path": [
                        "frame_support",
                        "traits",
                        "preimages",
                        "Bounded"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 181
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Legacy",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Inline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 448,
                                            "typeName": "BoundedInline",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Lookup",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "len",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 181,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "RuntimeCall"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "System",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 161,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Scheduler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 182,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Preimage",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 184,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Babe",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 185,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Timestamp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 195,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Indices",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 196,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Balances",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 199,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Authorship",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 200,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Authorship, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Staking",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 202,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Session",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 211,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Grandpa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 216,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ImOnline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 227,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "Democracy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 234,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Council",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 237,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "TechnicalCommittee",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 240,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "PhragmenElection",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 241,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PhragmenElection, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "TechnicalMembership",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 243,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "Treasury",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 244,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Claims",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 245,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Claims, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Vesting",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 252,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Utility",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 254,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Identity",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 263,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Proxy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 303,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Multisig",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 305,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Bounties",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 307,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": []
                                },
                                {
                                    "name": "ChildBounties",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 308,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": []
                                },
                                {
                                    "name": "Tips",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 309,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tips, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "ElectionProviderMultiPhase",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 310,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": []
                                },
                                {
                                    "name": "VoterList",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 368,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": []
                                },
                                {
                                    "name": "NominationPools",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 369,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": []
                                },
                                {
                                    "name": "FastUnstake",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 374,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": []
                                },
                                {
                                    "name": "Configuration",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 375,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 51,
                                    "docs": []
                                },
                                {
                                    "name": "ParasShared",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 376,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasShared, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 52,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInclusion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 377,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInclusion, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 53,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInherent",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 378,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInherent, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 54,
                                    "docs": []
                                },
                                {
                                    "name": "Paras",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 404,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Paras, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 56,
                                    "docs": []
                                },
                                {
                                    "name": "Initializer",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 406,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Initializer, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 57,
                                    "docs": []
                                },
                                {
                                    "name": "Dmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 407,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Dmp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 58,
                                    "docs": []
                                },
                                {
                                    "name": "Ump",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 408,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ump, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 59,
                                    "docs": []
                                },
                                {
                                    "name": "Hrmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 409,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Hrmp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 60,
                                    "docs": []
                                },
                                {
                                    "name": "ParasDisputes",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 410,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasDisputes, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 62,
                                    "docs": []
                                },
                                {
                                    "name": "Registrar",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 411,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Registrar, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 70,
                                    "docs": []
                                },
                                {
                                    "name": "Slots",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 412,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slots, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 71,
                                    "docs": []
                                },
                                {
                                    "name": "Auctions",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 413,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Auctions, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 72,
                                    "docs": []
                                },
                                {
                                    "name": "Crowdloan",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 415,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Crowdloan, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 73,
                                    "docs": []
                                },
                                {
                                    "name": "XcmPallet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 423,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmPallet, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 182,
                "type": {
                    "path": [
                        "pallet_scheduler",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "schedule",
                                    "fields": [
                                        {
                                            "name": "when",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_periodic",
                                            "type": 183,
                                            "typeName": "Option<schedule::Period<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "priority",
                                            "type": 2,
                                            "typeName": "schedule::Priority",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Anonymously schedule a task."
                                    ]
                                },
                                {
                                    "name": "cancel",
                                    "fields": [
                                        {
                                            "name": "when",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Cancel an anonymously scheduled task."
                                    ]
                                },
                                {
                                    "name": "schedule_named",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 1,
                                            "typeName": "TaskName",
                                            "docs": []
                                        },
                                        {
                                            "name": "when",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_periodic",
                                            "type": 183,
                                            "typeName": "Option<schedule::Period<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "priority",
                                            "type": 2,
                                            "typeName": "schedule::Priority",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Schedule a named task."
                                    ]
                                },
                                {
                                    "name": "cancel_named",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 1,
                                            "typeName": "TaskName",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Cancel a named scheduled task."
                                    ]
                                },
                                {
                                    "name": "schedule_after",
                                    "fields": [
                                        {
                                            "name": "after",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_periodic",
                                            "type": 183,
                                            "typeName": "Option<schedule::Period<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "priority",
                                            "type": 2,
                                            "typeName": "schedule::Priority",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Anonymously schedule a task after a delay.",
                                        "",
                                        "# <weight>",
                                        "Same as [`schedule`].",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "schedule_named_after",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 1,
                                            "typeName": "TaskName",
                                            "docs": []
                                        },
                                        {
                                            "name": "after",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_periodic",
                                            "type": 183,
                                            "typeName": "Option<schedule::Period<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "priority",
                                            "type": 2,
                                            "typeName": "schedule::Priority",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Schedule a named task after a delay.",
                                        "",
                                        "# <weight>",
                                        "Same as [`schedule_named`](Self::schedule_named).",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 183,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 30
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 30,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 184,
                "type": {
                    "path": [
                        "pallet_preimage",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "note_preimage",
                                    "fields": [
                                        {
                                            "name": "bytes",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Register a preimage on-chain.",
                                        "",
                                        "If the preimage was previously requested, no fees or deposits are taken for providing",
                                        "the preimage. Otherwise, a deposit is taken proportional to the size of the preimage."
                                    ]
                                },
                                {
                                    "name": "unnote_preimage",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Clear an unrequested preimage from the runtime storage.",
                                        "",
                                        "If `len` is provided, then it will be a much cheaper operation.",
                                        "",
                                        "- `hash`: The hash of the preimage to be removed from the store.",
                                        "- `len`: The length of the preimage of `hash`."
                                    ]
                                },
                                {
                                    "name": "request_preimage",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Request a preimage be uploaded to the chain without paying any fees or deposits.",
                                        "",
                                        "If the preimage requests has already been provided on-chain, we unreserve any deposit",
                                        "a user may have paid, and take the control of the preimage out of their hands."
                                    ]
                                },
                                {
                                    "name": "unrequest_preimage",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Clear a previously made request for a preimage.",
                                        "",
                                        "NOTE: THIS MUST NOT BE CALLED ON `hash` MORE TIMES THAN `request_preimage`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 185,
                "type": {
                    "path": [
                        "pallet_babe",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "report_equivocation",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": 186,
                                            "typeName": "Box<EquivocationProof<T::Header>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": 191,
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Report authority equivocation/misbehavior. This method will verify",
                                        "the equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence will",
                                        "be reported."
                                    ]
                                },
                                {
                                    "name": "report_equivocation_unsigned",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": 186,
                                            "typeName": "Box<EquivocationProof<T::Header>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": 191,
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Report authority equivocation/misbehavior. This method will verify",
                                        "the equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence will",
                                        "be reported.",
                                        "This extrinsic must be called unsigned and it is expected that only",
                                        "block authors will call it (validated in `ValidateUnsigned`), as such",
                                        "if the block author is defined it will be defined as the equivocation",
                                        "reporter."
                                    ]
                                },
                                {
                                    "name": "plan_config_change",
                                    "fields": [
                                        {
                                            "name": "config",
                                            "type": 192,
                                            "typeName": "NextConfigDescriptor",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Plan an epoch config change. The epoch config change is recorded and will be enacted on",
                                        "the next call to `enact_epoch_change`. The config will be activated one epoch after.",
                                        "Multiple calls to this method will replace any existing planned config change that had",
                                        "not been enacted yet."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 186,
                "type": {
                    "path": [
                        "sp_consensus_slots",
                        "EquivocationProof"
                    ],
                    "params": [
                        {
                            "name": "Header",
                            "type": 187
                        },
                        {
                            "name": "Id",
                            "type": 189
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "offender",
                                    "type": 189,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "slot",
                                    "type": 190,
                                    "typeName": "Slot",
                                    "docs": []
                                },
                                {
                                    "name": "first_header",
                                    "type": 187,
                                    "typeName": "Header",
                                    "docs": []
                                },
                                {
                                    "name": "second_header",
                                    "type": 187,
                                    "typeName": "Header",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 187,
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "header",
                        "Header"
                    ],
                    "params": [
                        {
                            "name": "Number",
                            "type": 4
                        },
                        {
                            "name": "Hash",
                            "type": 188
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "parent_hash",
                                    "type": 11,
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "number",
                                    "type": 125,
                                    "typeName": "Number",
                                    "docs": []
                                },
                                {
                                    "name": "state_root",
                                    "type": 11,
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "extrinsics_root",
                                    "type": 11,
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "digest",
                                    "type": 13,
                                    "typeName": "Digest",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 188,
                "type": {
                    "path": [
                        "sp_runtime",
                        "traits",
                        "BlakeTwo256"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 189,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 190,
                "type": {
                    "path": [
                        "sp_consensus_slots",
                        "Slot"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 191,
                "type": {
                    "path": [
                        "sp_session",
                        "MembershipProof"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "session",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "trie_nodes",
                                    "type": 164,
                                    "typeName": "Vec<Vec<u8>>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_count",
                                    "type": 4,
                                    "typeName": "ValidatorCount",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 192,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "NextConfigDescriptor"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": "c",
                                            "type": 193,
                                            "typeName": "(u64, u64)",
                                            "docs": []
                                        },
                                        {
                                            "name": "allowed_slots",
                                            "type": 194,
                                            "typeName": "AllowedSlots",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 193,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            10,
                            10
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 194,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "AllowedSlots"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PrimarySlots",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PrimaryAndSecondaryPlainSlots",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "PrimaryAndSecondaryVRFSlots",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 195,
                "type": {
                    "path": [
                        "pallet_timestamp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set",
                                    "fields": [
                                        {
                                            "name": "now",
                                            "type": 9,
                                            "typeName": "T::Moment",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the current time.",
                                        "",
                                        "This call should be invoked exactly once per block. It will panic at the finalization",
                                        "phase, if this call hasn't been invoked by that time.",
                                        "",
                                        "The timestamp should be greater than the previous one by the amount specified by",
                                        "`MinimumPeriod`.",
                                        "",
                                        "The dispatch origin for this call must be `Inherent`.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                                        "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
                                        "  `on_finalize`)",
                                        "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 196,
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "claim",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Assign an previously unassigned index.",
                                        "",
                                        "Payment: `Deposit` is reserved from the sender account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `index`: the index to be claimed. This must not be in use.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read/Write (Accounts)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "transfer",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Assign an index already owned by the sender to another account. The balance reservation",
                                        "is effectively transferred to the new account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `index`: the index to be re-assigned. This must be owned by the sender.",
                                        "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One transfer operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight:",
                                        "   - Reads: Indices Accounts, System Account (recipient)",
                                        "   - Writes: Indices Accounts, System Account (recipient)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "free",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Free up an index owned by the sender.",
                                        "",
                                        "Payment: Any previous deposit placed for the index is unreserved in the sender account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must own the index.",
                                        "",
                                        "- `index`: the index to be freed. This must be owned by the sender.",
                                        "",
                                        "Emits `IndexFreed` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read/Write (Accounts)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "force_transfer",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "freeze",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Force an index to an account. This doesn't require a deposit. If the index is already",
                                        "held, then any deposit is reimbursed to its current owner.",
                                        "",
                                        "The dispatch origin for this call must be _Root_.",
                                        "",
                                        "- `index`: the index to be (re-)assigned.",
                                        "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
                                        "- `freeze`: if set to `true`, will freeze the index so it cannot be transferred.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- Up to one reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight:",
                                        "   - Reads: Indices Accounts, System Account (original owner)",
                                        "   - Writes: Indices Accounts, System Account (original owner)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "freeze",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Freeze an index so it will always point to the sender account. This consumes the",
                                        "deposit.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the signing account must have a",
                                        "non-frozen account `index`.",
                                        "",
                                        "- `index`: the index to be frozen in place.",
                                        "",
                                        "Emits `IndexFrozen` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- Up to one slash operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read/Write (Accounts)",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 197,
                "type": {
                    "path": [
                        "sp_runtime",
                        "multiaddress",
                        "MultiAddress"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "AccountIndex",
                            "type": 33
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Id",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 198,
                                            "typeName": "AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Raw",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Address32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Address20",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 74,
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 198,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 33
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 199,
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "transfer",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Transfer some liquid free balance to another account.",
                                        "",
                                        "`transfer` will set the `FreeBalance` of the sender and receiver.",
                                        "If the sender's account is below the existential deposit as a result",
                                        "of the transfer, the account will be reaped.",
                                        "",
                                        "The dispatch origin for this call must be `Signed` by the transactor.",
                                        "",
                                        "# <weight>",
                                        "- Dependent on arguments but not critical, given proper implementations for input config",
                                        "  types. See related functions below.",
                                        "- It contains a limited number of reads and writes internally and no complex",
                                        "  computation.",
                                        "",
                                        "Related functions:",
                                        "",
                                        "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
                                        "  - Transferring balances to accounts that did not exist before will cause",
                                        "    `T::OnNewAccount::on_new_account` to be called.",
                                        "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
                                        "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
                                        "    that the transfer will not kill the origin account.",
                                        "---------------------------------",
                                        "- Origin account is already in memory, so no DB operations for them.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_balance",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_free",
                                            "type": 58,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_reserved",
                                            "type": 58,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the balances of a given account.",
                                        "",
                                        "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
                                        "also alter the total issuance of the system (`TotalIssuance`) appropriately.",
                                        "If the new free or reserved balance is below the existential deposit,",
                                        "it will reset the account nonce (`frame_system::AccountNonce`).",
                                        "",
                                        "The dispatch origin for this call is `root`."
                                    ]
                                },
                                {
                                    "name": "force_transfer",
                                    "fields": [
                                        {
                                            "name": "source",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Exactly as `transfer`, except the origin must be root and the source account may be",
                                        "specified.",
                                        "# <weight>",
                                        "- Same as transfer, but additional read and write because the source account is not",
                                        "  assumed to be in the overlay.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "transfer_keep_alive",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
                                        "origin account.",
                                        "",
                                        "99% of the time you want [`transfer`] instead.",
                                        "",
                                        "[`transfer`]: struct.Pallet.html#method.transfer"
                                    ]
                                },
                                {
                                    "name": "transfer_all",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "keep_alive",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Transfer the entire transferable balance from the caller account.",
                                        "",
                                        "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                                        "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                                        "transferred by this function. To ensure that this function results in a killed account,",
                                        "you might need to prepare the account by removing any reference counters, storage",
                                        "deposits, etc...",
                                        "",
                                        "The dispatch origin of this call must be Signed.",
                                        "",
                                        "- `dest`: The recipient of the transfer.",
                                        "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                                        "  of the funds the account has, causing the sender account to be killed (false), or",
                                        "  transfer everything except at least the existential deposit, which will guarantee to",
                                        "  keep the sender account alive (true). # <weight>",
                                        "- O(1). Just like transfer, but reading the user's transferable balance first.",
                                        "  #</weight>"
                                    ]
                                },
                                {
                                    "name": "force_unreserve",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Unreserve some balance from a user by force.",
                                        "",
                                        "Can only be called by ROOT."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 200,
                "type": {
                    "path": [
                        "pallet_authorship",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_uncles",
                                    "fields": [
                                        {
                                            "name": "new_uncles",
                                            "type": 201,
                                            "typeName": "Vec<T::Header>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Provide a set of uncles."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 201,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 187
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 202,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "bond",
                                    "fields": [
                                        {
                                            "name": "controller",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "payee",
                                            "type": 203,
                                            "typeName": "RewardDestination<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Take the origin account as a stash and lock up `value` of its balance. `controller` will",
                                        "be the account that controls it.",
                                        "",
                                        "`value` must be more than the `minimum_balance` specified by `T::Currency`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the stash account.",
                                        "",
                                        "Emits `Bonded`.",
                                        "# <weight>",
                                        "- Independent of the arguments. Moderate complexity.",
                                        "- O(1).",
                                        "- Three extra DB entries.",
                                        "",
                                        "NOTE: Two of the storage writes (`Self::bonded`, `Self::payee`) are _never_ cleaned",
                                        "unless the `origin` falls below _existential deposit_ and gets removed as dust.",
                                        "------------------",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "bond_extra",
                                    "fields": [
                                        {
                                            "name": "max_additional",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Add some extra amount that have appeared in the stash `free_balance` into the balance up",
                                        "for staking.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the stash, not the controller.",
                                        "",
                                        "Use this if there are additional funds in your stash account that you wish to bond.",
                                        "Unlike [`bond`](Self::bond) or [`unbond`](Self::unbond) this function does not impose",
                                        "any limitation on the amount that can be added.",
                                        "",
                                        "Emits `Bonded`.",
                                        "",
                                        "# <weight>",
                                        "- Independent of the arguments. Insignificant complexity.",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "unbond",
                                    "fields": [
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Schedule a portion of the stash to be unlocked ready for transfer out after the bond",
                                        "period ends. If this leaves an amount actively bonded less than",
                                        "T::Currency::minimum_balance(), then it is increased to the full amount.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash.",
                                        "",
                                        "Once the unlock period is done, you can call `withdraw_unbonded` to actually move",
                                        "the funds out of management ready for transfer.",
                                        "",
                                        "No more than a limited number of unlocking chunks (see `MaxUnlockingChunks`)",
                                        "can co-exists at the same time. If there are no unlocking chunks slots available",
                                        "[`Call::withdraw_unbonded`] is called to remove some of the chunks (if possible).",
                                        "",
                                        "If a user encounters the `InsufficientBond` error when calling this extrinsic,",
                                        "they should call `chill` first in order to free up their bonded funds.",
                                        "",
                                        "Emits `Unbonded`.",
                                        "",
                                        "See also [`Call::withdraw_unbonded`]."
                                    ]
                                },
                                {
                                    "name": "withdraw_unbonded",
                                    "fields": [
                                        {
                                            "name": "num_slashing_spans",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Remove any unlocked chunks from the `unlocking` queue from our management.",
                                        "",
                                        "This essentially frees up that balance to be used by the stash account to do",
                                        "whatever it wants.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller.",
                                        "",
                                        "Emits `Withdrawn`.",
                                        "",
                                        "See also [`Call::unbond`].",
                                        "",
                                        "# <weight>",
                                        "Complexity O(S) where S is the number of slashing spans to remove",
                                        "NOTE: Weight annotation is the kill scenario, we refund otherwise.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "validate",
                                    "fields": [
                                        {
                                            "name": "prefs",
                                            "type": 41,
                                            "typeName": "ValidatorPrefs",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Declare the desire to validate for the origin controller.",
                                        "",
                                        "Effects will be felt at the beginning of the next era.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash."
                                    ]
                                },
                                {
                                    "name": "nominate",
                                    "fields": [
                                        {
                                            "name": "targets",
                                            "type": 204,
                                            "typeName": "Vec<AccountIdLookupOf<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Declare the desire to nominate `targets` for the origin controller.",
                                        "",
                                        "Effects will be felt at the beginning of the next era.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash.",
                                        "",
                                        "# <weight>",
                                        "- The transaction's complexity is proportional to the size of `targets` (N)",
                                        "which is capped at CompactAssignments::LIMIT (T::MaxNominations).",
                                        "- Both the reads and writes follow a similar pattern.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "chill",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Declare no desire to either validate or nominate.",
                                        "",
                                        "Effects will be felt at the beginning of the next era.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash.",
                                        "",
                                        "# <weight>",
                                        "- Independent of the arguments. Insignificant complexity.",
                                        "- Contains one read.",
                                        "- Writes are limited to the `origin` account key.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_payee",
                                    "fields": [
                                        {
                                            "name": "payee",
                                            "type": 203,
                                            "typeName": "RewardDestination<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "(Re-)set the payment target for a controller.",
                                        "",
                                        "Effects will be felt instantly (as soon as this function is completed successfully).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash.",
                                        "",
                                        "# <weight>",
                                        "- Independent of the arguments. Insignificant complexity.",
                                        "- Contains a limited number of reads.",
                                        "- Writes are limited to the `origin` account key.",
                                        "---------",
                                        "- Weight: O(1)",
                                        "- DB Weight:",
                                        "    - Read: Ledger",
                                        "    - Write: Payee",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_controller",
                                    "fields": [
                                        {
                                            "name": "controller",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "(Re-)set the controller of a stash.",
                                        "",
                                        "Effects will be felt instantly (as soon as this function is completed successfully).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the stash, not the controller.",
                                        "",
                                        "# <weight>",
                                        "- Independent of the arguments. Insignificant complexity.",
                                        "- Contains a limited number of reads.",
                                        "- Writes are limited to the `origin` account key.",
                                        "----------",
                                        "Weight: O(1)",
                                        "DB Weight:",
                                        "- Read: Bonded, Ledger New Controller, Ledger Old Controller",
                                        "- Write: Bonded, Ledger New Controller, Ledger Old Controller",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_validator_count",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Sets the ideal number of validators.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# <weight>",
                                        "Weight: O(1)",
                                        "Write: Validator Count",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "increase_validator_count",
                                    "fields": [
                                        {
                                            "name": "additional",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Increments the ideal number of validators upto maximum of",
                                        "`ElectionProviderBase::MaxWinners`.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# <weight>",
                                        "Same as [`Self::set_validator_count`].",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "scale_validator_count",
                                    "fields": [
                                        {
                                            "name": "factor",
                                            "type": 205,
                                            "typeName": "Percent",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Scale up the ideal number of validators by a factor upto maximum of",
                                        "`ElectionProviderBase::MaxWinners`.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# <weight>",
                                        "Same as [`Self::set_validator_count`].",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "force_no_eras",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Force there to be no new eras indefinitely.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# Warning",
                                        "",
                                        "The election process starts multiple blocks before the end of the era.",
                                        "Thus the election process may be ongoing when this is called. In this case the",
                                        "election will continue until the next era is triggered.",
                                        "",
                                        "# <weight>",
                                        "- No arguments.",
                                        "- Weight: O(1)",
                                        "- Write: ForceEra",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "force_new_era",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Force there to be a new era at the end of the next session. After this, it will be",
                                        "reset to normal (non-forced) behaviour.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# Warning",
                                        "",
                                        "The election process starts multiple blocks before the end of the era.",
                                        "If this is called just before a new era is triggered, the election process may not",
                                        "have enough blocks to get a result.",
                                        "",
                                        "# <weight>",
                                        "- No arguments.",
                                        "- Weight: O(1)",
                                        "- Write ForceEra",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_invulnerables",
                                    "fields": [
                                        {
                                            "name": "invulnerables",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "Set the validators who cannot be slashed (if any).",
                                        "",
                                        "The dispatch origin must be Root."
                                    ]
                                },
                                {
                                    "name": "force_unstake",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "num_slashing_spans",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "Force a current staker to become completely unstaked, immediately.",
                                        "",
                                        "The dispatch origin must be Root."
                                    ]
                                },
                                {
                                    "name": "force_new_era_always",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "Force there to be a new era at the end of sessions indefinitely.",
                                        "",
                                        "The dispatch origin must be Root.",
                                        "",
                                        "# Warning",
                                        "",
                                        "The election process starts multiple blocks before the end of the era.",
                                        "If this is called just before a new era is triggered, the election process may not",
                                        "have enough blocks to get a result."
                                    ]
                                },
                                {
                                    "name": "cancel_deferred_slash",
                                    "fields": [
                                        {
                                            "name": "era",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "slash_indices",
                                            "type": 94,
                                            "typeName": "Vec<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": [
                                        "Cancel enactment of a deferred slash.",
                                        "",
                                        "Can be called by the `T::SlashCancelOrigin`.",
                                        "",
                                        "Parameters: era and indices of the slashes for that era to kill."
                                    ]
                                },
                                {
                                    "name": "payout_stakers",
                                    "fields": [
                                        {
                                            "name": "validator_stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "era",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": [
                                        "Pay out all the stakers behind a single validator for a single era.",
                                        "",
                                        "- `validator_stash` is the stash account of the validator. Their nominators, up to",
                                        "  `T::MaxNominatorRewardedPerValidator`, will also receive their rewards.",
                                        "- `era` may be any era between `[current_era - history_depth; current_era]`.",
                                        "",
                                        "The origin of this call must be _Signed_. Any account can call this function, even if",
                                        "it is not one of the stakers.",
                                        "",
                                        "# <weight>",
                                        "- Time complexity: at most O(MaxNominatorRewardedPerValidator).",
                                        "- Contains a limited number of reads and writes.",
                                        "-----------",
                                        "N is the Number of payouts for the validator (including the validator)",
                                        "Weight:",
                                        "- Reward Destination Staked: O(N)",
                                        "- Reward Destination Controller (Creating): O(N)",
                                        "",
                                        "  NOTE: weights are assuming that payouts are made to alive stash account (Staked).",
                                        "  Paying even a dead controller is cheaper weight-wise. We don't do any refunds here.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "rebond",
                                    "fields": [
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": [
                                        "Rebond a portion of the stash scheduled to be unlocked.",
                                        "",
                                        "The dispatch origin must be signed by the controller.",
                                        "",
                                        "# <weight>",
                                        "- Time complexity: O(L), where L is unlocking chunks",
                                        "- Bounded by `MaxUnlockingChunks`.",
                                        "- Storage changes: Can't increase storage, only decrease it.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "reap_stash",
                                    "fields": [
                                        {
                                            "name": "stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "num_slashing_spans",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": [
                                        "Remove all data structures concerning a staker/stash once it is at a state where it can",
                                        "be considered `dust` in the staking system. The requirements are:",
                                        "",
                                        "1. the `total_balance` of the stash is below existential deposit.",
                                        "2. or, the `ledger.total` of the stash is below existential deposit.",
                                        "",
                                        "The former can happen in cases like a slash; the latter when a fully unbonded account",
                                        "is still receiving staking rewards in `RewardDestination::Staked`.",
                                        "",
                                        "It can be called by anyone, as long as `stash` meets the above requirements.",
                                        "",
                                        "Refunds the transaction fees upon successful execution."
                                    ]
                                },
                                {
                                    "name": "kick",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 204,
                                            "typeName": "Vec<AccountIdLookupOf<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": [
                                        "Remove the given nominations from the calling validator.",
                                        "",
                                        "Effects will be felt at the beginning of the next era.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ by the controller, not the stash.",
                                        "",
                                        "- `who`: A list of nominator stash accounts who are nominating this validator which",
                                        "  should no longer be nominating this validator.",
                                        "",
                                        "Note: Making this call only makes sense if you first set the validator preferences to",
                                        "block any further nominations."
                                    ]
                                },
                                {
                                    "name": "set_staking_configs",
                                    "fields": [
                                        {
                                            "name": "min_nominator_bond",
                                            "type": 207,
                                            "typeName": "ConfigOp<BalanceOf<T>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "min_validator_bond",
                                            "type": 207,
                                            "typeName": "ConfigOp<BalanceOf<T>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_nominator_count",
                                            "type": 208,
                                            "typeName": "ConfigOp<u32>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_validator_count",
                                            "type": 208,
                                            "typeName": "ConfigOp<u32>",
                                            "docs": []
                                        },
                                        {
                                            "name": "chill_threshold",
                                            "type": 209,
                                            "typeName": "ConfigOp<Percent>",
                                            "docs": []
                                        },
                                        {
                                            "name": "min_commission",
                                            "type": 210,
                                            "typeName": "ConfigOp<Perbill>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": [
                                        "Update the various staking configurations .",
                                        "",
                                        "* `min_nominator_bond`: The minimum active bond needed to be a nominator.",
                                        "* `min_validator_bond`: The minimum active bond needed to be a validator.",
                                        "* `max_nominator_count`: The max number of users who can be a nominator at once. When",
                                        "  set to `None`, no limit is enforced.",
                                        "* `max_validator_count`: The max number of users who can be a validator at once. When",
                                        "  set to `None`, no limit is enforced.",
                                        "* `chill_threshold`: The ratio of `max_nominator_count` or `max_validator_count` which",
                                        "  should be filled in order for the `chill_other` transaction to work.",
                                        "* `min_commission`: The minimum amount of commission that each validators must maintain.",
                                        "  This is checked only upon calling `validate`. Existing validators are not affected.",
                                        "",
                                        "RuntimeOrigin must be Root to call this function.",
                                        "",
                                        "NOTE: Existing nominators and validators will not be affected by this update.",
                                        "to kick people under the new limits, `chill_other` should be called."
                                    ]
                                },
                                {
                                    "name": "chill_other",
                                    "fields": [
                                        {
                                            "name": "controller",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": [
                                        "Declare a `controller` to stop participating as either a validator or nominator.",
                                        "",
                                        "Effects will be felt at the beginning of the next era.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_, but can be called by anyone.",
                                        "",
                                        "If the caller is the same as the controller being targeted, then no further checks are",
                                        "enforced, and this function behaves just like `chill`.",
                                        "",
                                        "If the caller is different than the controller being targeted, the following conditions",
                                        "must be met:",
                                        "",
                                        "* `controller` must belong to a nominator who has become non-decodable,",
                                        "",
                                        "Or:",
                                        "",
                                        "* A `ChillThreshold` must be set and checked which defines how close to the max",
                                        "  nominators or validators we must reach before users can start chilling one-another.",
                                        "* A `MaxNominatorCount` and `MaxValidatorCount` must be set which is used to determine",
                                        "  how close we are to the threshold.",
                                        "* A `MinNominatorBond` and `MinValidatorBond` must be set and checked, which determines",
                                        "  if this is a person that should be chilled because they have not met the threshold",
                                        "  bond required.",
                                        "",
                                        "This can be helpful if bond requirements are updated, and we need to remove old users",
                                        "who do not satisfy these requirements."
                                    ]
                                },
                                {
                                    "name": "force_apply_min_commission",
                                    "fields": [
                                        {
                                            "name": "validator_stash",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": [
                                        "Force a validator to have at least the minimum commission. This will not affect a",
                                        "validator who already has a commission greater than or equal to the minimum. Any account",
                                        "can call this."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 203,
                "type": {
                    "path": [
                        "pallet_staking",
                        "RewardDestination"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Staked",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Stash",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Controller",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Account",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 204,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 197
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 205,
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "per_things",
                        "Percent"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 2,
                                    "typeName": "u8",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 206,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 0
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 207,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 6,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 208,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 209,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 205
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 205,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 210,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 40
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 40,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 211,
                "type": {
                    "path": [
                        "pallet_session",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_keys",
                                    "fields": [
                                        {
                                            "name": "keys",
                                            "type": 212,
                                            "typeName": "T::Keys",
                                            "docs": []
                                        },
                                        {
                                            "name": "proof",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Sets the session key(s) of the function caller to `keys`.",
                                        "Allows an account to set its session key prior to becoming a validator.",
                                        "This doesn't take effect until the next session.",
                                        "",
                                        "The dispatch origin of this function must be signed.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(1)`. Actual cost depends on the number of length of",
                                        "  `T::Keys::key_ids()` which is fixed.",
                                        "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
                                        "- DbWrites: `origin account`, `NextKeys`",
                                        "- DbReads per key id: `KeyOwner`",
                                        "- DbWrites per key id: `KeyOwner`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "purge_keys",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Removes any session key(s) of the function caller.",
                                        "",
                                        "This doesn't take effect until the next session.",
                                        "",
                                        "The dispatch origin of this function must be Signed and the account must be either be",
                                        "convertible to a validator ID using the chain's typical addressing system (this usually",
                                        "means being a controller account) or directly convertible into a validator ID (which",
                                        "usually means being a stash account).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(1)` in number of key types. Actual cost depends on the number of length",
                                        "  of `T::Keys::key_ids()` which is fixed.",
                                        "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
                                        "- DbWrites: `NextKeys`, `origin account`",
                                        "- DbWrites per key id: `KeyOwner`",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 212,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "SessionKeys"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "grandpa",
                                    "type": 50,
                                    "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "babe",
                                    "type": 189,
                                    "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "im_online",
                                    "type": 53,
                                    "typeName": "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "para_validator",
                                    "type": 213,
                                    "typeName": "<Initializer as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "para_assignment",
                                    "type": 214,
                                    "typeName": "<ParaSessionInfo as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "authority_discovery",
                                    "type": 215,
                                    "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 213,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "validator_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 214,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "assignment_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 215,
                "type": {
                    "path": [
                        "sp_authority_discovery",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 54,
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 216,
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "report_equivocation",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": 217,
                                            "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": 191,
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Report voter equivocation/misbehavior. This method will verify the",
                                        "equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence",
                                        "will be reported."
                                    ]
                                },
                                {
                                    "name": "report_equivocation_unsigned",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": 217,
                                            "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": 191,
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Report voter equivocation/misbehavior. This method will verify the",
                                        "equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence",
                                        "will be reported.",
                                        "",
                                        "This extrinsic must be called unsigned and it is expected that only",
                                        "block authors will call it (validated in `ValidateUnsigned`), as such",
                                        "if the block author is defined it will be defined as the equivocation",
                                        "reporter."
                                    ]
                                },
                                {
                                    "name": "note_stalled",
                                    "fields": [
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "best_finalized_block_number",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Note that the current authority set of the GRANDPA finality gadget has stalled.",
                                        "",
                                        "This will trigger a forced authority set change at the beginning of the next session, to",
                                        "be enacted `delay` blocks after that. The `delay` should be high enough to safely assume",
                                        "that the block signalling the forced change will not be re-orged e.g. 1000 blocks.",
                                        "The block production rate (which may be slowed down because of finality lagging) should",
                                        "be taken into account when choosing the `delay`. The GRANDPA voters based on the new",
                                        "authority will start voting on top of `best_finalized_block_number` for new finalized",
                                        "blocks. `best_finalized_block_number` should be the highest of the latest finalized",
                                        "block of all validators of the new authority set.",
                                        "",
                                        "Only callable by root."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 217,
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "EquivocationProof"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        },
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "set_id",
                                    "type": 10,
                                    "typeName": "SetId",
                                    "docs": []
                                },
                                {
                                    "name": "equivocation",
                                    "type": 218,
                                    "typeName": "Equivocation<H, N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 218,
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        },
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Prevote",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 219,
                                            "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Precommit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 224,
                                            "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 219,
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": 50
                        },
                        {
                            "name": "V",
                            "type": 220
                        },
                        {
                            "name": "S",
                            "type": 221
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "round_number",
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "identity",
                                    "type": 50,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "first",
                                    "type": 223,
                                    "typeName": "(V, S)",
                                    "docs": []
                                },
                                {
                                    "name": "second",
                                    "type": 223,
                                    "typeName": "(V, S)",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 220,
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Prevote"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        },
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "target_hash",
                                    "type": 11,
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "target_number",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 221,
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 222,
                                    "typeName": "ed25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 222,
                "type": {
                    "path": [
                        "sp_core",
                        "ed25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 102,
                                    "typeName": "[u8; 64]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 223,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            220,
                            221
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 224,
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": 50
                        },
                        {
                            "name": "V",
                            "type": 225
                        },
                        {
                            "name": "S",
                            "type": 221
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "round_number",
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "identity",
                                    "type": 50,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "first",
                                    "type": 226,
                                    "typeName": "(V, S)",
                                    "docs": []
                                },
                                {
                                    "name": "second",
                                    "type": 226,
                                    "typeName": "(V, S)",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 225,
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Precommit"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        },
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "target_hash",
                                    "type": 11,
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "target_number",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 226,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            225,
                            221
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 227,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "heartbeat",
                                    "fields": [
                                        {
                                            "name": "heartbeat",
                                            "type": 228,
                                            "typeName": "Heartbeat<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": 233,
                                            "typeName": "<T::AuthorityId as RuntimeAppPublic>::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "# <weight>",
                                        "- Complexity: `O(K + E)` where K is length of `Keys` (heartbeat.validators_len) and E is",
                                        "  length of `heartbeat.network_state.external_address`",
                                        "  - `O(K)`: decoding of length `K`",
                                        "  - `O(E)`: decoding/encoding of length `E`",
                                        "- DbReads: pallet_session `Validators`, pallet_session `CurrentIndex`, `Keys`,",
                                        "  `ReceivedHeartbeats`",
                                        "- DbWrites: `ReceivedHeartbeats`",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 228,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "Heartbeat"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "block_number",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "network_state",
                                    "type": 229,
                                    "typeName": "OpaqueNetworkState",
                                    "docs": []
                                },
                                {
                                    "name": "session_index",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "authority_index",
                                    "type": 4,
                                    "typeName": "AuthIndex",
                                    "docs": []
                                },
                                {
                                    "name": "validators_len",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 229,
                "type": {
                    "path": [
                        "sp_core",
                        "offchain",
                        "OpaqueNetworkState"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "peer_id",
                                    "type": 230,
                                    "typeName": "OpaquePeerId",
                                    "docs": []
                                },
                                {
                                    "name": "external_addresses",
                                    "type": 231,
                                    "typeName": "Vec<OpaqueMultiaddr>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 230,
                "type": {
                    "path": [
                        "sp_core",
                        "OpaquePeerId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 231,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 232
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 232,
                "type": {
                    "path": [
                        "sp_core",
                        "offchain",
                        "OpaqueMultiaddr"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 233,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 101,
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 234,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "propose",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 180,
                                            "typeName": "BoundedCallOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Propose a sensitive action to be taken.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_ and the sender must",
                                        "have funds to cover the deposit.",
                                        "",
                                        "- `proposal_hash`: The hash of the proposal preimage.",
                                        "- `value`: The amount of deposit (must be at least `MinimumDeposit`).",
                                        "",
                                        "Emits `Proposed`."
                                    ]
                                },
                                {
                                    "name": "second",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 125,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Signals agreement with a particular proposal.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_ and the sender",
                                        "must have funds to cover the deposit, equal to the original deposit.",
                                        "",
                                        "- `proposal`: The index of the proposal to second."
                                    ]
                                },
                                {
                                    "name": "vote",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 125,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "vote",
                                            "type": 63,
                                            "typeName": "AccountVote<BalanceOf<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Vote in a referendum. If `vote.is_aye()`, the vote is to enact the proposal;",
                                        "otherwise it is a vote to keep the status quo.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_.",
                                        "",
                                        "- `ref_index`: The index of the referendum to vote for.",
                                        "- `vote`: The vote configuration."
                                    ]
                                },
                                {
                                    "name": "emergency_cancel",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Schedule an emergency cancellation of a referendum. Cannot happen twice to the same",
                                        "referendum.",
                                        "",
                                        "The dispatch origin of this call must be `CancellationOrigin`.",
                                        "",
                                        "-`ref_index`: The index of the referendum to cancel.",
                                        "",
                                        "Weight: `O(1)`."
                                    ]
                                },
                                {
                                    "name": "external_propose",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 180,
                                            "typeName": "BoundedCallOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Schedule a referendum to be tabled once it is legal to schedule an external",
                                        "referendum.",
                                        "",
                                        "The dispatch origin of this call must be `ExternalOrigin`.",
                                        "",
                                        "- `proposal_hash`: The preimage hash of the proposal."
                                    ]
                                },
                                {
                                    "name": "external_propose_majority",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 180,
                                            "typeName": "BoundedCallOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Schedule a majority-carries referendum to be tabled next once it is legal to schedule",
                                        "an external referendum.",
                                        "",
                                        "The dispatch of this call must be `ExternalMajorityOrigin`.",
                                        "",
                                        "- `proposal_hash`: The preimage hash of the proposal.",
                                        "",
                                        "Unlike `external_propose`, blacklisting has no effect on this and it may replace a",
                                        "pre-scheduled `external_propose` call.",
                                        "",
                                        "Weight: `O(1)`"
                                    ]
                                },
                                {
                                    "name": "external_propose_default",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 180,
                                            "typeName": "BoundedCallOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Schedule a negative-turnout-bias referendum to be tabled next once it is legal to",
                                        "schedule an external referendum.",
                                        "",
                                        "The dispatch of this call must be `ExternalDefaultOrigin`.",
                                        "",
                                        "- `proposal_hash`: The preimage hash of the proposal.",
                                        "",
                                        "Unlike `external_propose`, blacklisting has no effect on this and it may replace a",
                                        "pre-scheduled `external_propose` call.",
                                        "",
                                        "Weight: `O(1)`"
                                    ]
                                },
                                {
                                    "name": "fast_track",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": "voting_period",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Schedule the currently externally-proposed majority-carries referendum to be tabled",
                                        "immediately. If there is no externally-proposed referendum currently, or if there is one",
                                        "but it is not a majority-carries referendum then it fails.",
                                        "",
                                        "The dispatch of this call must be `FastTrackOrigin`.",
                                        "",
                                        "- `proposal_hash`: The hash of the current external proposal.",
                                        "- `voting_period`: The period that is allowed for voting on this proposal. Increased to",
                                        "\tMust be always greater than zero.",
                                        "\tFor `FastTrackOrigin` must be equal or greater than `FastTrackVotingPeriod`.",
                                        "- `delay`: The number of block after voting has ended in approval and this should be",
                                        "  enacted. This doesn't have a minimum amount.",
                                        "",
                                        "Emits `Started`.",
                                        "",
                                        "Weight: `O(1)`"
                                    ]
                                },
                                {
                                    "name": "veto_external",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Veto and blacklist the external proposal hash.",
                                        "",
                                        "The dispatch origin of this call must be `VetoOrigin`.",
                                        "",
                                        "- `proposal_hash`: The preimage hash of the proposal to veto and blacklist.",
                                        "",
                                        "Emits `Vetoed`.",
                                        "",
                                        "Weight: `O(V + log(V))` where V is number of `existing vetoers`"
                                    ]
                                },
                                {
                                    "name": "cancel_referendum",
                                    "fields": [
                                        {
                                            "name": "ref_index",
                                            "type": 125,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Remove a referendum.",
                                        "",
                                        "The dispatch origin of this call must be _Root_.",
                                        "",
                                        "- `ref_index`: The index of the referendum to cancel.",
                                        "",
                                        "# Weight: `O(1)`."
                                    ]
                                },
                                {
                                    "name": "delegate",
                                    "fields": [
                                        {
                                            "name": "to",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "conviction",
                                            "type": 235,
                                            "typeName": "Conviction",
                                            "docs": []
                                        },
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Delegate the voting power (with some given conviction) of the sending account.",
                                        "",
                                        "The balance delegated is locked for as long as it's delegated, and thereafter for the",
                                        "time appropriate for the conviction's lock period.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_, and the signing account must either:",
                                        "  - be delegating already; or",
                                        "  - have no voting activity (if there is, then it will need to be removed/consolidated",
                                        "    through `reap_vote` or `unvote`).",
                                        "",
                                        "- `to`: The account whose voting the `target` account's voting power will follow.",
                                        "- `conviction`: The conviction that will be attached to the delegated votes. When the",
                                        "  account is undelegated, the funds will be locked for the corresponding period.",
                                        "- `balance`: The amount of the account's balance to be used in delegating. This must not",
                                        "  be more than the account's current balance.",
                                        "",
                                        "Emits `Delegated`.",
                                        "",
                                        "Weight: `O(R)` where R is the number of referendums the voter delegating to has",
                                        "  voted on. Weight is charged as if maximum votes."
                                    ]
                                },
                                {
                                    "name": "undelegate",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Undelegate the voting power of the sending account.",
                                        "",
                                        "Tokens may be unlocked following once an amount of time consistent with the lock period",
                                        "of the conviction with which the delegation was issued.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_ and the signing account must be",
                                        "currently delegating.",
                                        "",
                                        "Emits `Undelegated`.",
                                        "",
                                        "Weight: `O(R)` where R is the number of referendums the voter delegating to has",
                                        "  voted on. Weight is charged as if maximum votes."
                                    ]
                                },
                                {
                                    "name": "clear_public_proposals",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Clears all public proposals.",
                                        "",
                                        "The dispatch origin of this call must be _Root_.",
                                        "",
                                        "Weight: `O(1)`."
                                    ]
                                },
                                {
                                    "name": "unlock",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "Unlock tokens that have an expired lock.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_.",
                                        "",
                                        "- `target`: The account to remove the lock on.",
                                        "",
                                        "Weight: `O(R)` with R number of vote of target."
                                    ]
                                },
                                {
                                    "name": "remove_vote",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "Remove a vote for a referendum.",
                                        "",
                                        "If:",
                                        "- the referendum was cancelled, or",
                                        "- the referendum is ongoing, or",
                                        "- the referendum has ended such that",
                                        "  - the vote of the account was in opposition to the result; or",
                                        "  - there was no conviction to the account's vote; or",
                                        "  - the account made a split vote",
                                        "...then the vote is removed cleanly and a following call to `unlock` may result in more",
                                        "funds being available.",
                                        "",
                                        "If, however, the referendum has ended and:",
                                        "- it finished corresponding to the vote of the account, and",
                                        "- the account made a standard vote with conviction, and",
                                        "- the lock period of the conviction is not over",
                                        "...then the lock will be aggregated into the overall account's lock, which may involve",
                                        "*overlocking* (where the two locks are combined into a single lock that is the maximum",
                                        "of both the amount locked and the time is it locked for).",
                                        "",
                                        "The dispatch origin of this call must be _Signed_, and the signer must have a vote",
                                        "registered for referendum `index`.",
                                        "",
                                        "- `index`: The index of referendum of the vote to be removed.",
                                        "",
                                        "Weight: `O(R + log R)` where R is the number of referenda that `target` has voted on.",
                                        "  Weight is calculated for the maximum number of vote."
                                    ]
                                },
                                {
                                    "name": "remove_other_vote",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 4,
                                            "typeName": "ReferendumIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "Remove a vote for a referendum.",
                                        "",
                                        "If the `target` is equal to the signer, then this function is exactly equivalent to",
                                        "`remove_vote`. If not equal to the signer, then the vote must have expired,",
                                        "either because the referendum was cancelled, because the voter lost the referendum or",
                                        "because the conviction period is over.",
                                        "",
                                        "The dispatch origin of this call must be _Signed_.",
                                        "",
                                        "- `target`: The account of the vote to be removed; this account must have voted for",
                                        "  referendum `index`.",
                                        "- `index`: The index of referendum of the vote to be removed.",
                                        "",
                                        "Weight: `O(R + log R)` where R is the number of referenda that `target` has voted on.",
                                        "  Weight is calculated for the maximum number of vote."
                                    ]
                                },
                                {
                                    "name": "blacklist",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_ref_index",
                                            "type": 236,
                                            "typeName": "Option<ReferendumIndex>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": [
                                        "Permanently place a proposal into the blacklist. This prevents it from ever being",
                                        "proposed again.",
                                        "",
                                        "If called on a queued public or external proposal, then this will result in it being",
                                        "removed. If the `ref_index` supplied is an active referendum with the proposal hash,",
                                        "then it will be cancelled.",
                                        "",
                                        "The dispatch origin of this call must be `BlacklistOrigin`.",
                                        "",
                                        "- `proposal_hash`: The proposal hash to blacklist permanently.",
                                        "- `ref_index`: An ongoing referendum whose hash is `proposal_hash`, which will be",
                                        "cancelled.",
                                        "",
                                        "Weight: `O(p)` (though as this is an high-privilege dispatch, we assume it has a",
                                        "  reasonable value)."
                                    ]
                                },
                                {
                                    "name": "cancel_proposal",
                                    "fields": [
                                        {
                                            "name": "prop_index",
                                            "type": 125,
                                            "typeName": "PropIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": [
                                        "Remove a proposal.",
                                        "",
                                        "The dispatch origin of this call must be `CancelProposalOrigin`.",
                                        "",
                                        "- `prop_index`: The index of the proposal to cancel.",
                                        "",
                                        "Weight: `O(p)` where `p = PublicProps::<T>::decode_len()`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 235,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "conviction",
                        "Conviction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Locked1x",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Locked2x",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Locked3x",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Locked4x",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Locked5x",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Locked6x",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 236,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 237,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_members",
                                    "fields": [
                                        {
                                            "name": "new_members",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "prime",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "old_count",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the collective's membership.",
                                        "",
                                        "- `new_members`: The new member list. Be nice to the chain and provide it sorted.",
                                        "- `prime`: The prime member whose vote sets the default.",
                                        "- `old_count`: The upper bound for the previous number of members in storage. Used for",
                                        "  weight estimation.",
                                        "",
                                        "Requires root origin.",
                                        "",
                                        "NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but",
                                        "      the weight estimations rely on it to estimate dispatchable weight.",
                                        "",
                                        "# WARNING:",
                                        "",
                                        "The `pallet-collective` can also be managed by logic outside of the pallet through the",
                                        "implementation of the trait [`ChangeMembers`].",
                                        "Any call to `set_members` must be careful that the member set doesn't get out of sync",
                                        "with other logic managing the member set.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(MP + N)` where:",
                                        "  - `M` old-members-count (code- and governance-bounded)",
                                        "  - `N` new-members-count (code- and governance-bounded)",
                                        "  - `P` proposals-count (code-bounded)",
                                        "- DB:",
                                        "  - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the",
                                        "    members",
                                        "  - 1 storage read (codec `O(P)`) for reading the proposals",
                                        "  - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal",
                                        "  - 1 storage write (codec `O(1)`) for deleting the old `prime` and setting the new one",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "execute",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 181,
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Dispatch a proposal from a member using the `Member` origin.",
                                        "",
                                        "Origin must be a member of the collective.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching",
                                        "  `proposal`",
                                        "- DB: 1 read (codec `O(M)`) + DB access of `proposal`",
                                        "- 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "propose",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": 125,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal",
                                            "type": 181,
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Add a new proposal to either be voted on or executed directly.",
                                        "",
                                        "Requires the sender to be member.",
                                        "",
                                        "`threshold` determines whether `proposal` is executed directly (`threshold < 2`)",
                                        "or put up for voting.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1)` or `O(B + M + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - branching is influenced by `threshold` where:",
                                        "    - `P1` is proposal execution complexity (`threshold < 2`)",
                                        "    - `P2` is proposals-count (code-bounded) (`threshold >= 2`)",
                                        "- DB:",
                                        "  - 1 storage read `is_member` (codec `O(M)`)",
                                        "  - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)",
                                        "  - DB accesses influenced by `threshold`:",
                                        "    - EITHER storage accesses done by `proposal` (`threshold < 2`)",
                                        "    - OR proposal insertion (`threshold <= 2`)",
                                        "      - 1 storage mutation `Proposals` (codec `O(P2)`)",
                                        "      - 1 storage mutation `ProposalCount` (codec `O(1)`)",
                                        "      - 1 storage write `ProposalOf` (codec `O(B)`)",
                                        "      - 1 storage write `Voting` (codec `O(M)`)",
                                        "  - 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "vote",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "approve",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Add an aye or nay vote for the sender to the given proposal.",
                                        "",
                                        "Requires the sender to be a member.",
                                        "",
                                        "Transaction fees will be waived if the member is voting on any particular proposal",
                                        "for the first time and the call is successful. Subsequent vote changes will charge a",
                                        "fee.",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M)` where `M` is members-count (code- and governance-bounded)",
                                        "- DB:",
                                        "  - 1 storage read `Members` (codec `O(M)`)",
                                        "  - 1 storage mutation `Voting` (codec `O(M)`)",
                                        "- 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close_old_weight",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_weight_bound",
                                            "type": 238,
                                            "typeName": "OldWeight",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Close a vote that is either approved, disapproved or whose voting period has ended.",
                                        "",
                                        "May be called by any signed account in order to finish voting and close the proposal.",
                                        "",
                                        "If called before the end of the voting period it will only close the vote if it is",
                                        "has enough votes to be approved or disapproved.",
                                        "",
                                        "If called after the end of the voting period abstentions are counted as rejections",
                                        "unless there is a prime member set and the prime member cast an approval.",
                                        "",
                                        "If the close operation completes successfully with disapproval, the transaction fee will",
                                        "be waived. Otherwise execution of the approved operation will be charged to the caller.",
                                        "",
                                        "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
                                        "proposal.",
                                        "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
                                        "`storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1 + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - `P1` is the complexity of `proposal` preimage.",
                                        "  - `P2` is proposal-count (code-bounded)",
                                        "- DB:",
                                        " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
                                        " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
                                        "   `O(P2)`)",
                                        " - any mutations done while executing `proposal` (`P1`)",
                                        "- up to 3 events",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "disapprove_proposal",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Disapprove a proposal, close, and remove it from the system, regardless of its current",
                                        "state.",
                                        "",
                                        "Must be called by the Root origin.",
                                        "",
                                        "Parameters:",
                                        "* `proposal_hash`: The hash of the proposal that should be disapproved.",
                                        "",
                                        "# <weight>",
                                        "Complexity: O(P) where P is the number of max proposals",
                                        "DB Weight:",
                                        "* Reads: Proposals",
                                        "* Writes: Voting, Proposals, ProposalOf",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_weight_bound",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Close a vote that is either approved, disapproved or whose voting period has ended.",
                                        "",
                                        "May be called by any signed account in order to finish voting and close the proposal.",
                                        "",
                                        "If called before the end of the voting period it will only close the vote if it is",
                                        "has enough votes to be approved or disapproved.",
                                        "",
                                        "If called after the end of the voting period abstentions are counted as rejections",
                                        "unless there is a prime member set and the prime member cast an approval.",
                                        "",
                                        "If the close operation completes successfully with disapproval, the transaction fee will",
                                        "be waived. Otherwise execution of the approved operation will be charged to the caller.",
                                        "",
                                        "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
                                        "proposal.",
                                        "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
                                        "`storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1 + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - `P1` is the complexity of `proposal` preimage.",
                                        "  - `P2` is proposal-count (code-bounded)",
                                        "- DB:",
                                        " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
                                        " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
                                        "   `O(P2)`)",
                                        " - any mutations done while executing `proposal` (`P1`)",
                                        "- up to 3 events",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 238,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 239
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 239,
                "type": {
                    "path": [
                        "sp_weights",
                        "OldWeight"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 10,
                                    "typeName": "u64",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 240,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_members",
                                    "fields": [
                                        {
                                            "name": "new_members",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "prime",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "old_count",
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the collective's membership.",
                                        "",
                                        "- `new_members`: The new member list. Be nice to the chain and provide it sorted.",
                                        "- `prime`: The prime member whose vote sets the default.",
                                        "- `old_count`: The upper bound for the previous number of members in storage. Used for",
                                        "  weight estimation.",
                                        "",
                                        "Requires root origin.",
                                        "",
                                        "NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but",
                                        "      the weight estimations rely on it to estimate dispatchable weight.",
                                        "",
                                        "# WARNING:",
                                        "",
                                        "The `pallet-collective` can also be managed by logic outside of the pallet through the",
                                        "implementation of the trait [`ChangeMembers`].",
                                        "Any call to `set_members` must be careful that the member set doesn't get out of sync",
                                        "with other logic managing the member set.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(MP + N)` where:",
                                        "  - `M` old-members-count (code- and governance-bounded)",
                                        "  - `N` new-members-count (code- and governance-bounded)",
                                        "  - `P` proposals-count (code-bounded)",
                                        "- DB:",
                                        "  - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the",
                                        "    members",
                                        "  - 1 storage read (codec `O(P)`) for reading the proposals",
                                        "  - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal",
                                        "  - 1 storage write (codec `O(1)`) for deleting the old `prime` and setting the new one",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "execute",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 181,
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Dispatch a proposal from a member using the `Member` origin.",
                                        "",
                                        "Origin must be a member of the collective.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching",
                                        "  `proposal`",
                                        "- DB: 1 read (codec `O(M)`) + DB access of `proposal`",
                                        "- 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "propose",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": 125,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal",
                                            "type": 181,
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Add a new proposal to either be voted on or executed directly.",
                                        "",
                                        "Requires the sender to be member.",
                                        "",
                                        "`threshold` determines whether `proposal` is executed directly (`threshold < 2`)",
                                        "or put up for voting.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1)` or `O(B + M + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - branching is influenced by `threshold` where:",
                                        "    - `P1` is proposal execution complexity (`threshold < 2`)",
                                        "    - `P2` is proposals-count (code-bounded) (`threshold >= 2`)",
                                        "- DB:",
                                        "  - 1 storage read `is_member` (codec `O(M)`)",
                                        "  - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)",
                                        "  - DB accesses influenced by `threshold`:",
                                        "    - EITHER storage accesses done by `proposal` (`threshold < 2`)",
                                        "    - OR proposal insertion (`threshold <= 2`)",
                                        "      - 1 storage mutation `Proposals` (codec `O(P2)`)",
                                        "      - 1 storage mutation `ProposalCount` (codec `O(1)`)",
                                        "      - 1 storage write `ProposalOf` (codec `O(B)`)",
                                        "      - 1 storage write `Voting` (codec `O(M)`)",
                                        "  - 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "vote",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "approve",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Add an aye or nay vote for the sender to the given proposal.",
                                        "",
                                        "Requires the sender to be a member.",
                                        "",
                                        "Transaction fees will be waived if the member is voting on any particular proposal",
                                        "for the first time and the call is successful. Subsequent vote changes will charge a",
                                        "fee.",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M)` where `M` is members-count (code- and governance-bounded)",
                                        "- DB:",
                                        "  - 1 storage read `Members` (codec `O(M)`)",
                                        "  - 1 storage mutation `Voting` (codec `O(M)`)",
                                        "- 1 event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close_old_weight",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_weight_bound",
                                            "type": 238,
                                            "typeName": "OldWeight",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Close a vote that is either approved, disapproved or whose voting period has ended.",
                                        "",
                                        "May be called by any signed account in order to finish voting and close the proposal.",
                                        "",
                                        "If called before the end of the voting period it will only close the vote if it is",
                                        "has enough votes to be approved or disapproved.",
                                        "",
                                        "If called after the end of the voting period abstentions are counted as rejections",
                                        "unless there is a prime member set and the prime member cast an approval.",
                                        "",
                                        "If the close operation completes successfully with disapproval, the transaction fee will",
                                        "be waived. Otherwise execution of the approved operation will be charged to the caller.",
                                        "",
                                        "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
                                        "proposal.",
                                        "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
                                        "`storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1 + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - `P1` is the complexity of `proposal` preimage.",
                                        "  - `P2` is proposal-count (code-bounded)",
                                        "- DB:",
                                        " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
                                        " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
                                        "   `O(P2)`)",
                                        " - any mutations done while executing `proposal` (`P1`)",
                                        "- up to 3 events",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "disapprove_proposal",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Disapprove a proposal, close, and remove it from the system, regardless of its current",
                                        "state.",
                                        "",
                                        "Must be called by the Root origin.",
                                        "",
                                        "Parameters:",
                                        "* `proposal_hash`: The hash of the proposal that should be disapproved.",
                                        "",
                                        "# <weight>",
                                        "Complexity: O(P) where P is the number of max proposals",
                                        "DB Weight:",
                                        "* Reads: Proposals",
                                        "* Writes: Voting, Proposals, ProposalOf",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_weight_bound",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Close a vote that is either approved, disapproved or whose voting period has ended.",
                                        "",
                                        "May be called by any signed account in order to finish voting and close the proposal.",
                                        "",
                                        "If called before the end of the voting period it will only close the vote if it is",
                                        "has enough votes to be approved or disapproved.",
                                        "",
                                        "If called after the end of the voting period abstentions are counted as rejections",
                                        "unless there is a prime member set and the prime member cast an approval.",
                                        "",
                                        "If the close operation completes successfully with disapproval, the transaction fee will",
                                        "be waived. Otherwise execution of the approved operation will be charged to the caller.",
                                        "",
                                        "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
                                        "proposal.",
                                        "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
                                        "`storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1 + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - `P1` is the complexity of `proposal` preimage.",
                                        "  - `P2` is proposal-count (code-bounded)",
                                        "- DB:",
                                        " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
                                        " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
                                        "   `O(P2)`)",
                                        " - any mutations done while executing `proposal` (`P1`)",
                                        "- up to 3 events",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 241,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "vote",
                                    "fields": [
                                        {
                                            "name": "votes",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Vote for a set of candidates for the upcoming round of election. This can be called to",
                                        "set the initial votes, or update already existing votes.",
                                        "",
                                        "Upon initial voting, `value` units of `who`'s balance is locked and a deposit amount is",
                                        "reserved. The deposit is based on the number of votes and can be updated over time.",
                                        "",
                                        "The `votes` should:",
                                        "  - not be empty.",
                                        "  - be less than the number of possible candidates. Note that all current members and",
                                        "    runners-up are also automatically candidates for the next round.",
                                        "",
                                        "If `value` is more than `who`'s free balance, then the maximum of the two is used.",
                                        "",
                                        "The dispatch origin of this call must be signed.",
                                        "",
                                        "### Warning",
                                        "",
                                        "It is the responsibility of the caller to **NOT** place all of their balance into the",
                                        "lock and keep some for further operations.",
                                        "",
                                        "# <weight>",
                                        "We assume the maximum weight among all 3 cases: vote_equal, vote_more and vote_less.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "remove_voter",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Remove `origin` as a voter.",
                                        "",
                                        "This removes the lock and returns the deposit.",
                                        "",
                                        "The dispatch origin of this call must be signed and be a voter."
                                    ]
                                },
                                {
                                    "name": "submit_candidacy",
                                    "fields": [
                                        {
                                            "name": "candidate_count",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Submit oneself for candidacy. A fixed amount of deposit is recorded.",
                                        "",
                                        "All candidates are wiped at the end of the term. They either become a member/runner-up,",
                                        "or leave the system while their deposit is slashed.",
                                        "",
                                        "The dispatch origin of this call must be signed.",
                                        "",
                                        "### Warning",
                                        "",
                                        "Even if a candidate ends up being a member, they must call [`Call::renounce_candidacy`]",
                                        "to get their deposit back. Losing the spot in an election will always lead to a slash.",
                                        "",
                                        "# <weight>",
                                        "The number of current candidates must be provided as witness data.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "renounce_candidacy",
                                    "fields": [
                                        {
                                            "name": "renouncing",
                                            "type": 242,
                                            "typeName": "Renouncing",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Renounce one's intention to be a candidate for the next election round. 3 potential",
                                        "outcomes exist:",
                                        "",
                                        "- `origin` is a candidate and not elected in any set. In this case, the deposit is",
                                        "  unreserved, returned and origin is removed as a candidate.",
                                        "- `origin` is a current runner-up. In this case, the deposit is unreserved, returned and",
                                        "  origin is removed as a runner-up.",
                                        "- `origin` is a current member. In this case, the deposit is unreserved and origin is",
                                        "  removed as a member, consequently not being a candidate for the next round anymore.",
                                        "  Similar to [`remove_member`](Self::remove_member), if replacement runners exists, they",
                                        "  are immediately used. If the prime is renouncing, then no prime will exist until the",
                                        "  next round.",
                                        "",
                                        "The dispatch origin of this call must be signed, and have one of the above roles.",
                                        "",
                                        "# <weight>",
                                        "The type of renouncing must be provided as witness data.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "remove_member",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "slash_bond",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "rerun_election",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Remove a particular member from the set. This is effective immediately and the bond of",
                                        "the outgoing member is slashed.",
                                        "",
                                        "If a runner-up is available, then the best runner-up will be removed and replaces the",
                                        "outgoing member. Otherwise, if `rerun_election` is `true`, a new phragmen election is",
                                        "started, else, nothing happens.",
                                        "",
                                        "If `slash_bond` is set to true, the bond of the member being removed is slashed. Else,",
                                        "it is returned.",
                                        "",
                                        "The dispatch origin of this call must be root.",
                                        "",
                                        "Note that this does not affect the designated block number of the next election.",
                                        "",
                                        "# <weight>",
                                        "If we have a replacement, we use a small weight. Else, since this is a root call and",
                                        "will go into phragmen, we assume full block for now.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "clean_defunct_voters",
                                    "fields": [
                                        {
                                            "name": "num_voters",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "num_defunct",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Clean all voters who are defunct (i.e. they do not serve any purpose at all). The",
                                        "deposit of the removed voters are returned.",
                                        "",
                                        "This is an root function to be used only for cleaning the state.",
                                        "",
                                        "The dispatch origin of this call must be root.",
                                        "",
                                        "# <weight>",
                                        "The total number of voters and those that are defunct must be provided as witness data.",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 242,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "Renouncing"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Member",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "RunnerUp",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Candidate",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 243,
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "add_member",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Add a member `who` to the set.",
                                        "",
                                        "May only be called from `T::AddOrigin`."
                                    ]
                                },
                                {
                                    "name": "remove_member",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Remove a member `who` from the set.",
                                        "",
                                        "May only be called from `T::RemoveOrigin`."
                                    ]
                                },
                                {
                                    "name": "swap_member",
                                    "fields": [
                                        {
                                            "name": "remove",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "add",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Swap out one member `remove` for another `add`.",
                                        "",
                                        "May only be called from `T::SwapOrigin`.",
                                        "",
                                        "Prime membership is *not* passed from `remove` to `add`, if extant."
                                    ]
                                },
                                {
                                    "name": "reset_members",
                                    "fields": [
                                        {
                                            "name": "members",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Change the membership to a new set, disregarding the existing membership. Be nice and",
                                        "pass `members` pre-sorted.",
                                        "",
                                        "May only be called from `T::ResetOrigin`."
                                    ]
                                },
                                {
                                    "name": "change_key",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Swap out the sending member for some other key `new`.",
                                        "",
                                        "May only be called from `Signed` origin of a current member.",
                                        "",
                                        "Prime membership is passed from the origin account to `new`, if extant."
                                    ]
                                },
                                {
                                    "name": "set_prime",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set the prime member. Must be a current member.",
                                        "",
                                        "May only be called from `T::PrimeOrigin`."
                                    ]
                                },
                                {
                                    "name": "clear_prime",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Remove the prime member if it exists.",
                                        "",
                                        "May only be called from `T::PrimeOrigin`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 244,
                "type": {
                    "path": [
                        "pallet_treasury",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "propose_spend",
                                    "fields": [
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Put forward a suggestion for spending. A deposit proportional to the value",
                                        "is reserved and slashed if the proposal is rejected. It is returned once the",
                                        "proposal is awarded.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(1)",
                                        "- DbReads: `ProposalCount`, `origin account`",
                                        "- DbWrites: `ProposalCount`, `Proposals`, `origin account`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "reject_proposal",
                                    "fields": [
                                        {
                                            "name": "proposal_id",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Reject a proposed spend. The original deposit will be slashed.",
                                        "",
                                        "May only be called from `T::RejectOrigin`.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(1)",
                                        "- DbReads: `Proposals`, `rejected proposer account`",
                                        "- DbWrites: `Proposals`, `rejected proposer account`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "approve_proposal",
                                    "fields": [
                                        {
                                            "name": "proposal_id",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Approve a proposal. At a later time, the proposal will be allocated to the beneficiary",
                                        "and the original deposit will be returned.",
                                        "",
                                        "May only be called from `T::ApproveOrigin`.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(1).",
                                        "- DbReads: `Proposals`, `Approvals`",
                                        "- DbWrite: `Approvals`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "spend",
                                    "fields": [
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Propose and approve a spend of treasury funds.",
                                        "",
                                        "- `origin`: Must be `SpendOrigin` with the `Success` value being at least `amount`.",
                                        "- `amount`: The amount to be transferred from the treasury to the `beneficiary`.",
                                        "- `beneficiary`: The destination account for the transfer.",
                                        "",
                                        "NOTE: For record-keeping purposes, the proposer is deemed to be equivalent to the",
                                        "beneficiary."
                                    ]
                                },
                                {
                                    "name": "remove_approval",
                                    "fields": [
                                        {
                                            "name": "proposal_id",
                                            "type": 125,
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Force a previously approved proposal to be removed from the approval queue.",
                                        "The original deposit will no longer be returned.",
                                        "",
                                        "May only be called from `T::RejectOrigin`.",
                                        "- `proposal_id`: The index of a proposal",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(A) where `A` is the number of approvals",
                                        "- Db reads and writes: `Approvals`",
                                        "# </weight>",
                                        "",
                                        "Errors:",
                                        "- `ProposalNotApproved`: The `proposal_id` supplied was not found in the approval queue,",
                                        "i.e., the proposal has not been approved. This could also mean the proposal does not",
                                        "exist altogether, thus there is no way it would have been approved in the first place."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 245,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "claim",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "ethereum_signature",
                                            "type": 246,
                                            "typeName": "EcdsaSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Make a claim to collect your DOTs.",
                                        "",
                                        "The dispatch origin for this call must be _None_.",
                                        "",
                                        "Unsigned Validation:",
                                        "A call to claim is deemed valid if the signature provided matches",
                                        "the expected signed message of:",
                                        "",
                                        "> Ethereum Signed Message:",
                                        "> (configured prefix string)(address)",
                                        "",
                                        "and `address` matches the `dest` account.",
                                        "",
                                        "Parameters:",
                                        "- `dest`: The destination account to payout the claim.",
                                        "- `ethereum_signature`: The signature of an ethereum signed message",
                                        "   matching the format described above.",
                                        "",
                                        "<weight>",
                                        "The weight of this call is invariant over the input parameters.",
                                        "Weight includes logic to validate unsigned `claim` call.",
                                        "",
                                        "Total Complexity: O(1)",
                                        "</weight>"
                                    ]
                                },
                                {
                                    "name": "mint_claim",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 73,
                                            "typeName": "EthereumAddress",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "vesting_schedule",
                                            "type": 248,
                                            "typeName": "Option<(BalanceOf<T>, BalanceOf<T>, T::BlockNumber)>",
                                            "docs": []
                                        },
                                        {
                                            "name": "statement",
                                            "type": 250,
                                            "typeName": "Option<StatementKind>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Mint a new claim to collect DOTs.",
                                        "",
                                        "The dispatch origin for this call must be _Root_.",
                                        "",
                                        "Parameters:",
                                        "- `who`: The Ethereum address allowed to collect this claim.",
                                        "- `value`: The number of DOTs that will be claimed.",
                                        "- `vesting_schedule`: An optional vesting schedule for these DOTs.",
                                        "",
                                        "<weight>",
                                        "The weight of this call is invariant over the input parameters.",
                                        "We assume worst case that both vesting and statement is being inserted.",
                                        "",
                                        "Total Complexity: O(1)",
                                        "</weight>"
                                    ]
                                },
                                {
                                    "name": "claim_attest",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "ethereum_signature",
                                            "type": 246,
                                            "typeName": "EcdsaSignature",
                                            "docs": []
                                        },
                                        {
                                            "name": "statement",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Make a claim to collect your DOTs by signing a statement.",
                                        "",
                                        "The dispatch origin for this call must be _None_.",
                                        "",
                                        "Unsigned Validation:",
                                        "A call to `claim_attest` is deemed valid if the signature provided matches",
                                        "the expected signed message of:",
                                        "",
                                        "> Ethereum Signed Message:",
                                        "> (configured prefix string)(address)(statement)",
                                        "",
                                        "and `address` matches the `dest` account; the `statement` must match that which is",
                                        "expected according to your purchase arrangement.",
                                        "",
                                        "Parameters:",
                                        "- `dest`: The destination account to payout the claim.",
                                        "- `ethereum_signature`: The signature of an ethereum signed message",
                                        "   matching the format described above.",
                                        "- `statement`: The identity of the statement which is being attested to in the signature.",
                                        "",
                                        "<weight>",
                                        "The weight of this call is invariant over the input parameters.",
                                        "Weight includes logic to validate unsigned `claim_attest` call.",
                                        "",
                                        "Total Complexity: O(1)",
                                        "</weight>"
                                    ]
                                },
                                {
                                    "name": "attest",
                                    "fields": [
                                        {
                                            "name": "statement",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Attest to a statement, needed to finalize the claims process.",
                                        "",
                                        "WARNING: Insecure unless your chain includes `PrevalidateAttests` as a `SignedExtension`.",
                                        "",
                                        "Unsigned Validation:",
                                        "A call to attest is deemed valid if the sender has a `Preclaim` registered",
                                        "and provides a `statement` which is expected for the account.",
                                        "",
                                        "Parameters:",
                                        "- `statement`: The identity of the statement which is being attested to in the signature.",
                                        "",
                                        "<weight>",
                                        "The weight of this call is invariant over the input parameters.",
                                        "Weight includes logic to do pre-validation on `attest` call.",
                                        "",
                                        "Total Complexity: O(1)",
                                        "</weight>"
                                    ]
                                },
                                {
                                    "name": "move_claim",
                                    "fields": [
                                        {
                                            "name": "old",
                                            "type": 73,
                                            "typeName": "EthereumAddress",
                                            "docs": []
                                        },
                                        {
                                            "name": "new",
                                            "type": 73,
                                            "typeName": "EthereumAddress",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_preclaim",
                                            "type": 92,
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 246,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "EcdsaSignature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 247,
                                    "typeName": "[u8; 65]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 247,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 65,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 248,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 249
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 249,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 249,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            6,
                            6,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 250,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 251
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 251,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 251,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "StatementKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Regular",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Saft",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 252,
                "type": {
                    "path": [
                        "pallet_vesting",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "vest",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Unlock any vested funds of the sender account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have funds still",
                                        "locked under this pallet.",
                                        "",
                                        "Emits either `VestingCompleted` or `VestingUpdated`.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- DbWeight: 2 Reads, 2 Writes",
                                        "    - Reads: Vesting Storage, Balances Locks, [Sender Account]",
                                        "    - Writes: Vesting Storage, Balances Locks, [Sender Account]",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "vest_other",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Unlock any vested funds of a `target` account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `target`: The account whose vested funds should be unlocked. Must have funds still",
                                        "locked under this pallet.",
                                        "",
                                        "Emits either `VestingCompleted` or `VestingUpdated`.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- DbWeight: 3 Reads, 3 Writes",
                                        "    - Reads: Vesting Storage, Balances Locks, Target Account",
                                        "    - Writes: Vesting Storage, Balances Locks, Target Account",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "vested_transfer",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "schedule",
                                            "type": 253,
                                            "typeName": "VestingInfo<BalanceOf<T>, T::BlockNumber>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Create a vested transfer.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `target`: The account receiving the vested funds.",
                                        "- `schedule`: The vesting schedule attached to the transfer.",
                                        "",
                                        "Emits `VestingCreated`.",
                                        "",
                                        "NOTE: This will unlock all schedules through the current block.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- DbWeight: 3 Reads, 3 Writes",
                                        "    - Reads: Vesting Storage, Balances Locks, Target Account, [Sender Account]",
                                        "    - Writes: Vesting Storage, Balances Locks, Target Account, [Sender Account]",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "force_vested_transfer",
                                    "fields": [
                                        {
                                            "name": "source",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "schedule",
                                            "type": 253,
                                            "typeName": "VestingInfo<BalanceOf<T>, T::BlockNumber>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Force a vested transfer.",
                                        "",
                                        "The dispatch origin for this call must be _Root_.",
                                        "",
                                        "- `source`: The account whose funds should be transferred.",
                                        "- `target`: The account that should be transferred the vested funds.",
                                        "- `schedule`: The vesting schedule attached to the transfer.",
                                        "",
                                        "Emits `VestingCreated`.",
                                        "",
                                        "NOTE: This will unlock all schedules through the current block.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- DbWeight: 4 Reads, 4 Writes",
                                        "    - Reads: Vesting Storage, Balances Locks, Target Account, Source Account",
                                        "    - Writes: Vesting Storage, Balances Locks, Target Account, Source Account",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "merge_schedules",
                                    "fields": [
                                        {
                                            "name": "schedule1_index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "schedule2_index",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Merge two vesting schedules together, creating a new vesting schedule that unlocks over",
                                        "the highest possible start and end blocks. If both schedules have already started the",
                                        "current block will be used as the schedule start; with the caveat that if one schedule",
                                        "is finished by the current block, the other will be treated as the new merged schedule,",
                                        "unmodified.",
                                        "",
                                        "NOTE: If `schedule1_index == schedule2_index` this is a no-op.",
                                        "NOTE: This will unlock all schedules through the current block prior to merging.",
                                        "NOTE: If both schedules have ended by the current block, no new schedule will be created",
                                        "and both will be removed.",
                                        "",
                                        "Merged schedule attributes:",
                                        "- `starting_block`: `MAX(schedule1.starting_block, scheduled2.starting_block,",
                                        "  current_block)`.",
                                        "- `ending_block`: `MAX(schedule1.ending_block, schedule2.ending_block)`.",
                                        "- `locked`: `schedule1.locked_at(current_block) + schedule2.locked_at(current_block)`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `schedule1_index`: index of the first schedule to merge.",
                                        "- `schedule2_index`: index of the second schedule to merge."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 253,
                "type": {
                    "path": [
                        "pallet_vesting",
                        "vesting_info",
                        "VestingInfo"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "locked",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "per_block",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "starting_block",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 254,
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "batch",
                                    "fields": [
                                        {
                                            "name": "calls",
                                            "type": 255,
                                            "typeName": "Vec<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Send a batch of dispatch calls.",
                                        "",
                                        "May be called from any origin except `None`.",
                                        "",
                                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                                        "",
                                        "If origin is root then the calls are dispatched without checking origin filter. (This",
                                        "includes bypassing `frame_system::Config::BaseCallFilter`).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(C) where C is the number of calls to be batched.",
                                        "# </weight>",
                                        "",
                                        "This will return `Ok` in all circumstances. To determine the success of the batch, an",
                                        "event is deposited. If a call failed and the batch was interrupted, then the",
                                        "`BatchInterrupted` event is deposited, along with the number of successful calls made",
                                        "and the error of the failed call. If all were successful, then the `BatchCompleted`",
                                        "event is deposited."
                                    ]
                                },
                                {
                                    "name": "as_derivative",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Send a call through an indexed pseudonym of the sender.",
                                        "",
                                        "Filter from origin are passed along. The call will be dispatched with an origin which",
                                        "use the same filter as the origin of this call.",
                                        "",
                                        "NOTE: If you need to ensure that any account-based filtering is not honored (i.e.",
                                        "because you expect `proxy` to have been used prior in the call stack and you do not want",
                                        "the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`",
                                        "in the Multisig pallet instead.",
                                        "",
                                        "NOTE: Prior to version *12, this was called `as_limited_sub`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_."
                                    ]
                                },
                                {
                                    "name": "batch_all",
                                    "fields": [
                                        {
                                            "name": "calls",
                                            "type": 255,
                                            "typeName": "Vec<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Send a batch of dispatch calls and atomically execute them.",
                                        "The whole transaction will rollback and fail if any of the calls failed.",
                                        "",
                                        "May be called from any origin except `None`.",
                                        "",
                                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                                        "",
                                        "If origin is root then the calls are dispatched without checking origin filter. (This",
                                        "includes bypassing `frame_system::Config::BaseCallFilter`).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(C) where C is the number of calls to be batched.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "dispatch_as",
                                    "fields": [
                                        {
                                            "name": "as_origin",
                                            "type": 256,
                                            "typeName": "Box<T::PalletsOrigin>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Dispatches a function call with a provided origin.",
                                        "",
                                        "The dispatch origin for this call must be _Root_.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "- Limited storage reads.",
                                        "- One DB write (event).",
                                        "- Weight of derivative `call` execution + T::WeightInfo::dispatch_as().",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "force_batch",
                                    "fields": [
                                        {
                                            "name": "calls",
                                            "type": 255,
                                            "typeName": "Vec<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Send a batch of dispatch calls.",
                                        "Unlike `batch`, it allows errors and won't interrupt.",
                                        "",
                                        "May be called from any origin except `None`.",
                                        "",
                                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                                        "",
                                        "If origin is root then the calls are dispatch without checking origin filter. (This",
                                        "includes bypassing `frame_system::Config::BaseCallFilter`).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(C) where C is the number of calls to be batched.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "with_weight",
                                    "fields": [
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Dispatch a function call with a specified weight.",
                                        "",
                                        "This function does not check the weight of the call, and instead allows the",
                                        "Root origin to specify the weight of the call.",
                                        "",
                                        "The dispatch origin for this call must be _Root_."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 255,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 181
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 256,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "OriginCaller"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "system",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 257,
                                            "typeName": "frame_system::Origin<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Council",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 258,
                                            "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "TechnicalCommittee",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 259,
                                            "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "ParachainsOrigin",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 260,
                                            "typeName": "parachains_origin::Origin",
                                            "docs": []
                                        }
                                    ],
                                    "index": 50,
                                    "docs": []
                                },
                                {
                                    "name": "XcmPallet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 261,
                                            "typeName": "pallet_xcm::Origin",
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                },
                                {
                                    "name": "Void",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 262,
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::Void",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 257,
                "type": {
                    "path": [
                        "frame_support",
                        "dispatch",
                        "RawOrigin"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Root",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Signed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 258,
                "type": {
                    "path": [
                        "pallet_collective",
                        "RawOrigin"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Members",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Member",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "_Phantom",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 259,
                "type": {
                    "path": [
                        "pallet_collective",
                        "RawOrigin"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Members",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Member",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "_Phantom",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 260,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "origin",
                        "pallet",
                        "Origin"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parachain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 261,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Origin"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Xcm",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Response",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 262,
                "type": {
                    "path": [
                        "sp_core",
                        "Void"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 263,
                "type": {
                    "path": [
                        "pallet_identity",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "add_registrar",
                                    "fields": [
                                        {
                                            "name": "account",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Add a registrar to the system.",
                                        "",
                                        "The dispatch origin for this call must be `T::RegistrarOrigin`.",
                                        "",
                                        "- `account`: the account of the registrar.",
                                        "",
                                        "Emits `RegistrarAdded` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R)` where `R` registrar-count (governance-bounded and code-bounded).",
                                        "- One storage mutation (codec `O(R)`).",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_identity",
                                    "fields": [
                                        {
                                            "name": "info",
                                            "type": 264,
                                            "typeName": "Box<IdentityInfo<T::MaxAdditionalFields>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set an account's identity information and reserve the appropriate deposit.",
                                        "",
                                        "If the account already has identity information, the deposit is taken as part payment",
                                        "for the new deposit.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `info`: The identity information.",
                                        "",
                                        "Emits `IdentitySet` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(X + X' + R)`",
                                        "  - where `X` additional-field-count (deposit-bounded and code-bounded)",
                                        "  - where `R` judgements-count (registrar-count-bounded)",
                                        "- One balance reserve operation.",
                                        "- One storage mutation (codec-read `O(X' + R)`, codec-write `O(X + R)`).",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_subs",
                                    "fields": [
                                        {
                                            "name": "subs",
                                            "type": 298,
                                            "typeName": "Vec<(T::AccountId, Data)>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set the sub-accounts of the sender.",
                                        "",
                                        "Payment: Any aggregate balance reserved by previous `set_subs` calls will be returned",
                                        "and an amount `SubAccountDeposit` will be reserved for each item in `subs`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "identity.",
                                        "",
                                        "- `subs`: The identity's (new) sub-accounts.",
                                        "",
                                        "# <weight>",
                                        "- `O(P + S)`",
                                        "  - where `P` old-subs-count (hard- and deposit-bounded).",
                                        "  - where `S` subs-count (hard- and deposit-bounded).",
                                        "- At most one balance operations.",
                                        "- DB:",
                                        "  - `P + S` storage mutations (codec complexity `O(1)`)",
                                        "  - One storage read (codec complexity `O(P)`).",
                                        "  - One storage write (codec complexity `O(S)`).",
                                        "  - One storage-exists (`IdentityOf::contains_key`).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "clear_identity",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Clear an account's identity info and all sub-accounts and return all deposits.",
                                        "",
                                        "Payment: All reserved balances on the account are returned.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "identity.",
                                        "",
                                        "Emits `IdentityCleared` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R + S + X)`",
                                        "  - where `R` registrar-count (governance-bounded).",
                                        "  - where `S` subs-count (hard- and deposit-bounded).",
                                        "  - where `X` additional-field-count (deposit-bounded and code-bounded).",
                                        "- One balance-unreserve operation.",
                                        "- `2` storage reads and `S + 2` storage deletions.",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "request_judgement",
                                    "fields": [
                                        {
                                            "name": "reg_index",
                                            "type": 125,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_fee",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Request a judgement from a registrar.",
                                        "",
                                        "Payment: At most `max_fee` will be reserved for payment to the registrar if judgement",
                                        "given.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a",
                                        "registered identity.",
                                        "",
                                        "- `reg_index`: The index of the registrar whose judgement is requested.",
                                        "- `max_fee`: The maximum fee that may be paid. This should just be auto-populated as:",
                                        "",
                                        "```nocompile",
                                        "Self::registrars().get(reg_index).unwrap().fee",
                                        "```",
                                        "",
                                        "Emits `JudgementRequested` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R + X)`.",
                                        "- One balance-reserve operation.",
                                        "- Storage: 1 read `O(R)`, 1 mutate `O(X + R)`.",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "cancel_request",
                                    "fields": [
                                        {
                                            "name": "reg_index",
                                            "type": 4,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Cancel a previous request.",
                                        "",
                                        "Payment: A previously reserved deposit is returned on success.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a",
                                        "registered identity.",
                                        "",
                                        "- `reg_index`: The index of the registrar whose judgement is no longer requested.",
                                        "",
                                        "Emits `JudgementUnrequested` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R + X)`.",
                                        "- One balance-reserve operation.",
                                        "- One storage mutation `O(R + X)`.",
                                        "- One event",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_fee",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Set the fee required for a judgement to be requested from a registrar.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must be the account",
                                        "of the registrar whose index is `index`.",
                                        "",
                                        "- `index`: the index of the registrar whose fee is to be set.",
                                        "- `fee`: the new fee.",
                                        "",
                                        "# <weight>",
                                        "- `O(R)`.",
                                        "- One storage mutation `O(R)`.",
                                        "- Benchmark: 7.315 + R * 0.329 Âµs (min squares analysis)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_account_id",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "new",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Change the account associated with a registrar.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must be the account",
                                        "of the registrar whose index is `index`.",
                                        "",
                                        "- `index`: the index of the registrar whose fee is to be set.",
                                        "- `new`: the new account ID.",
                                        "",
                                        "# <weight>",
                                        "- `O(R)`.",
                                        "- One storage mutation `O(R)`.",
                                        "- Benchmark: 8.823 + R * 0.32 Âµs (min squares analysis)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "set_fields",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 125,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "fields",
                                            "type": 300,
                                            "typeName": "IdentityFields",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Set the field information for a registrar.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must be the account",
                                        "of the registrar whose index is `index`.",
                                        "",
                                        "- `index`: the index of the registrar whose fee is to be set.",
                                        "- `fields`: the fields that the registrar concerns themselves with.",
                                        "",
                                        "# <weight>",
                                        "- `O(R)`.",
                                        "- One storage mutation `O(R)`.",
                                        "- Benchmark: 7.464 + R * 0.325 Âµs (min squares analysis)",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "provide_judgement",
                                    "fields": [
                                        {
                                            "name": "reg_index",
                                            "type": 125,
                                            "typeName": "RegistrarIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "judgement",
                                            "type": 302,
                                            "typeName": "Judgement<BalanceOf<T>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "identity",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Provide a judgement for an account's identity.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must be the account",
                                        "of the registrar whose index is `reg_index`.",
                                        "",
                                        "- `reg_index`: the index of the registrar whose judgement is being made.",
                                        "- `target`: the account whose identity the judgement is upon. This must be an account",
                                        "  with a registered identity.",
                                        "- `judgement`: the judgement of the registrar of index `reg_index` about `target`.",
                                        "- `identity`: The hash of the [`IdentityInfo`] for that the judgement is provided.",
                                        "",
                                        "Emits `JudgementGiven` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R + X)`.",
                                        "- One balance-transfer operation.",
                                        "- Up to one account-lookup operation.",
                                        "- Storage: 1 read `O(R)`, 1 mutate `O(R + X)`.",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "kill_identity",
                                    "fields": [
                                        {
                                            "name": "target",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Remove an account's identity and sub-account information and slash the deposits.",
                                        "",
                                        "Payment: Reserved balances from `set_subs` and `set_identity` are slashed and handled by",
                                        "`Slash`. Verification request deposits are not returned; they should be cancelled",
                                        "manually using `cancel_request`.",
                                        "",
                                        "The dispatch origin for this call must match `T::ForceOrigin`.",
                                        "",
                                        "- `target`: the account whose identity the judgement is upon. This must be an account",
                                        "  with a registered identity.",
                                        "",
                                        "Emits `IdentityKilled` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(R + S + X)`.",
                                        "- One balance-reserve operation.",
                                        "- `S + 2` storage mutations.",
                                        "- One event.",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "add_sub",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "data",
                                            "type": 267,
                                            "typeName": "Data",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Add the given account to the sender's subs.",
                                        "",
                                        "Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated",
                                        "to the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "sub identity of `sub`."
                                    ]
                                },
                                {
                                    "name": "rename_sub",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "data",
                                            "type": 267,
                                            "typeName": "Data",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "Alter the associated name of the given sub-account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "sub identity of `sub`."
                                    ]
                                },
                                {
                                    "name": "remove_sub",
                                    "fields": [
                                        {
                                            "name": "sub",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "Remove the given account from the sender's subs.",
                                        "",
                                        "Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated",
                                        "to the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "sub identity of `sub`."
                                    ]
                                },
                                {
                                    "name": "quit_sub",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Remove the sender as a sub-account.",
                                        "",
                                        "Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated",
                                        "to the sender (*not* the original depositor).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must have a registered",
                                        "super-identity.",
                                        "",
                                        "NOTE: This should not normally be used, but is provided in the case that the non-",
                                        "controller of an account is maliciously registered as a sub-account."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Identity pallet declaration."
                    ]
                }
            },
            {
                "id": 264,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "IdentityInfo"
                    ],
                    "params": [
                        {
                            "name": "FieldLimit",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "additional",
                                    "type": 265,
                                    "typeName": "BoundedVec<(Data, Data), FieldLimit>",
                                    "docs": []
                                },
                                {
                                    "name": "display",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "legal",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "web",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "riot",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "email",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "pgp_fingerprint",
                                    "type": 297,
                                    "typeName": "Option<[u8; 20]>",
                                    "docs": []
                                },
                                {
                                    "name": "image",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                },
                                {
                                    "name": "twitter",
                                    "type": 267,
                                    "typeName": "Data",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 265,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 266
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 296,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 266,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            267,
                            267
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 267,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "Data"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Raw0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 268,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Raw1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 269,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Raw2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 270,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Raw3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 271,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Raw4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 16,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Raw5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 272,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Raw6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 273,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Raw7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 274,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Raw8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 139,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Raw9",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 275,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Raw10",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 276,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "Raw11",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 277,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "Raw12",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 278,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "Raw13",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 279,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Raw14",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 280,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "Raw15",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 281,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "Raw16",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 45,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "Raw17",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 282,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "Raw18",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 283,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Raw19",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 284,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Raw20",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 74,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "Raw21",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 285,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "Raw22",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 286,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "Raw23",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 287,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Raw24",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 288,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Raw25",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 289,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Raw26",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 290,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Raw27",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 291,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Raw28",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 292,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Raw29",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 293,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Raw30",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 294,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "Raw31",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 295,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "Raw32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 33,
                                    "docs": []
                                },
                                {
                                    "name": "BlakeTwo256",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": []
                                },
                                {
                                    "name": "Sha256",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "Keccak256",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": []
                                },
                                {
                                    "name": "ShaThree256",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 1,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 268,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 0,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 269,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 1,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 270,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 2,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 271,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 3,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 272,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 5,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 273,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 6,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 274,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 7,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 275,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 9,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 276,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 10,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 277,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 11,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 278,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 12,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 279,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 13,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 280,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 14,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 281,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 15,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 282,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 17,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 283,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 18,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 284,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 19,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 285,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 21,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 286,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 22,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 287,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 23,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 288,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 24,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 289,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 25,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 290,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 26,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 291,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 27,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 292,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 28,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 293,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 29,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 294,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 30,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 295,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 31,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 296,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 266
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 297,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 74
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 74,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 298,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 299
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 299,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            267
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 300,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "BitFlags"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 301
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 10,
                                    "typeName": "IdentityField",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 301,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "IdentityField"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Display",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Legal",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Web",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Riot",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Email",
                                    "fields": [],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "PgpFingerprint",
                                    "fields": [],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "Image",
                                    "fields": [],
                                    "index": 64,
                                    "docs": []
                                },
                                {
                                    "name": "Twitter",
                                    "fields": [],
                                    "index": 128,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 302,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "Judgement"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unknown",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "FeePaid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Reasonable",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "KnownGood",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "OutOfDate",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "LowQuality",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Erroneous",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 303,
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "proxy",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "force_proxy_type",
                                            "type": 304,
                                            "typeName": "Option<T::ProxyType>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Dispatch the given `call` from an account that the sender is authorised for through",
                                        "`add_proxy`.",
                                        "",
                                        "Removes any corresponding announcement(s).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                                        "- `call`: The call to be made by the `real` account."
                                    ]
                                },
                                {
                                    "name": "add_proxy",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Register a proxy account for the sender that is able to make calls on its behalf.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `proxy`: The account that the `caller` would like to make a proxy.",
                                        "- `proxy_type`: The permissions allowed for this proxy account.",
                                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                                        "zero."
                                    ]
                                },
                                {
                                    "name": "remove_proxy",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Unregister a proxy account for the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `proxy`: The account that the `caller` would like to remove as a proxy.",
                                        "- `proxy_type`: The permissions currently enabled for the removed proxy account."
                                    ]
                                },
                                {
                                    "name": "remove_proxies",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Unregister all proxy accounts for the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "WARNING: This may be called on accounts created by `pure`, however if done, then",
                                        "the unreserved fees will be inaccessible. **All access to this account will be lost.**"
                                    ]
                                },
                                {
                                    "name": "create_pure",
                                    "fields": [
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and",
                                        "initialize it with a proxy of `proxy_type` for `origin` sender.",
                                        "",
                                        "Requires a `Signed` origin.",
                                        "",
                                        "- `proxy_type`: The type of the proxy that the sender will be registered as over the",
                                        "new account. This will almost always be the most permissive `ProxyType` possible to",
                                        "allow for maximum flexibility.",
                                        "- `index`: A disambiguation index, in case this is called multiple times in the same",
                                        "transaction (e.g. with `utility::batch`). Unless you're using `batch` you probably just",
                                        "want to use `0`.",
                                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                                        "zero.",
                                        "",
                                        "Fails with `Duplicate` if this has already been called in this transaction, from the",
                                        "same sender, with the same parameters.",
                                        "",
                                        "Fails if there are insufficient funds to pay for deposit."
                                    ]
                                },
                                {
                                    "name": "kill_pure",
                                    "fields": [
                                        {
                                            "name": "spawner",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": 79,
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "height",
                                            "type": 125,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "ext_index",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Removes a previously spawned pure proxy.",
                                        "",
                                        "WARNING: **All access to this account will be lost.** Any funds held in it will be",
                                        "inaccessible.",
                                        "",
                                        "Requires a `Signed` origin, and the sender account must have been created by a call to",
                                        "`pure` with corresponding parameters.",
                                        "",
                                        "- `spawner`: The account that originally called `pure` to create this account.",
                                        "- `index`: The disambiguation index originally passed to `pure`. Probably `0`.",
                                        "- `proxy_type`: The proxy type originally passed to `pure`.",
                                        "- `height`: The height of the chain when the call to `pure` was processed.",
                                        "- `ext_index`: The extrinsic index in which the call to `pure` was processed.",
                                        "",
                                        "Fails with `NoPermission` in case the caller is not a previously created pure",
                                        "account whose `pure` call has corresponding parameters."
                                    ]
                                },
                                {
                                    "name": "announce",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 11,
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Publish the hash of a proxy-call that will be made in the future.",
                                        "",
                                        "This must be called some number of blocks before the corresponding `proxy` is attempted",
                                        "if the delay associated with the proxy relationship is greater than zero.",
                                        "",
                                        "No more than `MaxPending` announcements may be made at any one time.",
                                        "",
                                        "This will take a deposit of `AnnouncementDepositFactor` as well as",
                                        "`AnnouncementDepositBase` if there are no other pending announcements.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and a proxy of `real`.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `call_hash`: The hash of the call to be made by the `real` account."
                                    ]
                                },
                                {
                                    "name": "remove_announcement",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 11,
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Remove a given announcement.",
                                        "",
                                        "May be called by a proxy account to remove a call they previously announced and return",
                                        "the deposit.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `call_hash`: The hash of the call to be made by the `real` account."
                                    ]
                                },
                                {
                                    "name": "reject_announcement",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 11,
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Remove the given announcement of a delegate.",
                                        "",
                                        "May be called by a target (proxied) account to remove a call that one of their delegates",
                                        "(`delegate`) has announced they want to execute. The deposit is returned.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `delegate`: The account that previously announced the call.",
                                        "- `call_hash`: The hash of the call to be made."
                                    ]
                                },
                                {
                                    "name": "proxy_announced",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "real",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "force_proxy_type",
                                            "type": 304,
                                            "typeName": "Option<T::ProxyType>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Dispatch the given `call` from an account that the sender is authorized for through",
                                        "`add_proxy`.",
                                        "",
                                        "Removes any corresponding announcement(s).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                                        "- `call`: The call to be made by the `real` account."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 304,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 79
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 79,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 305,
                "type": {
                    "path": [
                        "pallet_multisig",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "as_multi_threshold_1",
                                    "fields": [
                                        {
                                            "name": "other_signatories",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Immediately dispatch a multi-signature call using a single approval from the caller.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `other_signatories`: The accounts (other than the sender) who are part of the",
                                        "multi-signature, but do not participate in the approval process.",
                                        "- `call`: The call to be executed.",
                                        "",
                                        "Result is equivalent to the dispatched result.",
                                        "",
                                        "# <weight>",
                                        "O(Z + C) where Z is the length of the call and C its execution weight.",
                                        "-------------------------------",
                                        "- DB Weight: None",
                                        "- Plus Call Weight",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "as_multi",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "other_signatories",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_timepoint",
                                            "type": 306,
                                            "typeName": "Option<Timepoint<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 181,
                                            "typeName": "Box<<T as Config>::RuntimeCall>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Register approval for a dispatch to be made from a deterministic composite account if",
                                        "approved by a total of `threshold - 1` of `other_signatories`.",
                                        "",
                                        "If there are enough, then dispatch the call.",
                                        "",
                                        "Payment: `DepositBase` will be reserved if this is the first approval, plus",
                                        "`threshold` times `DepositFactor`. It is returned once this dispatch happens or",
                                        "is cancelled.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                                        "dispatch. May not be empty.",
                                        "- `maybe_timepoint`: If this is the first approval, then this must be `None`. If it is",
                                        "not the first approval, then it must be `Some`, with the timepoint (block number and",
                                        "transaction index) of the first approval transaction.",
                                        "- `call`: The call to be executed.",
                                        "",
                                        "NOTE: Unless this is the final approval, you will generally want to use",
                                        "`approve_as_multi` instead, since it only requires a hash of the call.",
                                        "",
                                        "Result is equivalent to the dispatched result if `threshold` is exactly `1`. Otherwise",
                                        "on success, result is `Ok` and the result from the interior call, if it was executed,",
                                        "may be found in the deposited `MultisigExecuted` event.",
                                        "",
                                        "# <weight>",
                                        "- `O(S + Z + Call)`.",
                                        "- Up to one balance-reserve or unreserve operation.",
                                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                                        "- One call encode & hash, both of complexity `O(Z)` where `Z` is tx-len.",
                                        "- One encode & hash, both of complexity `O(S)`.",
                                        "- Up to one binary search and insert (`O(logS + S)`).",
                                        "- I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.",
                                        "- One event.",
                                        "- The weight of the `call`.",
                                        "- Storage: inserts one item, value size bounded by `MaxSignatories`, with a deposit",
                                        "  taken for its lifetime of `DepositBase + threshold * DepositFactor`.",
                                        "-------------------------------",
                                        "- DB Weight:",
                                        "    - Reads: Multisig Storage, [Caller Account]",
                                        "    - Writes: Multisig Storage, [Caller Account]",
                                        "- Plus Call Weight",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "approve_as_multi",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "other_signatories",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_timepoint",
                                            "type": 306,
                                            "typeName": "Option<Timepoint<T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Register approval for a dispatch to be made from a deterministic composite account if",
                                        "approved by a total of `threshold - 1` of `other_signatories`.",
                                        "",
                                        "Payment: `DepositBase` will be reserved if this is the first approval, plus",
                                        "`threshold` times `DepositFactor`. It is returned once this dispatch happens or",
                                        "is cancelled.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                                        "dispatch. May not be empty.",
                                        "- `maybe_timepoint`: If this is the first approval, then this must be `None`. If it is",
                                        "not the first approval, then it must be `Some`, with the timepoint (block number and",
                                        "transaction index) of the first approval transaction.",
                                        "- `call_hash`: The hash of the call to be executed.",
                                        "",
                                        "NOTE: If this is the final approval, you will want to use `as_multi` instead.",
                                        "",
                                        "# <weight>",
                                        "- `O(S)`.",
                                        "- Up to one balance-reserve or unreserve operation.",
                                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                                        "- One encode & hash, both of complexity `O(S)`.",
                                        "- Up to one binary search and insert (`O(logS + S)`).",
                                        "- I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.",
                                        "- One event.",
                                        "- Storage: inserts one item, value size bounded by `MaxSignatories`, with a deposit",
                                        "  taken for its lifetime of `DepositBase + threshold * DepositFactor`.",
                                        "----------------------------------",
                                        "- DB Weight:",
                                        "    - Read: Multisig Storage, [Caller Account]",
                                        "    - Write: Multisig Storage, [Caller Account]",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "cancel_as_multi",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": 80,
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "other_signatories",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "timepoint",
                                            "type": 82,
                                            "typeName": "Timepoint<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": 1,
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Cancel a pre-existing, on-going multisig transaction. Any deposit reserved previously",
                                        "for this operation will be unreserved on success.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                                        "dispatch. May not be empty.",
                                        "- `timepoint`: The timepoint (block number and transaction index) of the first approval",
                                        "transaction for this dispatch.",
                                        "- `call_hash`: The hash of the call to be executed.",
                                        "",
                                        "# <weight>",
                                        "- `O(S)`.",
                                        "- Up to one balance-reserve or unreserve operation.",
                                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                                        "- One encode & hash, both of complexity `O(S)`.",
                                        "- One event.",
                                        "- I/O: 1 read `O(S)`, one remove.",
                                        "- Storage: removes one item.",
                                        "----------------------------------",
                                        "- DB Weight:",
                                        "    - Read: Multisig Storage, [Caller Account], Refund Account",
                                        "    - Write: Multisig Storage, [Caller Account], Refund Account",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 306,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 82
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 82,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 307,
                "type": {
                    "path": [
                        "pallet_bounties",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "propose_bounty",
                                    "fields": [
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        },
                                        {
                                            "name": "description",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Propose a new bounty.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Payment: `TipReportDepositBase` will be reserved from the origin account, as well as",
                                        "`DataDepositPerByte` for each byte in `reason`. It will be unreserved upon approval,",
                                        "or slashed when rejected.",
                                        "",
                                        "- `curator`: The curator account whom will manage this bounty.",
                                        "- `fee`: The curator fee.",
                                        "- `value`: The total payment amount of this bounty, curator fee included.",
                                        "- `description`: The description of this bounty."
                                    ]
                                },
                                {
                                    "name": "approve_bounty",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Approve a bounty proposal. At a later time, the bounty will be funded and become active",
                                        "and the original deposit will be returned.",
                                        "",
                                        "May only be called from `T::SpendOrigin`.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "propose_curator",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "curator",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Assign a curator to a funded bounty.",
                                        "",
                                        "May only be called from `T::SpendOrigin`.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "unassign_curator",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Unassign curator from a bounty.",
                                        "",
                                        "This function can only be called by the `RejectOrigin` a signed origin.",
                                        "",
                                        "If this function is called by the `RejectOrigin`, we assume that the curator is",
                                        "malicious or inactive. As a result, we will slash the curator when possible.",
                                        "",
                                        "If the origin is the curator, we take this as a sign they are unable to do their job and",
                                        "they willingly give up. We could slash them, but for now we allow them to recover their",
                                        "deposit and exit without issue. (We may want to change this if it is abused.)",
                                        "",
                                        "Finally, the origin can be anyone if and only if the curator is \"inactive\". This allows",
                                        "anyone in the community to call out that a curator is not doing their due diligence, and",
                                        "we should pick a new curator. In this case the curator should also be slashed.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "accept_curator",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Accept the curator role for a bounty.",
                                        "A deposit will be reserved from curator and refund upon successful payout.",
                                        "",
                                        "May only be called from the curator.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "award_bounty",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Award bounty to a beneficiary account. The beneficiary will be able to claim the funds",
                                        "after a delay.",
                                        "",
                                        "The dispatch origin for this call must be the curator of this bounty.",
                                        "",
                                        "- `bounty_id`: Bounty ID to award.",
                                        "- `beneficiary`: The beneficiary account whom will receive the payout.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "claim_bounty",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Claim the payout from an awarded bounty after payout delay.",
                                        "",
                                        "The dispatch origin for this call must be the beneficiary of this bounty.",
                                        "",
                                        "- `bounty_id`: Bounty ID to claim.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close_bounty",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Cancel a proposed or active bounty. All the funds will be sent to treasury and",
                                        "the curator deposit will be unreserved if possible.",
                                        "",
                                        "Only `T::RejectOrigin` is able to cancel a bounty.",
                                        "",
                                        "- `bounty_id`: Bounty ID to cancel.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "extend_bounty_expiry",
                                    "fields": [
                                        {
                                            "name": "bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "remark",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Extend the expiry time of an active bounty.",
                                        "",
                                        "The dispatch origin for this call must be the curator of this bounty.",
                                        "",
                                        "- `bounty_id`: Bounty ID to extend.",
                                        "- `remark`: additional information.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 308,
                "type": {
                    "path": [
                        "pallet_child_bounties",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "add_child_bounty",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "description",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Add a new child-bounty.",
                                        "",
                                        "The dispatch origin for this call must be the curator of parent",
                                        "bounty and the parent bounty must be in \"active\" state.",
                                        "",
                                        "Child-bounty gets added successfully & fund gets transferred from",
                                        "parent bounty to child-bounty account, if parent bounty has enough",
                                        "funds, else the call fails.",
                                        "",
                                        "Upper bound to maximum number of active  child bounties that can be",
                                        "added are managed via runtime trait config",
                                        "[`Config::MaxActiveChildBountyCount`].",
                                        "",
                                        "If the call is success, the status of child-bounty is updated to",
                                        "\"Added\".",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty for which child-bounty is being added.",
                                        "- `value`: Value for executing the proposal.",
                                        "- `description`: Text description for the child-bounty."
                                    ]
                                },
                                {
                                    "name": "propose_curator",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "curator",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Propose curator for funded child-bounty.",
                                        "",
                                        "The dispatch origin for this call must be curator of parent bounty.",
                                        "",
                                        "Parent bounty must be in active state, for this child-bounty call to",
                                        "work.",
                                        "",
                                        "Child-bounty must be in \"Added\" state, for processing the call. And",
                                        "state of child-bounty is moved to \"CuratorProposed\" on successful",
                                        "call completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty.",
                                        "- `curator`: Address of child-bounty curator.",
                                        "- `fee`: payment fee to child-bounty curator for execution."
                                    ]
                                },
                                {
                                    "name": "accept_curator",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Accept the curator role for the child-bounty.",
                                        "",
                                        "The dispatch origin for this call must be the curator of this",
                                        "child-bounty.",
                                        "",
                                        "A deposit will be reserved from the curator and refund upon",
                                        "successful payout or cancellation.",
                                        "",
                                        "Fee for curator is deducted from curator fee of parent bounty.",
                                        "",
                                        "Parent bounty must be in active state, for this child-bounty call to",
                                        "work.",
                                        "",
                                        "Child-bounty must be in \"CuratorProposed\" state, for processing the",
                                        "call. And state of child-bounty is moved to \"Active\" on successful",
                                        "call completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty."
                                    ]
                                },
                                {
                                    "name": "unassign_curator",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Unassign curator from a child-bounty.",
                                        "",
                                        "The dispatch origin for this call can be either `RejectOrigin`, or",
                                        "the curator of the parent bounty, or any signed origin.",
                                        "",
                                        "For the origin other than T::RejectOrigin and the child-bounty",
                                        "curator, parent bounty must be in active state, for this call to",
                                        "work. We allow child-bounty curator and T::RejectOrigin to execute",
                                        "this call irrespective of the parent bounty state.",
                                        "",
                                        "If this function is called by the `RejectOrigin` or the",
                                        "parent bounty curator, we assume that the child-bounty curator is",
                                        "malicious or inactive. As a result, child-bounty curator deposit is",
                                        "slashed.",
                                        "",
                                        "If the origin is the child-bounty curator, we take this as a sign",
                                        "that they are unable to do their job, and are willingly giving up.",
                                        "We could slash the deposit, but for now we allow them to unreserve",
                                        "their deposit and exit without issue. (We may want to change this if",
                                        "it is abused.)",
                                        "",
                                        "Finally, the origin can be anyone iff the child-bounty curator is",
                                        "\"inactive\". Expiry update due of parent bounty is used to estimate",
                                        "inactive state of child-bounty curator.",
                                        "",
                                        "This allows anyone in the community to call out that a child-bounty",
                                        "curator is not doing their due diligence, and we should pick a new",
                                        "one. In this case the child-bounty curator deposit is slashed.",
                                        "",
                                        "State of child-bounty is moved to Added state on successful call",
                                        "completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty."
                                    ]
                                },
                                {
                                    "name": "award_child_bounty",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Award child-bounty to a beneficiary.",
                                        "",
                                        "The beneficiary will be able to claim the funds after a delay.",
                                        "",
                                        "The dispatch origin for this call must be the parent curator or",
                                        "curator of this child-bounty.",
                                        "",
                                        "Parent bounty must be in active state, for this child-bounty call to",
                                        "work.",
                                        "",
                                        "Child-bounty must be in active state, for processing the call. And",
                                        "state of child-bounty is moved to \"PendingPayout\" on successful call",
                                        "completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty.",
                                        "- `beneficiary`: Beneficiary account."
                                    ]
                                },
                                {
                                    "name": "claim_child_bounty",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Claim the payout from an awarded child-bounty after payout delay.",
                                        "",
                                        "The dispatch origin for this call may be any signed origin.",
                                        "",
                                        "Call works independent of parent bounty state, No need for parent",
                                        "bounty to be in active state.",
                                        "",
                                        "The Beneficiary is paid out with agreed bounty value. Curator fee is",
                                        "paid & curator deposit is unreserved.",
                                        "",
                                        "Child-bounty must be in \"PendingPayout\" state, for processing the",
                                        "call. And instance of child-bounty is removed from the state on",
                                        "successful call completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty."
                                    ]
                                },
                                {
                                    "name": "close_child_bounty",
                                    "fields": [
                                        {
                                            "name": "parent_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "child_bounty_id",
                                            "type": 125,
                                            "typeName": "BountyIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Cancel a proposed or active child-bounty. Child-bounty account funds",
                                        "are transferred to parent bounty account. The child-bounty curator",
                                        "deposit may be unreserved if possible.",
                                        "",
                                        "The dispatch origin for this call must be either parent curator or",
                                        "`T::RejectOrigin`.",
                                        "",
                                        "If the state of child-bounty is `Active`, curator deposit is",
                                        "unreserved.",
                                        "",
                                        "If the state of child-bounty is `PendingPayout`, call fails &",
                                        "returns `PendingPayout` error.",
                                        "",
                                        "For the origin other than T::RejectOrigin, parent bounty must be in",
                                        "active state, for this child-bounty call to work. For origin",
                                        "T::RejectOrigin execution is forced.",
                                        "",
                                        "Instance of child-bounty is removed from the state on successful",
                                        "call completion.",
                                        "",
                                        "- `parent_bounty_id`: Index of parent bounty.",
                                        "- `child_bounty_id`: Index of child bounty."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 309,
                "type": {
                    "path": [
                        "pallet_tips",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "report_awesome",
                                    "fields": [
                                        {
                                            "name": "reason",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Report something `reason` that deserves a tip and claim any eventual the finder's fee.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Payment: `TipReportDepositBase` will be reserved from the origin account, as well as",
                                        "`DataDepositPerByte` for each byte in `reason`.",
                                        "",
                                        "- `reason`: The reason for, or the thing that deserves, the tip; generally this will be",
                                        "  a UTF-8-encoded URL.",
                                        "- `who`: The account which should be credited for the tip.",
                                        "",
                                        "Emits `NewTip` if successful.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(R)` where `R` length of `reason`.",
                                        "  - encoding and hashing of 'reason'",
                                        "- DbReads: `Reasons`, `Tips`",
                                        "- DbWrites: `Reasons`, `Tips`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "retract_tip",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Retract a prior tip-report from `report_awesome`, and cancel the process of tipping.",
                                        "",
                                        "If successful, the original deposit will be unreserved.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the tip identified by `hash`",
                                        "must have been reported by the signing account through `report_awesome` (and not",
                                        "through `tip_new`).",
                                        "",
                                        "- `hash`: The identity of the open tip for which a tip value is declared. This is formed",
                                        "  as the hash of the tuple of the original tip `reason` and the beneficiary account ID.",
                                        "",
                                        "Emits `TipRetracted` if successful.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(1)`",
                                        "  - Depends on the length of `T::Hash` which is fixed.",
                                        "- DbReads: `Tips`, `origin account`",
                                        "- DbWrites: `Reasons`, `Tips`, `origin account`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "tip_new",
                                    "fields": [
                                        {
                                            "name": "reason",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "who",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "tip_value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Give a tip for something new; no finder's fee will be taken.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the signing account must be a",
                                        "member of the `Tippers` set.",
                                        "",
                                        "- `reason`: The reason for, or the thing that deserves, the tip; generally this will be",
                                        "  a UTF-8-encoded URL.",
                                        "- `who`: The account which should be credited for the tip.",
                                        "- `tip_value`: The amount of tip that the sender would like to give. The median tip",
                                        "  value of active tippers will be given to the `who`.",
                                        "",
                                        "Emits `NewTip` if successful.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(R + T)` where `R` length of `reason`, `T` is the number of tippers.",
                                        "  - `O(T)`: decoding `Tipper` vec of length `T`. `T` is charged as upper bound given by",
                                        "    `ContainsLengthBound`. The actual cost depends on the implementation of",
                                        "    `T::Tippers`.",
                                        "  - `O(R)`: hashing and encoding of reason of length `R`",
                                        "- DbReads: `Tippers`, `Reasons`",
                                        "- DbWrites: `Reasons`, `Tips`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "tip",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "tip_value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T, I>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Declare a tip value for an already-open tip.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the signing account must be a",
                                        "member of the `Tippers` set.",
                                        "",
                                        "- `hash`: The identity of the open tip for which a tip value is declared. This is formed",
                                        "  as the hash of the tuple of the hash of the original tip `reason` and the beneficiary",
                                        "  account ID.",
                                        "- `tip_value`: The amount of tip that the sender would like to give. The median tip",
                                        "  value of active tippers will be given to the `who`.",
                                        "",
                                        "Emits `TipClosing` if the threshold of tippers has been reached and the countdown period",
                                        "has started.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(T)` where `T` is the number of tippers. decoding `Tipper` vec of length",
                                        "  `T`, insert tip and check closing, `T` is charged as upper bound given by",
                                        "  `ContainsLengthBound`. The actual cost depends on the implementation of `T::Tippers`.",
                                        "",
                                        "  Actually weight could be lower as it depends on how many tips are in `OpenTip` but it",
                                        "  is weighted as if almost full i.e of length `T-1`.",
                                        "- DbReads: `Tippers`, `Tips`",
                                        "- DbWrites: `Tips`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "close_tip",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Close and payout a tip.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "The tip identified by `hash` must have finished its countdown period.",
                                        "",
                                        "- `hash`: The identity of the open tip for which a tip value is declared. This is formed",
                                        "  as the hash of the tuple of the original tip `reason` and the beneficiary account ID.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(T)` where `T` is the number of tippers. decoding `Tipper` vec of length",
                                        "  `T`. `T` is charged as upper bound given by `ContainsLengthBound`. The actual cost",
                                        "  depends on the implementation of `T::Tippers`.",
                                        "- DbReads: `Tips`, `Tippers`, `tip finder`",
                                        "- DbWrites: `Reasons`, `Tips`, `Tippers`, `tip finder`",
                                        "# </weight>"
                                    ]
                                },
                                {
                                    "name": "slash_tip",
                                    "fields": [
                                        {
                                            "name": "hash",
                                            "type": 11,
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Remove and slash an already-open tip.",
                                        "",
                                        "May only be called from `T::RejectOrigin`.",
                                        "",
                                        "As a result, the finder is slashed and the deposits are lost.",
                                        "",
                                        "Emits `TipSlashed` if successful.",
                                        "",
                                        "# <weight>",
                                        "  `T` is charged as upper bound given by `ContainsLengthBound`.",
                                        "  The actual cost depends on the implementation of `T::Tippers`.",
                                        "# </weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 310,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "submit_unsigned",
                                    "fields": [
                                        {
                                            "name": "raw_solution",
                                            "type": 311,
                                            "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "witness",
                                            "type": 363,
                                            "typeName": "SolutionOrSnapshotSize",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Submit a solution for the unsigned phase.",
                                        "",
                                        "The dispatch origin fo this call must be __none__.",
                                        "",
                                        "This submission is checked on the fly. Moreover, this unsigned solution is only",
                                        "validated when submitted to the pool from the **local** node. Effectively, this means",
                                        "that only active validators can submit this transaction when authoring a block (similar",
                                        "to an inherent).",
                                        "",
                                        "To prevent any incorrect solution (and thus wasted time/weight), this transaction will",
                                        "panic if the solution submitted by the validator is invalid in any way, effectively",
                                        "putting their authoring reward at risk.",
                                        "",
                                        "No deposit or reward is associated with this submission."
                                    ]
                                },
                                {
                                    "name": "set_minimum_untrusted_score",
                                    "fields": [
                                        {
                                            "name": "maybe_next_score",
                                            "type": 364,
                                            "typeName": "Option<ElectionScore>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set a new value for `MinimumUntrustedScore`.",
                                        "",
                                        "Dispatch origin must be aligned with `T::ForceOrigin`.",
                                        "",
                                        "This check can be turned off by setting the value to `None`."
                                    ]
                                },
                                {
                                    "name": "set_emergency_election_result",
                                    "fields": [
                                        {
                                            "name": "supports",
                                            "type": 365,
                                            "typeName": "Supports<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set a solution in the queue, to be handed out to the client of this pallet in the next",
                                        "call to `ElectionProvider::elect`.",
                                        "",
                                        "This can only be set by `T::ForceOrigin`, and only when the phase is `Emergency`.",
                                        "",
                                        "The solution is not checked for any feasibility and is assumed to be trustworthy, as any",
                                        "feasibility check itself can in principle cause the election process to fail (due to",
                                        "memory/weight constrains)."
                                    ]
                                },
                                {
                                    "name": "submit",
                                    "fields": [
                                        {
                                            "name": "raw_solution",
                                            "type": 311,
                                            "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Submit a solution for the signed phase.",
                                        "",
                                        "The dispatch origin fo this call must be __signed__.",
                                        "",
                                        "The solution is potentially queued, based on the claimed score and processed at the end",
                                        "of the signed phase.",
                                        "",
                                        "A deposit is reserved and recorded for the solution. Based on the outcome, the solution",
                                        "might be rewarded, slashed, or get all or a part of the deposit back."
                                    ]
                                },
                                {
                                    "name": "governance_fallback",
                                    "fields": [
                                        {
                                            "name": "maybe_max_voters",
                                            "type": 236,
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_max_targets",
                                            "type": 236,
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Trigger the governance fallback.",
                                        "",
                                        "This can only be called when [`Phase::Emergency`] is enabled, as an alternative to",
                                        "calling [`Call::set_emergency_election_result`]."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 311,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "RawSolution"
                    ],
                    "params": [
                        {
                            "name": "S",
                            "type": 312
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "solution",
                                    "type": 312,
                                    "typeName": "S",
                                    "docs": []
                                },
                                {
                                    "name": "score",
                                    "type": 88,
                                    "typeName": "ElectionScore",
                                    "docs": []
                                },
                                {
                                    "name": "round",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 312,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "NposCompactSolution16"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "votes1",
                                    "type": 313,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes2",
                                    "type": 316,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes3",
                                    "type": 321,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes4",
                                    "type": 324,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes5",
                                    "type": 327,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes6",
                                    "type": 330,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes7",
                                    "type": 333,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes8",
                                    "type": 336,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes9",
                                    "type": 339,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes10",
                                    "type": 342,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes11",
                                    "type": 345,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes12",
                                    "type": 348,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes13",
                                    "type": 351,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes14",
                                    "type": 354,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes15",
                                    "type": 357,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": "votes16",
                                    "type": 360,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 313,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 314
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 314,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 315,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 80
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 316,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 317
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 317,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            318,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 318,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            315,
                            319
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 319,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 320
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 320,
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "per_things",
                        "PerU16"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 80,
                                    "typeName": "u16",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 321,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 322
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 322,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            323,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 323,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 2,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 324,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 325
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 325,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            326,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 326,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 3,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 327,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 328
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 328,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            329,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 329,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 4,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 330,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 331
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 331,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            332,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 332,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 5,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 333,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 334
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 334,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            335,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 335,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 6,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 336,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 337
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 337,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            338,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 338,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 7,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 339,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 340
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 340,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            341,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 341,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 8,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 342,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 343
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 343,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            344,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 344,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 9,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 345,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 346
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 346,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            347,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 347,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 10,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 348,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 349
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 349,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            350,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 350,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 11,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 351,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 352
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 352,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            353,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 353,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 12,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 354,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 355
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 355,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            356,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 356,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 13,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 357,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 358
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 358,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            359,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 359,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 14,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 360,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 361
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 361,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            125,
                            362,
                            315
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 362,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 15,
                            "type": 318
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 363,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "SolutionOrSnapshotSize"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "voters",
                                    "type": 125,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "targets",
                                    "type": 125,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 364,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 88
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 88,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 365,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 366
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 366,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            367
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 367,
                "type": {
                    "path": [
                        "sp_npos_elections",
                        "Support"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "total",
                                    "type": 6,
                                    "typeName": "ExtendedBalance",
                                    "docs": []
                                },
                                {
                                    "name": "voters",
                                    "type": 68,
                                    "typeName": "Vec<(AccountId, ExtendedBalance)>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 368,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "rebag",
                                    "fields": [
                                        {
                                            "name": "dislocated",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Declare that some `dislocated` account has, through rewards or penalties, sufficiently",
                                        "changed its score that it should properly fall into a different bag than its current",
                                        "one.",
                                        "",
                                        "Anyone can call this function about any potentially dislocated account.",
                                        "",
                                        "Will always update the stored score of `dislocated` to the correct score, based on",
                                        "`ScoreProvider`.",
                                        "",
                                        "If `dislocated` does not exists, it returns an error."
                                    ]
                                },
                                {
                                    "name": "put_in_front_of",
                                    "fields": [
                                        {
                                            "name": "lighter",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Move the caller's Id directly in front of `lighter`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and can only be called by the Id of",
                                        "the account going in front of `lighter`.",
                                        "",
                                        "Only works if",
                                        "- both nodes are within the same bag,",
                                        "- and `origin` has a greater `Score` than `lighter`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 369,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "join",
                                    "fields": [
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Stake funds with a pool. The amount to bond is transferred from the member to the",
                                        "pools account and immediately increases the pools bond.",
                                        "",
                                        "# Note",
                                        "",
                                        "* An account can only be a member of a single pool.",
                                        "* An account cannot join the same pool multiple times.",
                                        "* This call will *not* dust the member account, so the member must have at least",
                                        "  `existential deposit + amount` in their account.",
                                        "* Only a pool with [`PoolState::Open`] can be joined"
                                    ]
                                },
                                {
                                    "name": "bond_extra",
                                    "fields": [
                                        {
                                            "name": "extra",
                                            "type": 370,
                                            "typeName": "BondExtra<BalanceOf<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Bond `extra` more funds from `origin` into the pool to which they already belong.",
                                        "",
                                        "Additional funds can come from either the free balance of the account, of from the",
                                        "accumulated rewards, see [`BondExtra`].",
                                        "",
                                        "Bonding extra funds implies an automatic payout of all pending rewards as well."
                                    ]
                                },
                                {
                                    "name": "claim_payout",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A bonded member can use this to claim their payout based on the rewards that the pool",
                                        "has accumulated since their last claimed payout (OR since joining if this is there first",
                                        "time claiming rewards). The payout will be transferred to the member's account.",
                                        "",
                                        "The member will earn rewards pro rata based on the members stake vs the sum of the",
                                        "members in the pools stake. Rewards do not \"expire\"."
                                    ]
                                },
                                {
                                    "name": "unbond",
                                    "fields": [
                                        {
                                            "name": "member_account",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "unbonding_points",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Unbond up to `unbonding_points` of the `member_account`'s funds from the pool. It",
                                        "implicitly collects the rewards one last time, since not doing so would mean some",
                                        "rewards would be forfeited.",
                                        "",
                                        "Under certain conditions, this call can be dispatched permissionlessly (i.e. by any",
                                        "account).",
                                        "",
                                        "# Conditions for a permissionless dispatch.",
                                        "",
                                        "* The pool is blocked and the caller is either the root or state-toggler. This is",
                                        "  refereed to as a kick.",
                                        "* The pool is destroying and the member is not the depositor.",
                                        "* The pool is destroying, the member is the depositor and no other members are in the",
                                        "  pool.",
                                        "",
                                        "## Conditions for permissioned dispatch (i.e. the caller is also the",
                                        "`member_account`):",
                                        "",
                                        "* The caller is not the depositor.",
                                        "* The caller is the depositor, the pool is destroying and no other members are in the",
                                        "  pool.",
                                        "",
                                        "# Note",
                                        "",
                                        "If there are too many unlocking chunks to unbond with the pool account,",
                                        "[`Call::pool_withdraw_unbonded`] can be called to try and minimize unlocking chunks.",
                                        "The [`StakingInterface::unbond`] will implicitly call [`Call::pool_withdraw_unbonded`]",
                                        "to try to free chunks if necessary (ie. if unbound was called and no unlocking chunks",
                                        "are available). However, it may not be possible to release the current unlocking chunks,",
                                        "in which case, the result of this call will likely be the `NoMoreChunks` error from the",
                                        "staking system."
                                    ]
                                },
                                {
                                    "name": "pool_withdraw_unbonded",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "num_slashing_spans",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Call `withdraw_unbonded` for the pools account. This call can be made by any account.",
                                        "",
                                        "This is useful if their are too many unlocking chunks to call `unbond`, and some",
                                        "can be cleared by withdrawing. In the case there are too many unlocking chunks, the user",
                                        "would probably see an error like `NoMoreChunks` emitted from the staking system when",
                                        "they attempt to unbond."
                                    ]
                                },
                                {
                                    "name": "withdraw_unbonded",
                                    "fields": [
                                        {
                                            "name": "member_account",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "num_slashing_spans",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Withdraw unbonded funds from `member_account`. If no bonded funds can be unbonded, an",
                                        "error is returned.",
                                        "",
                                        "Under certain conditions, this call can be dispatched permissionlessly (i.e. by any",
                                        "account).",
                                        "",
                                        "# Conditions for a permissionless dispatch",
                                        "",
                                        "* The pool is in destroy mode and the target is not the depositor.",
                                        "* The target is the depositor and they are the only member in the sub pools.",
                                        "* The pool is blocked and the caller is either the root or state-toggler.",
                                        "",
                                        "# Conditions for permissioned dispatch",
                                        "",
                                        "* The caller is the target and they are not the depositor.",
                                        "",
                                        "# Note",
                                        "",
                                        "If the target is the depositor, the pool will be destroyed."
                                    ]
                                },
                                {
                                    "name": "create",
                                    "fields": [
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "root",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "nominator",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "state_toggler",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Create a new delegation pool.",
                                        "",
                                        "# Arguments",
                                        "",
                                        "* `amount` - The amount of funds to delegate to the pool. This also acts of a sort of",
                                        "  deposit since the pools creator cannot fully unbond funds until the pool is being",
                                        "  destroyed.",
                                        "* `index` - A disambiguation index for creating the account. Likely only useful when",
                                        "  creating multiple pools in the same extrinsic.",
                                        "* `root` - The account to set as [`PoolRoles::root`].",
                                        "* `nominator` - The account to set as the [`PoolRoles::nominator`].",
                                        "* `state_toggler` - The account to set as the [`PoolRoles::state_toggler`].",
                                        "",
                                        "# Note",
                                        "",
                                        "In addition to `amount`, the caller will transfer the existential deposit; so the caller",
                                        "needs at have at least `amount + existential_deposit` transferrable."
                                    ]
                                },
                                {
                                    "name": "create_with_pool_id",
                                    "fields": [
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "root",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "nominator",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "state_toggler",
                                            "type": 197,
                                            "typeName": "AccountIdLookupOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Create a new delegation pool with a previously used pool id",
                                        "",
                                        "# Arguments",
                                        "",
                                        "same as `create` with the inclusion of",
                                        "* `pool_id` - `A valid PoolId."
                                    ]
                                },
                                {
                                    "name": "nominate",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "validators",
                                            "type": 206,
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Nominate on behalf of the pool.",
                                        "",
                                        "The dispatch origin of this call must be signed by the pool nominator or the pool",
                                        "root role.",
                                        "",
                                        "This directly forward the call to the staking pallet, on behalf of the pool bonded",
                                        "account."
                                    ]
                                },
                                {
                                    "name": "set_state",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "state",
                                            "type": 91,
                                            "typeName": "PoolState",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Set a new state for the pool.",
                                        "",
                                        "If a pool is already in the `Destroying` state, then under no condition can its state",
                                        "change again.",
                                        "",
                                        "The dispatch origin of this call must be either:",
                                        "",
                                        "1. signed by the state toggler, or the root role of the pool,",
                                        "2. if the pool conditions to be open are NOT met (as described by `ok_to_be_open`), and",
                                        "   then the state of the pool can be permissionlessly changed to `Destroying`."
                                    ]
                                },
                                {
                                    "name": "set_metadata",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "metadata",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Set a new metadata for the pool.",
                                        "",
                                        "The dispatch origin of this call must be signed by the state toggler, or the root role",
                                        "of the pool."
                                    ]
                                },
                                {
                                    "name": "set_configs",
                                    "fields": [
                                        {
                                            "name": "min_join_bond",
                                            "type": 371,
                                            "typeName": "ConfigOp<BalanceOf<T>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "min_create_bond",
                                            "type": 371,
                                            "typeName": "ConfigOp<BalanceOf<T>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_pools",
                                            "type": 372,
                                            "typeName": "ConfigOp<u32>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_members",
                                            "type": 372,
                                            "typeName": "ConfigOp<u32>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_members_per_pool",
                                            "type": 372,
                                            "typeName": "ConfigOp<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Update configurations for the nomination pools. The origin for this call must be",
                                        "Root.",
                                        "",
                                        "# Arguments",
                                        "",
                                        "* `min_join_bond` - Set [`MinJoinBond`].",
                                        "* `min_create_bond` - Set [`MinCreateBond`].",
                                        "* `max_pools` - Set [`MaxPools`].",
                                        "* `max_members` - Set [`MaxPoolMembers`].",
                                        "* `max_members_per_pool` - Set [`MaxPoolMembersPerPool`]."
                                    ]
                                },
                                {
                                    "name": "update_roles",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_root",
                                            "type": 373,
                                            "typeName": "ConfigOp<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_nominator",
                                            "type": 373,
                                            "typeName": "ConfigOp<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_state_toggler",
                                            "type": 373,
                                            "typeName": "ConfigOp<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "Update the roles of the pool.",
                                        "",
                                        "The root is the only entity that can change any of the roles, including itself,",
                                        "excluding the depositor, who can never change.",
                                        "",
                                        "It emits an event, notifying UIs of the role change. This event is quite relevant to",
                                        "most pool members and they should be informed of changes to pool roles."
                                    ]
                                },
                                {
                                    "name": "chill",
                                    "fields": [
                                        {
                                            "name": "pool_id",
                                            "type": 4,
                                            "typeName": "PoolId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "Chill on behalf of the pool.",
                                        "",
                                        "The dispatch origin of this call must be signed by the pool nominator or the pool",
                                        "root role, same as [`Pallet::nominate`].",
                                        "",
                                        "This directly forward the call to the staking pallet, on behalf of the pool bonded",
                                        "account."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 370,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "BondExtra"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "FreeBalance",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Rewards",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 371,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 6,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 372,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 373,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "ConfigOp"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Set",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 0,
                                            "typeName": "T",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Remove",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 374,
                "type": {
                    "path": [
                        "pallet_fast_unstake",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "register_fast_unstake",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Register oneself for fast-unstake.",
                                        "",
                                        "The dispatch origin of this call must be signed by the controller account, similar to",
                                        "`staking::unbond`.",
                                        "",
                                        "The stash associated with the origin must have no ongoing unlocking chunks. If",
                                        "successful, this will fully unbond and chill the stash. Then, it will enqueue the stash",
                                        "to be checked in further blocks.",
                                        "",
                                        "If by the time this is called, the stash is actually eligible for fast-unstake, then",
                                        "they are guaranteed to remain eligible, because the call will chill them as well.",
                                        "",
                                        "If the check works, the entire staking data is removed, i.e. the stash is fully",
                                        "unstaked.",
                                        "",
                                        "If the check fails, the stash remains chilled and waiting for being unbonded as in with",
                                        "the normal staking system, but they lose part of their unbonding chunks due to consuming",
                                        "the chain's resources."
                                    ]
                                },
                                {
                                    "name": "deregister",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Deregister oneself from the fast-unstake.",
                                        "",
                                        "This is useful if one is registered, they are still waiting, and they change their mind.",
                                        "",
                                        "Note that the associated stash is still fully unbonded and chilled as a consequence of",
                                        "calling `register_fast_unstake`. This should probably be followed by a call to",
                                        "`Staking::rebond`."
                                    ]
                                },
                                {
                                    "name": "control",
                                    "fields": [
                                        {
                                            "name": "unchecked_eras_to_check",
                                            "type": 4,
                                            "typeName": "EraIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Control the operation of this pallet.",
                                        "",
                                        "Dispatch origin must be signed by the [`Config::ControlOrigin`]."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 375,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_validation_upgrade_cooldown",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the validation upgrade cooldown."
                                    ]
                                },
                                {
                                    "name": "set_validation_upgrade_delay",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the validation upgrade delay."
                                    ]
                                },
                                {
                                    "name": "set_code_retention_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set the acceptance period for an included candidate."
                                    ]
                                },
                                {
                                    "name": "set_max_code_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Set the max validation code size for incoming upgrades."
                                    ]
                                },
                                {
                                    "name": "set_max_pov_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Set the max POV block size for incoming upgrades."
                                    ]
                                },
                                {
                                    "name": "set_max_head_data_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set the max head data size for paras."
                                    ]
                                },
                                {
                                    "name": "set_parathread_cores",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Set the number of parathread execution cores."
                                    ]
                                },
                                {
                                    "name": "set_parathread_retries",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Set the number of retries for a particular parathread."
                                    ]
                                },
                                {
                                    "name": "set_group_rotation_frequency",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Set the parachain validator-group rotation frequency"
                                    ]
                                },
                                {
                                    "name": "set_chain_availability_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Set the availability period for parachains."
                                    ]
                                },
                                {
                                    "name": "set_thread_availability_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Set the availability period for parathreads."
                                    ]
                                },
                                {
                                    "name": "set_scheduling_lookahead",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Set the scheduling lookahead, in expected number of blocks at peak throughput."
                                    ]
                                },
                                {
                                    "name": "set_max_validators_per_core",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 236,
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "Set the maximum number of validators to assign to any core."
                                    ]
                                },
                                {
                                    "name": "set_max_validators",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 236,
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "Set the maximum number of validators to use in parachain consensus."
                                    ]
                                },
                                {
                                    "name": "set_dispute_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "Set the dispute period, in number of sessions to keep for disputes."
                                    ]
                                },
                                {
                                    "name": "set_dispute_post_conclusion_acceptance_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "Set the dispute post conclusion acceptance period."
                                    ]
                                },
                                {
                                    "name": "set_dispute_max_spam_slots",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": [
                                        "Set the maximum number of dispute spam slots."
                                    ]
                                },
                                {
                                    "name": "set_dispute_conclusion_by_time_out_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": [
                                        "Set the dispute conclusion by time out period."
                                    ]
                                },
                                {
                                    "name": "set_no_show_slots",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": [
                                        "Set the no show slots, in number of number of consensus slots.",
                                        "Must be at least 1."
                                    ]
                                },
                                {
                                    "name": "set_n_delay_tranches",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": [
                                        "Set the total number of delay tranches."
                                    ]
                                },
                                {
                                    "name": "set_zeroth_delay_tranche_width",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": [
                                        "Set the zeroth delay tranche width."
                                    ]
                                },
                                {
                                    "name": "set_needed_approvals",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": [
                                        "Set the number of validators needed to approve a block."
                                    ]
                                },
                                {
                                    "name": "set_relay_vrf_modulo_samples",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": [
                                        "Set the number of samples to do of the `RelayVRFModulo` approval assignment criterion."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_queue_count",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": [
                                        "Sets the maximum items that can present in a upward dispatch queue at once."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_queue_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": [
                                        "Sets the maximum total size of items that can present in a upward dispatch queue at once."
                                    ]
                                },
                                {
                                    "name": "set_max_downward_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": [
                                        "Set the critical downward message size."
                                    ]
                                },
                                {
                                    "name": "set_ump_service_total_weight",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": [
                                        "Sets the soft limit for the phase of dispatching dispatchable upward messages."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": [
                                        "Sets the maximum size of an upward message that can be sent by a candidate."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_message_num_per_candidate",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": [
                                        "Sets the maximum number of messages that a candidate can contain."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_open_request_ttl",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": [
                                        "Sets the number of sessions after which an HRMP open channel request expires."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_sender_deposit",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": [
                                        "Sets the amount of funds that the sender should provide for opening an HRMP channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_recipient_deposit",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": [
                                        "Sets the amount of funds that the recipient should provide for accepting opening an HRMP",
                                        "channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_capacity",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": [
                                        "Sets the maximum number of messages allowed in an HRMP channel at once."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_total_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 33,
                                    "docs": [
                                        "Sets the maximum total size of messages in bytes allowed in an HRMP channel at once."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parachain_inbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": [
                                        "Sets the maximum number of inbound HRMP channels a parachain is allowed to accept."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parathread_inbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": [
                                        "Sets the maximum number of inbound HRMP channels a parathread is allowed to accept."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": [
                                        "Sets the maximum size of a message that could ever be put into an HRMP channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parachain_outbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP channels a parachain is allowed to open."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parathread_outbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP channels a parathread is allowed to open."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_message_num_per_candidate",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP messages can be sent by a candidate."
                                    ]
                                },
                                {
                                    "name": "set_ump_max_individual_weight",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": [
                                        "Sets the maximum amount of weight any individual upward message may consume."
                                    ]
                                },
                                {
                                    "name": "set_pvf_checking_enabled",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 41,
                                    "docs": [
                                        "Enable or disable PVF pre-checking. Consult the field documentation prior executing."
                                    ]
                                },
                                {
                                    "name": "set_pvf_voting_ttl",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 42,
                                    "docs": [
                                        "Set the number of session changes after which a PVF pre-checking voting is rejected."
                                    ]
                                },
                                {
                                    "name": "set_minimum_validation_upgrade_delay",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 43,
                                    "docs": [
                                        "Sets the minimum delay between announcing the upgrade block for a parachain until the",
                                        "upgrade taking place.",
                                        "",
                                        "See the field documentation for information and constraints for the new value."
                                    ]
                                },
                                {
                                    "name": "set_bypass_consistency_check",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 44,
                                    "docs": [
                                        "Setting this to true will disable consistency checks for the configuration setters.",
                                        "Use with caution."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 376,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "shared",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 377,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 378,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "enter",
                                    "fields": [
                                        {
                                            "name": "data",
                                            "type": 379,
                                            "typeName": "ParachainsInherentData<T::Header>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Enter the paras inherent. This will process bitfields and backed candidates."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 379,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "InherentData"
                    ],
                    "params": [
                        {
                            "name": "HDR",
                            "type": 187
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "bitfields",
                                    "type": 380,
                                    "typeName": "UncheckedSignedAvailabilityBitfields",
                                    "docs": []
                                },
                                {
                                    "name": "backed_candidates",
                                    "type": 387,
                                    "typeName": "Vec<BackedCandidate<HDR::Hash>>",
                                    "docs": []
                                },
                                {
                                    "name": "disputes",
                                    "type": 397,
                                    "typeName": "MultiDisputeStatementSet",
                                    "docs": []
                                },
                                {
                                    "name": "parent_header",
                                    "type": 187,
                                    "typeName": "HDR",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 380,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 381
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 381,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "signed",
                        "UncheckedSigned"
                    ],
                    "params": [
                        {
                            "name": "Payload",
                            "type": 382
                        },
                        {
                            "name": "RealPayload",
                            "type": 382
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "payload",
                                    "type": 382,
                                    "typeName": "Payload",
                                    "docs": []
                                },
                                {
                                    "name": "validator_index",
                                    "type": 385,
                                    "typeName": "ValidatorIndex",
                                    "docs": []
                                },
                                {
                                    "name": "signature",
                                    "type": 386,
                                    "typeName": "ValidatorSignature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 382,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "AvailabilityBitfield"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 383,
                                    "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 383,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "BitSequence": {
                            "bitStoreType": 2,
                            "bitOrderType": 384
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 384,
                "type": {
                    "path": [
                        "bitvec",
                        "order",
                        "Lsb0"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 385,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ValidatorIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 386,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "validator_app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 101,
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 387,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 388
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 388,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "BackedCandidate"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "candidate",
                                    "type": 389,
                                    "typeName": "CommittedCandidateReceipt<H>",
                                    "docs": []
                                },
                                {
                                    "name": "validity_votes",
                                    "type": 395,
                                    "typeName": "Vec<ValidityAttestation>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_indices",
                                    "type": 383,
                                    "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 389,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CommittedCandidateReceipt"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "descriptor",
                                    "type": 97,
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "commitments",
                                    "type": 390,
                                    "typeName": "CandidateCommitments",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 390,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CandidateCommitments"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "upward_messages",
                                    "type": 164,
                                    "typeName": "Vec<UpwardMessage>",
                                    "docs": []
                                },
                                {
                                    "name": "horizontal_messages",
                                    "type": 391,
                                    "typeName": "Vec<OutboundHrmpMessage<Id>>",
                                    "docs": []
                                },
                                {
                                    "name": "new_validation_code",
                                    "type": 393,
                                    "typeName": "Option<ValidationCode>",
                                    "docs": []
                                },
                                {
                                    "name": "head_data",
                                    "type": 104,
                                    "typeName": "HeadData",
                                    "docs": []
                                },
                                {
                                    "name": "processed_downward_messages",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_watermark",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 391,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 392
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 392,
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "OutboundHrmpMessage"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": 98
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "recipient",
                                    "type": 98,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": 12,
                                    "typeName": "sp_std::vec::Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 393,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 394
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 394,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 394,
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCode"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 395,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 396
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 396,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ValidityAttestation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Implicit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 386,
                                            "typeName": "ValidatorSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Explicit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 386,
                                            "typeName": "ValidatorSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 397,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 398
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 398,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "DisputeStatementSet"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "candidate_hash",
                                    "type": 114,
                                    "typeName": "CandidateHash",
                                    "docs": []
                                },
                                {
                                    "name": "session",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "statements",
                                    "type": 399,
                                    "typeName": "Vec<(DisputeStatement, ValidatorIndex, ValidatorSignature)>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 399,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 400
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 400,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            401,
                            385,
                            386
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 401,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "DisputeStatement"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Valid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 402,
                                            "typeName": "ValidDisputeStatementKind",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Invalid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 403,
                                            "typeName": "InvalidDisputeStatementKind",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 402,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ValidDisputeStatementKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Explicit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "BackingSeconded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BackingValid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ApprovalChecking",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 403,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "InvalidDisputeStatementKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Explicit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 404,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_set_current_code",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the storage for the parachain validation code immediately."
                                    ]
                                },
                                {
                                    "name": "force_set_current_head",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_head",
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the storage for the current parachain head data immediately."
                                    ]
                                },
                                {
                                    "name": "force_schedule_code_upgrade",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        },
                                        {
                                            "name": "relay_parent_number",
                                            "type": 4,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Schedule an upgrade as if it was scheduled in the given relay parent block."
                                    ]
                                },
                                {
                                    "name": "force_note_new_head",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_head",
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Note a new block head for para within the context of the current block."
                                    ]
                                },
                                {
                                    "name": "force_queue_action",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Put a parachain directly into the next session's action queue.",
                                        "We can't queue it any sooner than this without going into the",
                                        "initializer..."
                                    ]
                                },
                                {
                                    "name": "add_trusted_validation_code",
                                    "fields": [
                                        {
                                            "name": "validation_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Adds the validation code to the storage.",
                                        "",
                                        "The code will not be added if it is already present. Additionally, if PVF pre-checking",
                                        "is running for that code, it will be instantly accepted.",
                                        "",
                                        "Otherwise, the code will be added into the storage. Note that the code will be added",
                                        "into storage with reference count 0. This is to account the fact that there are no users",
                                        "for this code yet. The caller will have to make sure that this code eventually gets",
                                        "used by some parachain or removed from the storage to avoid storage leaks. For the latter",
                                        "prefer to use the `poke_unused_validation_code` dispatchable to raw storage manipulation.",
                                        "",
                                        "This function is mainly meant to be used for upgrading parachains that do not follow",
                                        "the go-ahead signal while the PVF pre-checking feature is enabled."
                                    ]
                                },
                                {
                                    "name": "poke_unused_validation_code",
                                    "fields": [
                                        {
                                            "name": "validation_code_hash",
                                            "type": 103,
                                            "typeName": "ValidationCodeHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Remove the validation code from the storage iff the reference count is 0.",
                                        "",
                                        "This is better than removing the storage directly, because it will not remove the code",
                                        "that was suddenly got used by some parachain while this dispatchable was pending",
                                        "dispatching."
                                    ]
                                },
                                {
                                    "name": "include_pvf_check_statement",
                                    "fields": [
                                        {
                                            "name": "stmt",
                                            "type": 405,
                                            "typeName": "PvfCheckStatement",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": 386,
                                            "typeName": "ValidatorSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Includes a statement for a PVF pre-checking vote. Potentially, finalizes the vote and",
                                        "enacts the results if that was the last vote before achieving the supermajority."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 405,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "PvfCheckStatement"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "accept",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                },
                                {
                                    "name": "subject",
                                    "type": 103,
                                    "typeName": "ValidationCodeHash",
                                    "docs": []
                                },
                                {
                                    "name": "session_index",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "validator_index",
                                    "type": 385,
                                    "typeName": "ValidatorIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 406,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_approve",
                                    "fields": [
                                        {
                                            "name": "up_to",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Issue a signal to the consensus engine to forcibly act as though all parachain",
                                        "blocks in all relay chain blocks up to and including the given number in the current",
                                        "chain are valid and should be finalized."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 407,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "dmp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 408,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "service_overweight",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 10,
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": 8,
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Service a single overweight upward message.",
                                        "",
                                        "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                                        "- `index`: The index of the overweight message to service.",
                                        "- `weight_limit`: The amount of weight that message execution may take.",
                                        "",
                                        "Errors:",
                                        "- `UnknownMessageIndex`: Message of `index` is unknown.",
                                        "- `WeightOverLimit`: Message execution may use greater than `weight_limit`.",
                                        "",
                                        "Events:",
                                        "- `OverweightServiced`: On success."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 409,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "hrmp_init_open_channel",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposed_max_capacity",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposed_max_message_size",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Initiate opening a channel from a parachain to a given recipient with given channel",
                                        "parameters.",
                                        "",
                                        "- `proposed_max_capacity` - specifies how many messages can be in the channel at once.",
                                        "- `proposed_max_message_size` - specifies the maximum size of the messages.",
                                        "",
                                        "These numbers are a subject to the relay-chain configuration limits.",
                                        "",
                                        "The channel can be opened only after the recipient confirms it and only on a session",
                                        "change."
                                    ]
                                },
                                {
                                    "name": "hrmp_accept_open_channel",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Accept a pending open channel request from the given sender.",
                                        "",
                                        "The channel will be opened only on the next session boundary."
                                    ]
                                },
                                {
                                    "name": "hrmp_close_channel",
                                    "fields": [
                                        {
                                            "name": "channel_id",
                                            "type": 112,
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Initiate unilateral closing of a channel. The origin must be either the sender or the",
                                        "recipient in the channel being closed.",
                                        "",
                                        "The closure can only happen on a session change."
                                    ]
                                },
                                {
                                    "name": "force_clean_hrmp",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "inbound",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "outbound",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "This extrinsic triggers the cleanup of all the HRMP storage items that",
                                        "a para may have. Normally this happens once per session, but this allows",
                                        "you to trigger the cleanup immediately for a specific parachain.",
                                        "",
                                        "Origin must be Root.",
                                        "",
                                        "Number of inbound and outbound channels for `para` must be provided as witness data of weighing."
                                    ]
                                },
                                {
                                    "name": "force_process_hrmp_open",
                                    "fields": [
                                        {
                                            "name": "channels",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Force process HRMP open channel requests.",
                                        "",
                                        "If there are pending HRMP open channel requests, you can use this",
                                        "function process all of those requests immediately.",
                                        "",
                                        "Total number of opening channels must be provided as witness data of weighing."
                                    ]
                                },
                                {
                                    "name": "force_process_hrmp_close",
                                    "fields": [
                                        {
                                            "name": "channels",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Force process HRMP close channel requests.",
                                        "",
                                        "If there are pending HRMP close channel requests, you can use this",
                                        "function process all of those requests immediately.",
                                        "",
                                        "Total number of closing channels must be provided as witness data of weighing."
                                    ]
                                },
                                {
                                    "name": "hrmp_cancel_open_request",
                                    "fields": [
                                        {
                                            "name": "channel_id",
                                            "type": 112,
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        },
                                        {
                                            "name": "open_requests",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "This cancels a pending open channel request. It can be canceled by either of the sender",
                                        "or the recipient for that request. The origin must be either of those.",
                                        "",
                                        "The cancellation happens immediately. It is not possible to cancel the request if it is",
                                        "already accepted.",
                                        "",
                                        "Total number of open requests (i.e. `HrmpOpenChannelRequestsList`) must be provided as",
                                        "witness data."
                                    ]
                                },
                                {
                                    "name": "force_open_hrmp_channel",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Open a channel from a `sender` to a `recipient` `ParaId` using the Root origin. Although",
                                        "opened by Root, the `max_capacity` and `max_message_size` are still subject to the Relay",
                                        "Chain's configured limits.",
                                        "",
                                        "Expected use is when one of the `ParaId`s involved in the channel is governed by the",
                                        "Relay Chain, e.g. a common good parachain."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 410,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_unfreeze",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 411,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "register",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "genesis_head",
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": "validation_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Register head data and validation code for a reserved Para Id.",
                                        "",
                                        "## Arguments",
                                        "- `origin`: Must be called by a `Signed` origin.",
                                        "- `id`: The para ID. Must be owned/managed by the `origin` signing account.",
                                        "- `genesis_head`: The genesis head data of the parachain/thread.",
                                        "- `validation_code`: The initial validation code of the parachain/thread.",
                                        "",
                                        "## Deposits/Fees",
                                        "The origin signed account must reserve a corresponding deposit for the registration. Anything already",
                                        "reserved previously for this para ID is accounted for.",
                                        "",
                                        "## Events",
                                        "The `Registered` event is emitted in case of success."
                                    ]
                                },
                                {
                                    "name": "force_register",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "genesis_head",
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": "validation_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Force the registration of a Para Id on the relay chain.",
                                        "",
                                        "This function must be called by a Root origin.",
                                        "",
                                        "The deposit taken can be specified for this registration. Any `ParaId`",
                                        "can be registered, including sub-1000 IDs which are System Parachains."
                                    ]
                                },
                                {
                                    "name": "deregister",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Deregister a Para Id, freeing all data and returning any deposit.",
                                        "",
                                        "The caller must be Root, the `para` owner, or the `para` itself. The para must be a parathread."
                                    ]
                                },
                                {
                                    "name": "swap",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "other",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Swap a parachain with another parachain or parathread.",
                                        "",
                                        "The origin must be Root, the `para` owner, or the `para` itself.",
                                        "",
                                        "The swap will happen only if there is already an opposite swap pending. If there is not,",
                                        "the swap will be stored in the pending swaps map, ready for a later confirmatory swap.",
                                        "",
                                        "The `ParaId`s remain mapped to the same head data and code so external code can rely on",
                                        "`ParaId` to be a long-term identifier of a notional \"parachain\". However, their",
                                        "scheduling info (i.e. whether they're a parathread or parachain), auction information",
                                        "and the auction deposit are switched."
                                    ]
                                },
                                {
                                    "name": "remove_lock",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Remove a manager lock from a para. This will allow the manager of a",
                                        "previously locked para to deregister or swap a para without using governance.",
                                        "",
                                        "Can only be called by the Root origin or the parachain."
                                    ]
                                },
                                {
                                    "name": "reserve",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Reserve a Para Id on the relay chain.",
                                        "",
                                        "This function will reserve a new Para Id to be owned/managed by the origin account.",
                                        "The origin account is able to register head data and validation code using `register` to create",
                                        "a parathread. Using the Slots pallet, a parathread can then be upgraded to get a parachain slot.",
                                        "",
                                        "## Arguments",
                                        "- `origin`: Must be called by a `Signed` origin. Becomes the manager/owner of the new para ID.",
                                        "",
                                        "## Deposits/Fees",
                                        "The origin must reserve a deposit of `ParaDeposit` for the registration.",
                                        "",
                                        "## Events",
                                        "The `Reserved` event is emitted in case of success, which provides the ID reserved for use."
                                    ]
                                },
                                {
                                    "name": "add_lock",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Add a manager lock from a para. This will prevent the manager of a",
                                        "para to deregister or swap a para.",
                                        "",
                                        "Can be called by Root, the parachain, or the parachain manager if the parachain is unlocked."
                                    ]
                                },
                                {
                                    "name": "schedule_code_upgrade",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_code",
                                            "type": 394,
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Schedule a parachain upgrade.",
                                        "",
                                        "Can be called by Root, the parachain, or the parachain manager if the parachain is unlocked."
                                    ]
                                },
                                {
                                    "name": "set_current_head",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_head",
                                            "type": 104,
                                            "typeName": "HeadData",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Set the parachain's current head.",
                                        "",
                                        "Can be called by Root, the parachain, or the parachain manager if the parachain is unlocked."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 412,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_lease",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "leaser",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 6,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_begin",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_count",
                                            "type": 4,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Just a connect into the `lease_out` call, in case Root wants to force some lease to happen",
                                        "independently of any other on-chain mechanism to use it.",
                                        "",
                                        "The dispatch origin for this call must match `T::ForceOrigin`."
                                    ]
                                },
                                {
                                    "name": "clear_all_leases",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Clear all leases for a Para Id, refunding any deposits back to the original owners.",
                                        "",
                                        "The dispatch origin for this call must match `T::ForceOrigin`."
                                    ]
                                },
                                {
                                    "name": "trigger_onboard",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Try to onboard a parachain that has a lease for the current lease period.",
                                        "",
                                        "This function can be useful if there was some state issue with a para that should",
                                        "have onboarded, but was unable to. As long as they have a lease period, we can",
                                        "let them onboard from here.",
                                        "",
                                        "Origin must be signed, but can be called by anyone."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 413,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "new_auction",
                                    "fields": [
                                        {
                                            "name": "duration",
                                            "type": 125,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "lease_period_index",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new auction.",
                                        "",
                                        "This can only happen when there isn't already an auction in progress and may only be",
                                        "called by the root origin. Accepts the `duration` of this auction and the",
                                        "`lease_period_index` of the initial lease period of the four that are to be auctioned."
                                    ]
                                },
                                {
                                    "name": "bid",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "auction_index",
                                            "type": 125,
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_slot",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_slot",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Make a new bid from an account (including a parachain account) for deploying a new",
                                        "parachain.",
                                        "",
                                        "Multiple simultaneous bids from the same bidder are allowed only as long as all active",
                                        "bids overlap each other (i.e. are mutually exclusive). Bids cannot be redacted.",
                                        "",
                                        "- `sub` is the sub-bidder ID, allowing for multiple competing bids to be made by (and",
                                        "funded by) the same account.",
                                        "- `auction_index` is the index of the auction to bid on. Should just be the present",
                                        "value of `AuctionCounter`.",
                                        "- `first_slot` is the first lease period index of the range to bid on. This is the",
                                        "absolute lease period index value, not an auction-specific offset.",
                                        "- `last_slot` is the last lease period index of the range to bid on. This is the",
                                        "absolute lease period index value, not an auction-specific offset.",
                                        "- `amount` is the amount to bid to be held as deposit for the parachain should the",
                                        "bid win. This amount is held throughout the range."
                                    ]
                                },
                                {
                                    "name": "cancel_auction",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Cancel an in-progress auction.",
                                        "",
                                        "Can only be called by Root origin."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 414,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": 98
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 415,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "create",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "cap",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_period",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_period",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "end",
                                            "type": 125,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "verifier",
                                            "type": 416,
                                            "typeName": "Option<MultiSigner>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new crowdloaning campaign for a parachain slot with the given lease period range.",
                                        "",
                                        "This applies a lock to your parachain configuration, ensuring that it cannot be changed",
                                        "by the parachain manager."
                                    ]
                                },
                                {
                                    "name": "contribute",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": 420,
                                            "typeName": "Option<MultiSignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Contribute to a crowd sale. This will transfer some balance over to fund a parachain",
                                        "slot. It will be withdrawable when the crowdloan has ended and the funds are unused."
                                    ]
                                },
                                {
                                    "name": "withdraw",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 0,
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Withdraw full balance of a specific contributor.",
                                        "",
                                        "Origin must be signed, but can come from anyone.",
                                        "",
                                        "The fund must be either in, or ready for, retirement. For a fund to be *in* retirement, then the retirement",
                                        "flag must be set. For a fund to be ready for retirement, then:",
                                        "- it must not already be in retirement;",
                                        "- the amount of raised funds must be bigger than the _free_ balance of the account;",
                                        "- and either:",
                                        "  - the block number must be at least `end`; or",
                                        "  - the current lease period must be greater than the fund's `last_period`.",
                                        "",
                                        "In this case, the fund's retirement flag is set and its `end` is reset to the current block",
                                        "number.",
                                        "",
                                        "- `who`: The account whose contribution should be withdrawn.",
                                        "- `index`: The parachain to whose crowdloan the contribution was made."
                                    ]
                                },
                                {
                                    "name": "refund",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Automatically refund contributors of an ended crowdloan.",
                                        "Due to weight restrictions, this function may need to be called multiple",
                                        "times to fully refund all users. We will refund `RemoveKeysLimit` users at a time.",
                                        "",
                                        "Origin must be signed, but can come from anyone."
                                    ]
                                },
                                {
                                    "name": "dissolve",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Remove a fund after the retirement period has ended and all funds have been returned."
                                    ]
                                },
                                {
                                    "name": "edit",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "cap",
                                            "type": 58,
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_period",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_period",
                                            "type": 125,
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "end",
                                            "type": 125,
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "verifier",
                                            "type": 416,
                                            "typeName": "Option<MultiSigner>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Edit the configuration for an in-progress crowdloan.",
                                        "",
                                        "Can only be called by Root origin."
                                    ]
                                },
                                {
                                    "name": "add_memo",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "memo",
                                            "type": 12,
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Add an optional memo to an existing crowdloan contribution.",
                                        "",
                                        "Origin must be Signed, and the user must have contributed to the crowdloan."
                                    ]
                                },
                                {
                                    "name": "poke",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Poke the fund into `NewRaise`",
                                        "",
                                        "Origin must be Signed, and the fund has non-zero raise."
                                    ]
                                },
                                {
                                    "name": "contribute_all",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": 414,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": 420,
                                            "typeName": "Option<MultiSignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Contribute your entire balance to a crowd sale. This will transfer the entire balance of a user over to fund a parachain",
                                        "slot. It will be withdrawable when the crowdloan has ended and the funds are unused."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 416,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 417
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 417,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 417,
                "type": {
                    "path": [
                        "sp_runtime",
                        "MultiSigner"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ed25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 51,
                                            "typeName": "ed25519::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Sr25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 54,
                                            "typeName": "sr25519::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ecdsa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 418,
                                            "typeName": "ecdsa::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 418,
                "type": {
                    "path": [
                        "sp_core",
                        "ecdsa",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 419,
                                    "typeName": "[u8; 33]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 419,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 33,
                            "type": 2
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 420,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 421
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 421,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 421,
                "type": {
                    "path": [
                        "sp_runtime",
                        "MultiSignature"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ed25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 222,
                                            "typeName": "ed25519::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Sr25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 101,
                                            "typeName": "sr25519::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ecdsa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 422,
                                            "typeName": "ecdsa::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 422,
                "type": {
                    "path": [
                        "sp_core",
                        "ecdsa",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 247,
                                    "typeName": "[u8; 65]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 423,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "send",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": 424,
                                            "typeName": "Box<VersionedXcm<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "teleport_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 150,
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Teleport some assets from the local chain to some destination chain.",
                                        "",
                                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                                        "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                                        "with all fees taken as needed from the asset.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                                        "  `dest` side. May not be empty.",
                                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                                        "  fees."
                                    ]
                                },
                                {
                                    "name": "reserve_transfer_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 150,
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Transfer some assets from the local chain to the sovereign account of a destination",
                                        "chain and forward a notification XCM.",
                                        "",
                                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                                        "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                                        "with all fees taken as needed from the asset.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                                        "  `dest` side.",
                                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                                        "  fees."
                                    ]
                                },
                                {
                                    "name": "execute",
                                    "fields": [
                                        {
                                            "name": "message",
                                            "type": 435,
                                            "typeName": "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": 10,
                                            "typeName": "XcmWeight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Execute an XCM message from a local, signed, origin.",
                                        "",
                                        "An event is deposited indicating whether `msg` could be executed completely or only",
                                        "partially.",
                                        "",
                                        "No more than `max_weight` will be used in its attempted execution. If this is less than the",
                                        "maximum amount of weight that the message could take to be executed, then no execution",
                                        "attempt will be made.",
                                        "",
                                        "NOTE: A successful return to this does *not* imply that the `msg` was executed successfully",
                                        "to completion; only that *some* of it was executed."
                                    ]
                                },
                                {
                                    "name": "force_xcm_version",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": 122,
                                            "typeName": "Box<MultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm_version",
                                            "type": 4,
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Extoll that a particular destination can be communicated with through a particular",
                                        "version of XCM.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The destination that is being described.",
                                        "- `xcm_version`: The latest version of XCM that `location` supports."
                                    ]
                                },
                                {
                                    "name": "force_default_xcm_version",
                                    "fields": [
                                        {
                                            "name": "maybe_xcm_version",
                                            "type": 236,
                                            "typeName": "Option<XcmVersion>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set a safe XCM version (the version that XCM should be encoded with if the most recent",
                                        "version a destination can accept is unknown).",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `maybe_xcm_version`: The default XCM encoding version, or `None` to disable."
                                    ]
                                },
                                {
                                    "name": "force_subscribe_version_notify",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Ask a location to notify us regarding their XCM version and any changes to it.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The location to which we should subscribe for XCM version notifications."
                                    ]
                                },
                                {
                                    "name": "force_unsubscribe_version_notify",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Require that a particular destination should no longer notify us regarding any XCM",
                                        "version changes.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The location to which we are currently subscribed for XCM version",
                                        "  notifications which we no longer desire."
                                    ]
                                },
                                {
                                    "name": "limited_reserve_transfer_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 150,
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": 148,
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Transfer some assets from the local chain to the sovereign account of a destination",
                                        "chain and forward a notification XCM.",
                                        "",
                                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                                        "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                                        "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                                        "at risk.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                                        "  `dest` side.",
                                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                                        "  fees.",
                                        "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                                    ]
                                },
                                {
                                    "name": "limited_teleport_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 155,
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 150,
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": 148,
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Teleport some assets from the local chain to some destination chain.",
                                        "",
                                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                                        "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                                        "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                                        "at risk.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                                        "  `dest` side. May not be empty.",
                                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                                        "  fees.",
                                        "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": 424,
                "type": {
                    "path": [
                        "xcm",
                        "VersionedXcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 425,
                                            "typeName": "v0::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 430,
                                            "typeName": "v1::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 130,
                                            "typeName": "v2::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 425,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposit",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "TeleportAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 429,
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 144,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": 425,
                                            "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 426,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 427
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 427,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 152,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 428,
                                            "typeName": "Vec<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 428,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 425
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 429,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 430,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 434,
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 144,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 123,
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": 430,
                                            "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 431,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 432
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 432,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 135,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "instructions",
                                            "type": 433,
                                            "typeName": "Vec<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 433,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 430
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 434,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Version",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "super::Version",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 435,
                "type": {
                    "path": [
                        "xcm",
                        "VersionedXcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 436,
                                            "typeName": "v0::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 441,
                                            "typeName": "v1::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 445,
                                            "typeName": "v2::Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 436,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 437,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposit",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 437,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "TeleportAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 437,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 429,
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 440,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": 436,
                                            "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 437,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 438
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 438,
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 426,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 153,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 151,
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 152,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 439,
                                            "typeName": "Vec<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 439,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 436
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 440,
                "type": {
                    "path": [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "encoded",
                                    "type": 12,
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 441,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 442,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 442,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 442,
                                            "typeName": "Vec<Order<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 434,
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 440,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": 123,
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": 441,
                                            "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 442,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 443
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 443,
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": 431,
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 135,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": 10,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "instructions",
                                            "type": 444,
                                            "typeName": "Vec<Xcm<RuntimeCall>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 444,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 441
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 445,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 446,
                                    "typeName": "Vec<Instruction<RuntimeCall>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 446,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 447
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 447,
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Instruction"
                    ],
                    "params": [
                        {
                            "name": "RuntimeCall",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": 140,
                                            "typeName": "Response",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": 143,
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": 440,
                                            "typeName": "DoubleEncoded<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ClearOrigin",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "DescendOrigin",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 123,
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ReportError",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": 125,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": 130,
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": 145,
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": 135,
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": 148,
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "RefundSurplus",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "SetErrorHandler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 445,
                                            "typeName": "Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "SetAppendix",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 445,
                                            "typeName": "Xcm<RuntimeCall>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "ClearError",
                                    "fields": [],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "ClaimAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": 133,
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "ticket",
                                            "type": 122,
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": 9,
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": 9,
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 27,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 448,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 449,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 178
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 450,
                "type": {
                    "path": [
                        "pallet_scheduler",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "FailedToSchedule",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Failed to schedule a call"
                                    ]
                                },
                                {
                                    "name": "NotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Cannot find the scheduled call."
                                    ]
                                },
                                {
                                    "name": "TargetBlockNumberInPast",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Given target block number is in the past."
                                    ]
                                },
                                {
                                    "name": "RescheduleNoChange",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Reschedule failed because it does not change scheduled time."
                                    ]
                                },
                                {
                                    "name": "Named",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Attempt to use a non-named function on a named task."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 451,
                "type": {
                    "path": [
                        "pallet_preimage",
                        "RequestStatus"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unrequested",
                                    "fields": [
                                        {
                                            "name": "deposit",
                                            "type": 69,
                                            "typeName": "(AccountId, Balance)",
                                            "docs": []
                                        },
                                        {
                                            "name": "len",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Requested",
                                    "fields": [
                                        {
                                            "name": "deposit",
                                            "type": 452,
                                            "typeName": "Option<(AccountId, Balance)>",
                                            "docs": []
                                        },
                                        {
                                            "name": "count",
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "len",
                                            "type": 236,
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 452,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 69
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 69,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 453,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            11,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 454,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 455,
                "type": {
                    "path": [
                        "pallet_preimage",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooBig",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Preimage is too large to store on-chain."
                                    ]
                                },
                                {
                                    "name": "AlreadyNoted",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Preimage has already been noted on-chain."
                                    ]
                                },
                                {
                                    "name": "NotAuthorized",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The user is not authorized to perform this action."
                                    ]
                                },
                                {
                                    "name": "NotNoted",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The preimage cannot be removed since it has not yet been noted."
                                    ]
                                },
                                {
                                    "name": "Requested",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "A preimage may not be removed when there are outstanding requests."
                                    ]
                                },
                                {
                                    "name": "NotRequested",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The preimage request cannot be removed since no outstanding requests exist."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 456,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 457
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 458,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 457,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            189,
                            10
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 458,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 457
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 459,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 1
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 460,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 460,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 1
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 461,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 462
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 462,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 462,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "PreDigest"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Primary",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 463,
                                            "typeName": "PrimaryPreDigest",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "SecondaryPlain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 464,
                                            "typeName": "SecondaryPlainPreDigest",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "SecondaryVRF",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 465,
                                            "typeName": "SecondaryVRFPreDigest",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 463,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "PrimaryPreDigest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "authority_index",
                                    "type": 4,
                                    "typeName": "super::AuthorityIndex",
                                    "docs": []
                                },
                                {
                                    "name": "slot",
                                    "type": 190,
                                    "typeName": "Slot",
                                    "docs": []
                                },
                                {
                                    "name": "vrf_output",
                                    "type": 1,
                                    "typeName": "VRFOutput",
                                    "docs": []
                                },
                                {
                                    "name": "vrf_proof",
                                    "type": 102,
                                    "typeName": "VRFProof",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 464,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "SecondaryPlainPreDigest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "authority_index",
                                    "type": 4,
                                    "typeName": "super::AuthorityIndex",
                                    "docs": []
                                },
                                {
                                    "name": "slot",
                                    "type": 190,
                                    "typeName": "Slot",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 465,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "SecondaryVRFPreDigest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "authority_index",
                                    "type": 4,
                                    "typeName": "super::AuthorityIndex",
                                    "docs": []
                                },
                                {
                                    "name": "slot",
                                    "type": 190,
                                    "typeName": "Slot",
                                    "docs": []
                                },
                                {
                                    "name": "vrf_output",
                                    "type": 1,
                                    "typeName": "VRFOutput",
                                    "docs": []
                                },
                                {
                                    "name": "vrf_proof",
                                    "type": 102,
                                    "typeName": "VRFProof",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 466,
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "BabeEpochConfiguration"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "c",
                                    "type": 193,
                                    "typeName": "(u64, u64)",
                                    "docs": []
                                },
                                {
                                    "name": "allowed_slots",
                                    "type": 194,
                                    "typeName": "AllowedSlots",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 467,
                "type": {
                    "path": [
                        "pallet_babe",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidEquivocationProof",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "An equivocation proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "InvalidKeyOwnershipProof",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "A key ownership proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "DuplicateOffenceReport",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A given equivocation report is valid but already previously reported."
                                    ]
                                },
                                {
                                    "name": "InvalidConfiguration",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Submitted configuration is invalid."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 468,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            6,
                            43
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 469,
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotAssigned",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The index was not already assigned."
                                    ]
                                },
                                {
                                    "name": "NotOwner",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The index is assigned to another account."
                                    ]
                                },
                                {
                                    "name": "InUse",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The index was not available."
                                    ]
                                },
                                {
                                    "name": "NotTransfer",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The source and destination accounts are identical."
                                    ]
                                },
                                {
                                    "name": "Permanent",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The index is permanent and may not be freed/changed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 470,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 471
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 473,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 471,
                "type": {
                    "path": [
                        "pallet_balances",
                        "BalanceLock"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": 139,
                                    "typeName": "LockIdentifier",
                                    "docs": []
                                },
                                {
                                    "name": "amount",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "reasons",
                                    "type": 472,
                                    "typeName": "Reasons",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 472,
                "type": {
                    "path": [
                        "pallet_balances",
                        "Reasons"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fee",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Misc",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 473,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 471
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 474,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 475
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 476,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 475,
                "type": {
                    "path": [
                        "pallet_balances",
                        "ReserveData"
                    ],
                    "params": [
                        {
                            "name": "ReserveIdentifier",
                            "type": 139
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": 139,
                                    "typeName": "ReserveIdentifier",
                                    "docs": []
                                },
                                {
                                    "name": "amount",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 476,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 475
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 477,
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "VestingBalance",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Vesting balance too high to send value"
                                    ]
                                },
                                {
                                    "name": "LiquidityRestrictions",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Account liquidity restrictions prevent withdrawal"
                                    ]
                                },
                                {
                                    "name": "InsufficientBalance",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Balance too low to send value."
                                    ]
                                },
                                {
                                    "name": "ExistentialDeposit",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Value too low to create account due to existential deposit"
                                    ]
                                },
                                {
                                    "name": "KeepAlive",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Transfer/payment would kill account"
                                    ]
                                },
                                {
                                    "name": "ExistingVestingSchedule",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "A vesting schedule already exists for this account"
                                    ]
                                },
                                {
                                    "name": "DeadAccount",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Beneficiary account must pre-exist"
                                    ]
                                },
                                {
                                    "name": "TooManyReserves",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Number of named reserves exceed MaxReserves"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 478,
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "fixed_point",
                        "FixedU128"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 6,
                                    "typeName": "u128",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 479,
                "type": {
                    "path": [
                        "pallet_transaction_payment",
                        "Releases"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1Ancient",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 480,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 481
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 482,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 481,
                "type": {
                    "path": [
                        "pallet_authorship",
                        "UncleEntryItem"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Hash",
                            "type": 11
                        },
                        {
                            "name": "Author",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InclusionHeight",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Uncle",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": "Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 92,
                                            "typeName": "Option<Author>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 482,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 481
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 483,
                "type": {
                    "path": [
                        "pallet_authorship",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidUncleParent",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The uncle parent not in the chain."
                                    ]
                                },
                                {
                                    "name": "UnclesAlreadySet",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Uncles already set in the block."
                                    ]
                                },
                                {
                                    "name": "TooManyUncles",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Too many uncles."
                                    ]
                                },
                                {
                                    "name": "GenesisUncle",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The uncle is genesis."
                                    ]
                                },
                                {
                                    "name": "TooHighUncle",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The uncle is too high in chain."
                                    ]
                                },
                                {
                                    "name": "UncleAlreadyIncluded",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The uncle is already included."
                                    ]
                                },
                                {
                                    "name": "OldUncle",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The uncle isn't recent enough to be included."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 484,
                "type": {
                    "path": [
                        "pallet_staking",
                        "StakingLedger"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "stash",
                                    "type": 0,
                                    "typeName": "T::AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "total",
                                    "type": 58,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "active",
                                    "type": 58,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "unlocking",
                                    "type": 485,
                                    "typeName": "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
                                    "docs": []
                                },
                                {
                                    "name": "claimed_rewards",
                                    "type": 488,
                                    "typeName": "BoundedVec<EraIndex, T::HistoryDepth>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 485,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 486
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 487,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 486,
                "type": {
                    "path": [
                        "pallet_staking",
                        "UnlockChunk"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "value",
                                    "type": 58,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "era",
                                    "type": 125,
                                    "typeName": "EraIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 487,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 486
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 488,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 94,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 489,
                "type": {
                    "path": [
                        "pallet_staking",
                        "Nominations"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "targets",
                                    "type": 490,
                                    "typeName": "BoundedVec<T::AccountId, T::MaxNominations>",
                                    "docs": []
                                },
                                {
                                    "name": "submitted_in",
                                    "type": 4,
                                    "typeName": "EraIndex",
                                    "docs": []
                                },
                                {
                                    "name": "suppressed",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 490,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 206,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 491,
                "type": {
                    "path": [
                        "pallet_staking",
                        "ActiveEraInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "index",
                                    "type": 4,
                                    "typeName": "EraIndex",
                                    "docs": []
                                },
                                {
                                    "name": "start",
                                    "type": 492,
                                    "typeName": "Option<u64>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 492,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 10
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 10,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 493,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            0
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 494,
                "type": {
                    "path": [
                        "pallet_staking",
                        "EraRewardPoints"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "total",
                                    "type": 4,
                                    "typeName": "RewardPoint",
                                    "docs": []
                                },
                                {
                                    "name": "individual",
                                    "type": 495,
                                    "typeName": "BTreeMap<AccountId, RewardPoint>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 495,
                "type": {
                    "path": [
                        "BTreeMap"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 0
                        },
                        {
                            "name": "V",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 496,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 496,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 497
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 497,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 498,
                "type": {
                    "path": [
                        "pallet_staking",
                        "Forcing"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotForcing",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ForceNew",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ForceNone",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ForceAlways",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 499,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 500
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 500,
                "type": {
                    "path": [
                        "pallet_staking",
                        "UnappliedSlash"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validator",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "own",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "others",
                                    "type": 68,
                                    "typeName": "Vec<(AccountId, Balance)>",
                                    "docs": []
                                },
                                {
                                    "name": "reporters",
                                    "type": 206,
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "payout",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 501,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            40,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 502,
                "type": {
                    "path": [
                        "pallet_staking",
                        "slashing",
                        "SlashingSpans"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "span_index",
                                    "type": 4,
                                    "typeName": "SpanIndex",
                                    "docs": []
                                },
                                {
                                    "name": "last_start",
                                    "type": 4,
                                    "typeName": "EraIndex",
                                    "docs": []
                                },
                                {
                                    "name": "last_nonzero_slash",
                                    "type": 4,
                                    "typeName": "EraIndex",
                                    "docs": []
                                },
                                {
                                    "name": "prior",
                                    "type": 94,
                                    "typeName": "Vec<EraIndex>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 503,
                "type": {
                    "path": [
                        "pallet_staking",
                        "slashing",
                        "SpanRecord"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "slashed",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "paid_out",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 504,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 505
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 505,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            43
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 506,
                "type": {
                    "path": [
                        "pallet_staking",
                        "Releases"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1_0_0Ancient",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V2_0_0",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V3_0_0",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "V4_0_0",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "V5_0_0",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "V6_0_0",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "V7_0_0",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "V8_0_0",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "V9_0_0",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "V10_0_0",
                                    "fields": [],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "V11_0_0",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "V12_0_0",
                                    "fields": [],
                                    "index": 11,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 507,
                "type": {
                    "path": [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotController",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Not a controller account."
                                    ]
                                },
                                {
                                    "name": "NotStash",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Not a stash account."
                                    ]
                                },
                                {
                                    "name": "AlreadyBonded",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Stash is already bonded."
                                    ]
                                },
                                {
                                    "name": "AlreadyPaired",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Controller is already paired."
                                    ]
                                },
                                {
                                    "name": "EmptyTargets",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Targets cannot be empty."
                                    ]
                                },
                                {
                                    "name": "DuplicateIndex",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Duplicate index."
                                    ]
                                },
                                {
                                    "name": "InvalidSlashIndex",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Slash record index out of bounds."
                                    ]
                                },
                                {
                                    "name": "InsufficientBond",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot have a validator or nominator role, with value less than the minimum defined by",
                                        "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                                        "intention, `chill` first to remove one's role as validator/nominator."
                                    ]
                                },
                                {
                                    "name": "NoMoreChunks",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Can not schedule more unlock chunks."
                                    ]
                                },
                                {
                                    "name": "NoUnlockChunk",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Can not rebond without unlocking chunks."
                                    ]
                                },
                                {
                                    "name": "FundedTarget",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Attempting to target a stash that still has funds."
                                    ]
                                },
                                {
                                    "name": "InvalidEraToReward",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Invalid era to reward."
                                    ]
                                },
                                {
                                    "name": "InvalidNumberOfNominations",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Invalid number of nominations."
                                    ]
                                },
                                {
                                    "name": "NotSortedAndUnique",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Items are not sorted and unique."
                                    ]
                                },
                                {
                                    "name": "AlreadyClaimed",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Rewards for this era have already been claimed for this validator."
                                    ]
                                },
                                {
                                    "name": "IncorrectHistoryDepth",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Incorrect previous history depth input provided."
                                    ]
                                },
                                {
                                    "name": "IncorrectSlashingSpans",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "Incorrect number of slashing spans provided."
                                    ]
                                },
                                {
                                    "name": "BadState",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "Internal state has become somehow corrupted and the operation cannot continue."
                                    ]
                                },
                                {
                                    "name": "TooManyTargets",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Too many nomination targets supplied."
                                    ]
                                },
                                {
                                    "name": "BadTarget",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "A nomination target was supplied that was blocked or otherwise not a validator."
                                    ]
                                },
                                {
                                    "name": "CannotChillOther",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "The user has enough bond and thus cannot be chilled forcefully by an external person."
                                    ]
                                },
                                {
                                    "name": "TooManyNominators",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "There are too many nominators in the system. Governance needs to adjust the staking",
                                        "settings to keep things safe for the runtime."
                                    ]
                                },
                                {
                                    "name": "TooManyValidators",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "There are too many validator candidates in the system. Governance needs to adjust the",
                                        "staking settings to keep things safe for the runtime."
                                    ]
                                },
                                {
                                    "name": "CommissionTooLow",
                                    "fields": [],
                                    "index": 23,
                                    "docs": [
                                        "Commission is too low. Must be at least `MinCommission`."
                                    ]
                                },
                                {
                                    "name": "BoundNotMet",
                                    "fields": [],
                                    "index": 24,
                                    "docs": [
                                        "Some bound is not met."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 508,
                "type": {
                    "path": [
                        "sp_staking",
                        "offence",
                        "OffenceDetails"
                    ],
                    "params": [
                        {
                            "name": "Reporter",
                            "type": 0
                        },
                        {
                            "name": "Offender",
                            "type": 56
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "offender",
                                    "type": 56,
                                    "typeName": "Offender",
                                    "docs": []
                                },
                                {
                                    "name": "reporters",
                                    "type": 206,
                                    "typeName": "Vec<Reporter>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 509,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            45,
                            12
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 510,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 511
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 511,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            212
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 512,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            513,
                            12
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 513,
                "type": {
                    "path": [
                        "sp_core",
                        "crypto",
                        "KeyTypeId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 16,
                                    "typeName": "[u8; 4]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 514,
                "type": {
                    "path": [
                        "pallet_session",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidProof",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Invalid ownership proof."
                                    ]
                                },
                                {
                                    "name": "NoAssociatedValidatorId",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "No associated validator ID for account."
                                    ]
                                },
                                {
                                    "name": "DuplicatedKey",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Registered duplicate key."
                                    ]
                                },
                                {
                                    "name": "NoKeys",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "No keys are associated with this account."
                                    ]
                                },
                                {
                                    "name": "NoAccount",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Key setting account is not live, so it's impossible to associate keys."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the session pallet."
                    ]
                }
            },
            {
                "id": 515,
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "StoredState"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Live",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PendingPause",
                                    "fields": [
                                        {
                                            "name": "scheduled_at",
                                            "type": 4,
                                            "typeName": "N",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "N",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Paused",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "PendingResume",
                                    "fields": [
                                        {
                                            "name": "scheduled_at",
                                            "type": 4,
                                            "typeName": "N",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": 4,
                                            "typeName": "N",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 516,
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "StoredPendingChange"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        },
                        {
                            "name": "Limit",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "scheduled_at",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "delay",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "next_authorities",
                                    "type": 517,
                                    "typeName": "BoundedAuthorityList<Limit>",
                                    "docs": []
                                },
                                {
                                    "name": "forced",
                                    "type": 236,
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 517,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 49
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 48,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 518,
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PauseFailed",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                                        "(either paused or already pending pause)."
                                    ]
                                },
                                {
                                    "name": "ResumeFailed",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                                        "(either live or already pending resume)."
                                    ]
                                },
                                {
                                    "name": "ChangePending",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Attempt to signal GRANDPA change with one already pending."
                                    ]
                                },
                                {
                                    "name": "TooSoon",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Cannot signal forced change so soon after last."
                                    ]
                                },
                                {
                                    "name": "InvalidKeyOwnershipProof",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "A key ownership proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "InvalidEquivocationProof",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "An equivocation proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "DuplicateOffenceReport",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "A given equivocation report is valid but already previously reported."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 519,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 53
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 520,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 520,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 53
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 521,
                "type": {
                    "path": [
                        "frame_support",
                        "traits",
                        "misc",
                        "WrapperOpaque"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 522
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 125,
                                    "typeName": null,
                                    "docs": []
                                },
                                {
                                    "name": null,
                                    "type": 522,
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 522,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "BoundedOpaqueNetworkState"
                    ],
                    "params": [
                        {
                            "name": "PeerIdEncodingLimit",
                            "type": null
                        },
                        {
                            "name": "MultiAddrEncodingLimit",
                            "type": null
                        },
                        {
                            "name": "AddressesLimit",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "peer_id",
                                    "type": 523,
                                    "typeName": "WeakBoundedVec<u8, PeerIdEncodingLimit>",
                                    "docs": []
                                },
                                {
                                    "name": "external_addresses",
                                    "type": 524,
                                    "typeName": "WeakBoundedVec<WeakBoundedVec<u8, MultiAddrEncodingLimit>, AddressesLimit\n>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 523,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 524,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 523
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 525,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 525,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 523
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 526,
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidKey",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Non existent public key."
                                    ]
                                },
                                {
                                    "name": "DuplicatedHeartbeat",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Duplicated heartbeat."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 527,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 528
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 529,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 528,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            180,
                            0
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 529,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 528
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 530,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            531,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 531,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 206,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 532,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "types",
                        "ReferendumInfo"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Proposal",
                            "type": 180
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ongoing",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 533,
                                            "typeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Finished",
                                    "fields": [
                                        {
                                            "name": "approved",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "end",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 533,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "types",
                        "ReferendumStatus"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Proposal",
                            "type": 180
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "end",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "proposal",
                                    "type": 180,
                                    "typeName": "Proposal",
                                    "docs": []
                                },
                                {
                                    "name": "threshold",
                                    "type": 62,
                                    "typeName": "VoteThreshold",
                                    "docs": []
                                },
                                {
                                    "name": "delay",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "tally",
                                    "type": 534,
                                    "typeName": "Tally<Balance>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 534,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "types",
                        "Tally"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "ayes",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "nays",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "turnout",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 535,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "vote",
                        "Voting"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "MaxVotes",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Direct",
                                    "fields": [
                                        {
                                            "name": "votes",
                                            "type": 536,
                                            "typeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                                            "docs": []
                                        },
                                        {
                                            "name": "delegations",
                                            "type": 539,
                                            "typeName": "Delegations<Balance>",
                                            "docs": []
                                        },
                                        {
                                            "name": "prior",
                                            "type": 540,
                                            "typeName": "PriorLock<BlockNumber, Balance>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Delegating",
                                    "fields": [
                                        {
                                            "name": "balance",
                                            "type": 6,
                                            "typeName": "Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "target",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "conviction",
                                            "type": 235,
                                            "typeName": "Conviction",
                                            "docs": []
                                        },
                                        {
                                            "name": "delegations",
                                            "type": 539,
                                            "typeName": "Delegations<Balance>",
                                            "docs": []
                                        },
                                        {
                                            "name": "prior",
                                            "type": 540,
                                            "typeName": "PriorLock<BlockNumber, Balance>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 536,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 537
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 538,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 537,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            63
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 538,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 537
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 539,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "types",
                        "Delegations"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "votes",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "capital",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 540,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "vote",
                        "PriorLock"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": null,
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 541,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            180,
                            62
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 542,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            531
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 543,
                "type": {
                    "path": [
                        "pallet_democracy",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ValueLow",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Value too low"
                                    ]
                                },
                                {
                                    "name": "ProposalMissing",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Proposal does not exist"
                                    ]
                                },
                                {
                                    "name": "AlreadyCanceled",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Cannot cancel the same proposal twice"
                                    ]
                                },
                                {
                                    "name": "DuplicateProposal",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Proposal already made"
                                    ]
                                },
                                {
                                    "name": "ProposalBlacklisted",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Proposal still blacklisted"
                                    ]
                                },
                                {
                                    "name": "NotSimpleMajority",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Next external proposal not simple majority"
                                    ]
                                },
                                {
                                    "name": "InvalidHash",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Invalid hash"
                                    ]
                                },
                                {
                                    "name": "NoProposal",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "No external proposal"
                                    ]
                                },
                                {
                                    "name": "AlreadyVetoed",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Identity may not veto a proposal twice"
                                    ]
                                },
                                {
                                    "name": "ReferendumInvalid",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Vote given for invalid referendum"
                                    ]
                                },
                                {
                                    "name": "NoneWaiting",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "No proposals waiting"
                                    ]
                                },
                                {
                                    "name": "NotVoter",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The given account did not vote on the referendum."
                                    ]
                                },
                                {
                                    "name": "NoPermission",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The actor has no permission to conduct the action."
                                    ]
                                },
                                {
                                    "name": "AlreadyDelegating",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The account is already delegating."
                                    ]
                                },
                                {
                                    "name": "InsufficientFunds",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Too high a balance was provided that the account cannot afford."
                                    ]
                                },
                                {
                                    "name": "NotDelegating",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "The account is not currently delegating."
                                    ]
                                },
                                {
                                    "name": "VotesExist",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "The account currently has votes attached to it and the operation cannot succeed until",
                                        "these are removed, either through `unvote` or `reap_vote`."
                                    ]
                                },
                                {
                                    "name": "InstantNotAllowed",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "The instant referendum origin is currently disallowed."
                                    ]
                                },
                                {
                                    "name": "Nonsense",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Delegation to oneself makes no sense."
                                    ]
                                },
                                {
                                    "name": "WrongUpperBound",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "Invalid upper bound."
                                    ]
                                },
                                {
                                    "name": "MaxVotesReached",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "Maximum number of votes reached."
                                    ]
                                },
                                {
                                    "name": "TooMany",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "Maximum number of items reached."
                                    ]
                                },
                                {
                                    "name": "VotingPeriodLow",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "Voting period too low"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 544,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 11
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 157,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 545,
                "type": {
                    "path": [
                        "pallet_collective",
                        "Votes"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "index",
                                    "type": 4,
                                    "typeName": "ProposalIndex",
                                    "docs": []
                                },
                                {
                                    "name": "threshold",
                                    "type": 4,
                                    "typeName": "MemberCount",
                                    "docs": []
                                },
                                {
                                    "name": "ayes",
                                    "type": 206,
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "nays",
                                    "type": 206,
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "end",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 546,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Account is not a member"
                                    ]
                                },
                                {
                                    "name": "DuplicateProposal",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Duplicate proposals not allowed"
                                    ]
                                },
                                {
                                    "name": "ProposalMissing",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Proposal must exist"
                                    ]
                                },
                                {
                                    "name": "WrongIndex",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Mismatched index"
                                    ]
                                },
                                {
                                    "name": "DuplicateVote",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Duplicate vote ignored"
                                    ]
                                },
                                {
                                    "name": "AlreadyInitialized",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Members are already initialized!"
                                    ]
                                },
                                {
                                    "name": "TooEarly",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The close call was made too early, before the end of the voting."
                                    ]
                                },
                                {
                                    "name": "TooManyProposals",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "There can only be a maximum of `MaxProposals` active proposals."
                                    ]
                                },
                                {
                                    "name": "WrongProposalWeight",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The given weight bound for the proposal was too low."
                                    ]
                                },
                                {
                                    "name": "WrongProposalLength",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The given length bound for the proposal was too low."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 547,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 11
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 157,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 548,
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Account is not a member"
                                    ]
                                },
                                {
                                    "name": "DuplicateProposal",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Duplicate proposals not allowed"
                                    ]
                                },
                                {
                                    "name": "ProposalMissing",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Proposal must exist"
                                    ]
                                },
                                {
                                    "name": "WrongIndex",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Mismatched index"
                                    ]
                                },
                                {
                                    "name": "DuplicateVote",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Duplicate vote ignored"
                                    ]
                                },
                                {
                                    "name": "AlreadyInitialized",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Members are already initialized!"
                                    ]
                                },
                                {
                                    "name": "TooEarly",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The close call was made too early, before the end of the voting."
                                    ]
                                },
                                {
                                    "name": "TooManyProposals",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "There can only be a maximum of `MaxProposals` active proposals."
                                    ]
                                },
                                {
                                    "name": "WrongProposalWeight",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The given weight bound for the proposal was too low."
                                    ]
                                },
                                {
                                    "name": "WrongProposalLength",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The given length bound for the proposal was too low."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 549,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 550
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 550,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "SeatHolder"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "who",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "stake",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 551,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "Voter"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "votes",
                                    "type": 206,
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "stake",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 552,
                "type": {
                    "path": [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "UnableToVote",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Cannot vote when no candidates or members exist."
                                    ]
                                },
                                {
                                    "name": "NoVotes",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Must vote for at least one candidate."
                                    ]
                                },
                                {
                                    "name": "TooManyVotes",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Cannot vote more than candidates."
                                    ]
                                },
                                {
                                    "name": "MaximumVotesExceeded",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Cannot vote more than maximum allowed."
                                    ]
                                },
                                {
                                    "name": "LowBalance",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Cannot vote with stake less than minimum balance."
                                    ]
                                },
                                {
                                    "name": "UnableToPayBond",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Voter can not pay voting bond."
                                    ]
                                },
                                {
                                    "name": "MustBeVoter",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Must be a voter."
                                    ]
                                },
                                {
                                    "name": "DuplicatedCandidate",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Duplicated candidate submission."
                                    ]
                                },
                                {
                                    "name": "TooManyCandidates",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Too many candidates have been created."
                                    ]
                                },
                                {
                                    "name": "MemberSubmit",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Member cannot re-submit candidacy."
                                    ]
                                },
                                {
                                    "name": "RunnerUpSubmit",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Runner cannot re-submit candidacy."
                                    ]
                                },
                                {
                                    "name": "InsufficientCandidateFunds",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Candidate does not have enough funds."
                                    ]
                                },
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Not a member."
                                    ]
                                },
                                {
                                    "name": "InvalidWitnessData",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The provided count of number of candidates is incorrect."
                                    ]
                                },
                                {
                                    "name": "InvalidVoteCount",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "The provided count of number of votes is incorrect."
                                    ]
                                },
                                {
                                    "name": "InvalidRenouncing",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "The renouncing origin presented a wrong `Renouncing` parameter."
                                    ]
                                },
                                {
                                    "name": "InvalidReplacement",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "Prediction regarding replacement after member removal is wrong."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 553,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 206,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 554,
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AlreadyMember",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Already a member."
                                    ]
                                },
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Not a member."
                                    ]
                                },
                                {
                                    "name": "TooManyMembers",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Too many members."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 555,
                "type": {
                    "path": [
                        "pallet_treasury",
                        "Proposal"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "proposer",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "value",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "beneficiary",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "bond",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 556,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 94,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 557,
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "per_things",
                        "Permill"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 558,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 6,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 559,
                "type": {
                    "path": [
                        "frame_support",
                        "PalletId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 139,
                                    "typeName": "[u8; 8]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 560,
                "type": {
                    "path": [
                        "pallet_treasury",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InsufficientProposersBalance",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Proposer's balance is too low."
                                    ]
                                },
                                {
                                    "name": "InvalidIndex",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "No proposal or bounty at that index."
                                    ]
                                },
                                {
                                    "name": "TooManyApprovals",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Too many approvals in the queue."
                                    ]
                                },
                                {
                                    "name": "InsufficientPermission",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                                        "amount to be spent."
                                    ]
                                },
                                {
                                    "name": "ProposalNotApproved",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Proposal has not been approved."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the treasury pallet."
                    ]
                }
            },
            {
                "id": 561,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidEthereumSignature",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Invalid Ethereum signature."
                                    ]
                                },
                                {
                                    "name": "SignerHasNoClaim",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Ethereum address has no claim."
                                    ]
                                },
                                {
                                    "name": "SenderHasNoClaim",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Account ID sending transaction has no claim."
                                    ]
                                },
                                {
                                    "name": "PotUnderflow",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "There's not enough in the pot to pay out some unvested amount. Generally implies a logic",
                                        "error."
                                    ]
                                },
                                {
                                    "name": "InvalidStatement",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "A needed statement was not included."
                                    ]
                                },
                                {
                                    "name": "VestedBalanceExists",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The account already has a vested balance."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 562,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 253
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 563,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 563,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 253
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 564,
                "type": {
                    "path": [
                        "pallet_vesting",
                        "Releases"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 565,
                "type": {
                    "path": [
                        "pallet_vesting",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotVesting",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The account given is not vesting."
                                    ]
                                },
                                {
                                    "name": "AtMaxVestingSchedules",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                                        "cannot add another one. Consider merging existing schedules in order to add another."
                                    ]
                                },
                                {
                                    "name": "AmountLow",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Amount being transferred is too low to create a vesting schedule."
                                    ]
                                },
                                {
                                    "name": "ScheduleIndexOutOfBounds",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "An index was out of bounds of the vesting schedules."
                                    ]
                                },
                                {
                                    "name": "InvalidScheduleParams",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Failed to create a new schedule because some parameter was invalid."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the vesting pallet."
                    ]
                }
            },
            {
                "id": 566,
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooManyCalls",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Too many calls batched."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 567,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "Registration"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "MaxJudgements",
                            "type": null
                        },
                        {
                            "name": "MaxAdditionalFields",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "judgements",
                                    "type": 568,
                                    "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "info",
                                    "type": 264,
                                    "typeName": "IdentityInfo<MaxAdditionalFields>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 568,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 569
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 570,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 569,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            302
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 570,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 569
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 571,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            6,
                            572
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 572,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 206,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 573,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 574
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 576,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 574,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 575
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 575,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 575,
                "type": {
                    "path": [
                        "pallet_identity",
                        "types",
                        "RegistrarInfo"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "account",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "fee",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "fields",
                                    "type": 300,
                                    "typeName": "IdentityFields",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 576,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 574
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 577,
                "type": {
                    "path": [
                        "pallet_identity",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooManySubAccounts",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Too many subs-accounts."
                                    ]
                                },
                                {
                                    "name": "NotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Account isn't found."
                                    ]
                                },
                                {
                                    "name": "NotNamed",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Account isn't named."
                                    ]
                                },
                                {
                                    "name": "EmptyIndex",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Empty index."
                                    ]
                                },
                                {
                                    "name": "FeeChanged",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Fee is changed."
                                    ]
                                },
                                {
                                    "name": "NoIdentity",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "No identity found."
                                    ]
                                },
                                {
                                    "name": "StickyJudgement",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Sticky judgement."
                                    ]
                                },
                                {
                                    "name": "JudgementGiven",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Judgement given."
                                    ]
                                },
                                {
                                    "name": "InvalidJudgement",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Invalid judgement."
                                    ]
                                },
                                {
                                    "name": "InvalidIndex",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The index is invalid."
                                    ]
                                },
                                {
                                    "name": "InvalidTarget",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The target is invalid."
                                    ]
                                },
                                {
                                    "name": "TooManyFields",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Too many additional fields."
                                    ]
                                },
                                {
                                    "name": "TooManyRegistrars",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Maximum amount of registrars reached. Cannot add any more."
                                    ]
                                },
                                {
                                    "name": "AlreadyClaimed",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Account ID is already named."
                                    ]
                                },
                                {
                                    "name": "NotSub",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Sender is not a sub-account."
                                    ]
                                },
                                {
                                    "name": "NotOwned",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Sub-account isn't owned by sender."
                                    ]
                                },
                                {
                                    "name": "JudgementForDifferentIdentity",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "The provided judgement was for a different identity."
                                    ]
                                },
                                {
                                    "name": "JudgementPaymentFailed",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "Error that occurs when there is an issue paying for judgement."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 578,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            579,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 579,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 580
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 581,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 580,
                "type": {
                    "path": [
                        "pallet_proxy",
                        "ProxyDefinition"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "ProxyType",
                            "type": 79
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "delegate",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "proxy_type",
                                    "type": 79,
                                    "typeName": "ProxyType",
                                    "docs": []
                                },
                                {
                                    "name": "delay",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 581,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 580
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 582,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            583,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 583,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 584
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 585,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 584,
                "type": {
                    "path": [
                        "pallet_proxy",
                        "Announcement"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Hash",
                            "type": 11
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "real",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "call_hash",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "height",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 585,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 584
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 586,
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooMany",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "There are too many proxies registered or too many announcements pending."
                                    ]
                                },
                                {
                                    "name": "NotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Proxy registration not found."
                                    ]
                                },
                                {
                                    "name": "NotProxy",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Sender is not a proxy of the account to be proxied."
                                    ]
                                },
                                {
                                    "name": "Unproxyable",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "A call which is incompatible with the proxy type's filter was attempted."
                                    ]
                                },
                                {
                                    "name": "Duplicate",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Account is already a proxy."
                                    ]
                                },
                                {
                                    "name": "NoPermission",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Call may not be made by proxy because it may escalate its privileges."
                                    ]
                                },
                                {
                                    "name": "Unannounced",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Announcement, if made at all, was made too recently."
                                    ]
                                },
                                {
                                    "name": "NoSelfProxy",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot add self as proxy."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 587,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            1
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 588,
                "type": {
                    "path": [
                        "pallet_multisig",
                        "Multisig"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "MaxApprovals",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "when",
                                    "type": 82,
                                    "typeName": "Timepoint<BlockNumber>",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "depositor",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "approvals",
                                    "type": 589,
                                    "typeName": "BoundedVec<AccountId, MaxApprovals>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 589,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 0
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 206,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 590,
                "type": {
                    "path": [
                        "pallet_multisig",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "MinimumThreshold",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Threshold must be 2 or greater."
                                    ]
                                },
                                {
                                    "name": "AlreadyApproved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Call is already approved by this signatory."
                                    ]
                                },
                                {
                                    "name": "NoApprovalsNeeded",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Call doesn't need any (more) approvals."
                                    ]
                                },
                                {
                                    "name": "TooFewSignatories",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "There are too few signatories in the list."
                                    ]
                                },
                                {
                                    "name": "TooManySignatories",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "There are too many signatories in the list."
                                    ]
                                },
                                {
                                    "name": "SignatoriesOutOfOrder",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The signatories were provided out of order; they should be ordered."
                                    ]
                                },
                                {
                                    "name": "SenderInSignatories",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The sender was contained in the other signatories; it shouldn't be."
                                    ]
                                },
                                {
                                    "name": "NotFound",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Multisig operation not found when attempting to cancel."
                                    ]
                                },
                                {
                                    "name": "NotOwner",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Only the account that originally created the multisig is able to cancel it."
                                    ]
                                },
                                {
                                    "name": "NoTimepoint",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "No timepoint was given, yet the multisig operation is already underway."
                                    ]
                                },
                                {
                                    "name": "WrongTimepoint",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "A different timepoint was given to the multisig operation that is underway."
                                    ]
                                },
                                {
                                    "name": "UnexpectedTimepoint",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "A timepoint was given, yet no multisig operation is underway."
                                    ]
                                },
                                {
                                    "name": "MaxWeightTooLow",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The maximum weight information provided was too low."
                                    ]
                                },
                                {
                                    "name": "AlreadyStored",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The data to be stored is already stored."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 591,
                "type": {
                    "path": [
                        "pallet_bounties",
                        "Bounty"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "proposer",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "value",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "fee",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "curator_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "bond",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "status",
                                    "type": 592,
                                    "typeName": "BountyStatus<AccountId, BlockNumber>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 592,
                "type": {
                    "path": [
                        "pallet_bounties",
                        "BountyStatus"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Approved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Funded",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "CuratorProposed",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Active",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "update_due",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "PendingPayout",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "unlock_at",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 593,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 594,
                "type": {
                    "path": [
                        "pallet_bounties",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InsufficientProposersBalance",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Proposer's balance is too low."
                                    ]
                                },
                                {
                                    "name": "InvalidIndex",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "No proposal or bounty at that index."
                                    ]
                                },
                                {
                                    "name": "ReasonTooBig",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The reason given is just too big."
                                    ]
                                },
                                {
                                    "name": "UnexpectedStatus",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The bounty status is unexpected."
                                    ]
                                },
                                {
                                    "name": "RequireCurator",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Require bounty curator."
                                    ]
                                },
                                {
                                    "name": "InvalidValue",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Invalid bounty value."
                                    ]
                                },
                                {
                                    "name": "InvalidFee",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Invalid bounty fee."
                                    ]
                                },
                                {
                                    "name": "PendingPayout",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "A bounty payout is pending.",
                                        "To cancel the bounty, you must unassign and slash the curator."
                                    ]
                                },
                                {
                                    "name": "Premature",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The bounties cannot be claimed/closed because it's still in the countdown period."
                                    ]
                                },
                                {
                                    "name": "HasActiveChildBounty",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The bounty cannot be closed because it has active child bounties."
                                    ]
                                },
                                {
                                    "name": "TooManyQueued",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Too many approvals are already queued."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 595,
                "type": {
                    "path": [
                        "pallet_child_bounties",
                        "ChildBounty"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "parent_bounty",
                                    "type": 4,
                                    "typeName": "BountyIndex",
                                    "docs": []
                                },
                                {
                                    "name": "value",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "fee",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "curator_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "status",
                                    "type": 596,
                                    "typeName": "ChildBountyStatus<AccountId, BlockNumber>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 596,
                "type": {
                    "path": [
                        "pallet_child_bounties",
                        "ChildBountyStatus"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Added",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "CuratorProposed",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Active",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "PendingPayout",
                                    "fields": [
                                        {
                                            "name": "curator",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": 0,
                                            "typeName": "AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "unlock_at",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 597,
                "type": {
                    "path": [
                        "pallet_child_bounties",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ParentBountyNotActive",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The parent bounty is not in active state."
                                    ]
                                },
                                {
                                    "name": "InsufficientBountyBalance",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The bounty balance is not enough to add new child-bounty."
                                    ]
                                },
                                {
                                    "name": "TooManyChildBounties",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Number of child bounties exceeds limit `MaxActiveChildBountyCount`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 598,
                "type": {
                    "path": [
                        "pallet_tips",
                        "OpenTip"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "Hash",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "reason",
                                    "type": 11,
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "who",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "finder",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "closes",
                                    "type": 236,
                                    "typeName": "Option<BlockNumber>",
                                    "docs": []
                                },
                                {
                                    "name": "tips",
                                    "type": 68,
                                    "typeName": "Vec<(AccountId, Balance)>",
                                    "docs": []
                                },
                                {
                                    "name": "finders_fee",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 599,
                "type": {
                    "path": [
                        "pallet_tips",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ReasonTooBig",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The reason given is just too big."
                                    ]
                                },
                                {
                                    "name": "AlreadyKnown",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The tip was already found/started."
                                    ]
                                },
                                {
                                    "name": "UnknownTip",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The tip hash is unknown."
                                    ]
                                },
                                {
                                    "name": "NotFinder",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The account attempting to retract the tip is not the finder of the tip."
                                    ]
                                },
                                {
                                    "name": "StillOpen",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The tip cannot be claimed/closed because there are not enough tippers yet."
                                    ]
                                },
                                {
                                    "name": "Premature",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The tip cannot be claimed/closed because it's still in the countdown period."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 600,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "Phase"
                    ],
                    "params": [
                        {
                            "name": "Bn",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Off",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Signed",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Unsigned",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 601,
                                            "typeName": "(bool, Bn)",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Emergency",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 601,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            43,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 602,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "ReadySolution"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "supports",
                                    "type": 603,
                                    "typeName": "BoundedSupports<T::AccountId, T::MaxWinners>",
                                    "docs": []
                                },
                                {
                                    "name": "score",
                                    "type": 88,
                                    "typeName": "ElectionScore",
                                    "docs": []
                                },
                                {
                                    "name": "compute",
                                    "type": 87,
                                    "typeName": "ElectionCompute",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 603,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 366
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 365,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 604,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "RoundSnapshot"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "voters",
                                    "type": 605,
                                    "typeName": "Vec<VoterOf<T>>",
                                    "docs": []
                                },
                                {
                                    "name": "targets",
                                    "type": 206,
                                    "typeName": "Vec<T::AccountId>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 605,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 606
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 606,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            10,
                            490
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 607,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 608
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 609,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 608,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            88,
                            4,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 609,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 608
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 610,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "signed",
                        "SignedSubmission"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "Solution",
                            "type": 312
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "who",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "raw_solution",
                                    "type": 311,
                                    "typeName": "RawSolution<Solution>",
                                    "docs": []
                                },
                                {
                                    "name": "call_fee",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 611,
                "type": {
                    "path": [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PreDispatchEarlySubmission",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Submission was too early."
                                    ]
                                },
                                {
                                    "name": "PreDispatchWrongWinnerCount",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Wrong number of winners presented."
                                    ]
                                },
                                {
                                    "name": "PreDispatchWeakSubmission",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Submission was too weak, score-wise."
                                    ]
                                },
                                {
                                    "name": "SignedQueueFull",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The queue was full, and the solution was not better than any of the existing ones."
                                    ]
                                },
                                {
                                    "name": "SignedCannotPayDeposit",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The origin failed to pay the deposit."
                                    ]
                                },
                                {
                                    "name": "SignedInvalidWitness",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Witness data to dispatchable is invalid."
                                    ]
                                },
                                {
                                    "name": "SignedTooMuchWeight",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The signed submission consumes too much weight"
                                    ]
                                },
                                {
                                    "name": "OcwCallWrongEra",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "OCW submitted solution for wrong round"
                                    ]
                                },
                                {
                                    "name": "MissingSnapshotMetadata",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Snapshot metadata should exist but didn't."
                                    ]
                                },
                                {
                                    "name": "InvalidSubmissionIndex",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "`Self::insert_submission` returned an invalid index."
                                    ]
                                },
                                {
                                    "name": "CallNotAllowed",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The call is not allowed at this point."
                                    ]
                                },
                                {
                                    "name": "FallbackFailed",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The fallback failed"
                                    ]
                                },
                                {
                                    "name": "BoundNotMet",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Some bound not met"
                                    ]
                                },
                                {
                                    "name": "TooManyWinners",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Submitted solution has too many winners"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error of the pallet that can be returned in response to dispatches."
                    ]
                }
            },
            {
                "id": 612,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "list",
                        "Node"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": 0,
                                    "typeName": "T::AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "prev",
                                    "type": 92,
                                    "typeName": "Option<T::AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "next",
                                    "type": 92,
                                    "typeName": "Option<T::AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "bag_upper",
                                    "type": 10,
                                    "typeName": "T::Score",
                                    "docs": []
                                },
                                {
                                    "name": "score",
                                    "type": 10,
                                    "typeName": "T::Score",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 613,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "list",
                        "Bag"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "head",
                                    "type": 92,
                                    "typeName": "Option<T::AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "tail",
                                    "type": 92,
                                    "typeName": "Option<T::AccountId>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 614,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 10
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 615,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "List",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 616,
                                            "typeName": "ListError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A error in the list interface implementation."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 616,
                "type": {
                    "path": [
                        "pallet_bags_list",
                        "list",
                        "ListError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Duplicate",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NotHeavier",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "NotInSameBag",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "NodeNotFound",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 617,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "PoolMember"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "pool_id",
                                    "type": 4,
                                    "typeName": "PoolId",
                                    "docs": []
                                },
                                {
                                    "name": "points",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "last_recorded_reward_counter",
                                    "type": 478,
                                    "typeName": "T::RewardCounter",
                                    "docs": []
                                },
                                {
                                    "name": "unbonding_eras",
                                    "type": 618,
                                    "typeName": "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 618,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_btree_map",
                        "BoundedBTreeMap"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 4
                        },
                        {
                            "name": "V",
                            "type": 6
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 619,
                                    "typeName": "BTreeMap<K, V>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 619,
                "type": {
                    "path": [
                        "BTreeMap"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 4
                        },
                        {
                            "name": "V",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 620,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 620,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 621
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 621,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 622,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "BondedPoolInner"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "points",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "state",
                                    "type": 91,
                                    "typeName": "PoolState",
                                    "docs": []
                                },
                                {
                                    "name": "member_counter",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "roles",
                                    "type": 623,
                                    "typeName": "PoolRoles<T::AccountId>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 623,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "PoolRoles"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "depositor",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "root",
                                    "type": 92,
                                    "typeName": "Option<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "nominator",
                                    "type": 92,
                                    "typeName": "Option<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "state_toggler",
                                    "type": 92,
                                    "typeName": "Option<AccountId>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 624,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "RewardPool"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "last_recorded_reward_counter",
                                    "type": 478,
                                    "typeName": "T::RewardCounter",
                                    "docs": []
                                },
                                {
                                    "name": "last_recorded_total_payouts",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "total_rewards_claimed",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 625,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "SubPools"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "no_era",
                                    "type": 626,
                                    "typeName": "UnbondPool<T>",
                                    "docs": []
                                },
                                {
                                    "name": "with_era",
                                    "type": 627,
                                    "typeName": "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 626,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "UnbondPool"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "points",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                },
                                {
                                    "name": "balance",
                                    "type": 6,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 627,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_btree_map",
                        "BoundedBTreeMap"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 4
                        },
                        {
                            "name": "V",
                            "type": 626
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 628,
                                    "typeName": "BTreeMap<K, V>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 628,
                "type": {
                    "path": [
                        "BTreeMap"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 4
                        },
                        {
                            "name": "V",
                            "type": 626
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 629,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 629,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 630
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 630,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            626
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 631,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 2
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 632,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PoolNotFound",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "A (bonded) pool id does not exist."
                                    ]
                                },
                                {
                                    "name": "PoolMemberNotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "An account is not a member."
                                    ]
                                },
                                {
                                    "name": "RewardPoolNotFound",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A reward pool does not exist. In all cases this is a system logic error."
                                    ]
                                },
                                {
                                    "name": "SubPoolsNotFound",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "A sub pool does not exist."
                                    ]
                                },
                                {
                                    "name": "AccountBelongsToOtherPool",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "An account is already delegating in another pool. An account may only belong to one",
                                        "pool at a time."
                                    ]
                                },
                                {
                                    "name": "FullyUnbonding",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                                        "anymore to, for example, collect rewards)."
                                    ]
                                },
                                {
                                    "name": "MaxUnbondingLimit",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The member cannot unbond further chunks due to reaching the limit."
                                    ]
                                },
                                {
                                    "name": "CannotWithdrawAny",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "None of the funds can be withdrawn yet because the bonding duration has not passed."
                                    ]
                                },
                                {
                                    "name": "MinimumBondNotMet",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The amount does not meet the minimum bond to either join or create a pool.",
                                        "",
                                        "The depositor can never unbond to a value less than",
                                        "`Pallet::depositor_min_bond`. The caller does not have nominating",
                                        "permissions for the pool. Members can never unbond to a value below `MinJoinBond`."
                                    ]
                                },
                                {
                                    "name": "OverflowRisk",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The transaction could not be executed due to overflow risk for the pool."
                                    ]
                                },
                                {
                                    "name": "NotDestroying",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                                        "other members to be permissionlessly unbonded."
                                    ]
                                },
                                {
                                    "name": "NotNominator",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The caller does not have nominating permissions for the pool."
                                    ]
                                },
                                {
                                    "name": "NotKickerOrDestroying",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Either a) the caller cannot make a valid kick or b) the pool is not destroying."
                                    ]
                                },
                                {
                                    "name": "NotOpen",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The pool is not open to join"
                                    ]
                                },
                                {
                                    "name": "MaxPools",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "The system is maxed out on pools."
                                    ]
                                },
                                {
                                    "name": "MaxPoolMembers",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Too many members in the pool or system."
                                    ]
                                },
                                {
                                    "name": "CanNotChangeState",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "The pools state cannot be changed."
                                    ]
                                },
                                {
                                    "name": "DoesNotHavePermission",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "The caller does not have adequate permissions."
                                    ]
                                },
                                {
                                    "name": "MetadataExceedsMaxLen",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Metadata exceeds [`Config::MaxMetadataLen`]"
                                    ]
                                },
                                {
                                    "name": "Defensive",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 633,
                                            "typeName": "DefensiveError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": [
                                        "Some error occurred that should never happen. This should be reported to the",
                                        "maintainers."
                                    ]
                                },
                                {
                                    "name": "PartialUnbondNotAllowedPermissionlessly",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "Partial unbonding now allowed permissionlessly."
                                    ]
                                },
                                {
                                    "name": "PoolIdInUse",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "Pool id currently in use."
                                    ]
                                },
                                {
                                    "name": "InvalidPoolId",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "Pool id provided is not correct/usable."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 633,
                "type": {
                    "path": [
                        "pallet_nomination_pools",
                        "pallet",
                        "DefensiveError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotEnoughSpaceInUnbondPool",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PoolNotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "RewardPoolNotFound",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "SubPoolsNotFound",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "BondedStashKilledPrematurely",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 634,
                "type": {
                    "path": [
                        "pallet_fast_unstake",
                        "types",
                        "UnstakeRequest"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "stashes",
                                    "type": 635,
                                    "typeName": "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
                                    "docs": []
                                },
                                {
                                    "name": "checked",
                                    "type": 636,
                                    "typeName": "BoundedVec<EraIndex, MaxChecking<T>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 635,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 69
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 68,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 636,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 4
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 94,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 637,
                "type": {
                    "path": [
                        "pallet_fast_unstake",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotController",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The provided Controller account was not found.",
                                        "",
                                        "This means that the given account is not bonded."
                                    ]
                                },
                                {
                                    "name": "AlreadyQueued",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The bonded account has already been queued."
                                    ]
                                },
                                {
                                    "name": "NotFullyBonded",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The bonded account has active unlocking chunks."
                                    ]
                                },
                                {
                                    "name": "NotQueued",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The provided un-staker is not in the `Queue`."
                                    ]
                                },
                                {
                                    "name": "AlreadyHead",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The provided un-staker is already in Head, and cannot deregister."
                                    ]
                                },
                                {
                                    "name": "CallNotAllowed",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The call is not allowed at this point because the pallet is not active."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 638,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "HostConfiguration"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max_code_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_head_data_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_queue_count",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_queue_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_message_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_message_num_per_candidate",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_message_num_per_candidate",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "validation_upgrade_cooldown",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "validation_upgrade_delay",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "max_pov_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_downward_message_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "ump_service_total_weight",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parachain_outbound_channels",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parathread_outbound_channels",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_sender_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_recipient_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_capacity",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_total_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parachain_inbound_channels",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parathread_inbound_channels",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_message_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "code_retention_period",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "parathread_cores",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "parathread_retries",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "group_rotation_frequency",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "chain_availability_period",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "thread_availability_period",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "scheduling_lookahead",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_validators_per_core",
                                    "type": 236,
                                    "typeName": "Option<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "max_validators",
                                    "type": 236,
                                    "typeName": "Option<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_period",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_post_conclusion_acceptance_period",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_max_spam_slots",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_conclusion_by_time_out_period",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "no_show_slots",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "n_delay_tranches",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "zeroth_delay_tranche_width",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "needed_approvals",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "relay_vrf_modulo_samples",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "ump_max_individual_weight",
                                    "type": 8,
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "pvf_checking_enabled",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                },
                                {
                                    "name": "pvf_voting_ttl",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "minimum_validation_upgrade_delay",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 639,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 640
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 640,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            638
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 641,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidNewValue",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The new value for a configuration parameter is invalid."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 642,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 385
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 643,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 213
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 644,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "AvailabilityBitfieldRecord"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "bitfield",
                                    "type": 382,
                                    "typeName": "AvailabilityBitfield",
                                    "docs": []
                                },
                                {
                                    "name": "submitted_at",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 645,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "CandidatePendingAvailability"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        },
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "core",
                                    "type": 105,
                                    "typeName": "CoreIndex",
                                    "docs": []
                                },
                                {
                                    "name": "hash",
                                    "type": 114,
                                    "typeName": "CandidateHash",
                                    "docs": []
                                },
                                {
                                    "name": "descriptor",
                                    "type": 97,
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "availability_votes",
                                    "type": 383,
                                    "typeName": "BitVec<u8, BitOrderLsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "backers",
                                    "type": 383,
                                    "typeName": "BitVec<u8, BitOrderLsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "relay_parent_number",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "backed_in_number",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "backing_group",
                                    "type": 106,
                                    "typeName": "GroupIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 646,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "UnsortedOrDuplicateValidatorIndices",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Validator indices are out of order or contains duplicates."
                                    ]
                                },
                                {
                                    "name": "UnsortedOrDuplicateDisputeStatementSet",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Dispute statement sets are out of order or contain duplicates."
                                    ]
                                },
                                {
                                    "name": "UnsortedOrDuplicateBackedCandidates",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Backed candidates are out of order (core index) or contain duplicates."
                                    ]
                                },
                                {
                                    "name": "UnexpectedRelayParent",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "A different relay parent was provided compared to the on-chain stored one."
                                    ]
                                },
                                {
                                    "name": "WrongBitfieldSize",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Availability bitfield has unexpected size."
                                    ]
                                },
                                {
                                    "name": "BitfieldAllZeros",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Bitfield consists of zeros only."
                                    ]
                                },
                                {
                                    "name": "BitfieldDuplicateOrUnordered",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Multiple bitfields submitted by same validator or validators out of order by index."
                                    ]
                                },
                                {
                                    "name": "ValidatorIndexOutOfBounds",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Validator index out of bounds."
                                    ]
                                },
                                {
                                    "name": "InvalidBitfieldSignature",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Invalid signature"
                                    ]
                                },
                                {
                                    "name": "UnscheduledCandidate",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Candidate submitted but para not scheduled."
                                    ]
                                },
                                {
                                    "name": "CandidateScheduledBeforeParaFree",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Candidate scheduled despite pending candidate already existing for the para."
                                    ]
                                },
                                {
                                    "name": "WrongCollator",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Candidate included with the wrong collator."
                                    ]
                                },
                                {
                                    "name": "ScheduledOutOfOrder",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Scheduled cores out of order."
                                    ]
                                },
                                {
                                    "name": "HeadDataTooLarge",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Head data exceeds the configured maximum."
                                    ]
                                },
                                {
                                    "name": "PrematureCodeUpgrade",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Code upgrade prematurely."
                                    ]
                                },
                                {
                                    "name": "NewCodeTooLarge",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Output code is too large"
                                    ]
                                },
                                {
                                    "name": "CandidateNotInParentContext",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "Candidate not in parent context."
                                    ]
                                },
                                {
                                    "name": "InvalidGroupIndex",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "Invalid group index in core assignment."
                                    ]
                                },
                                {
                                    "name": "InsufficientBacking",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Insufficient (non-majority) backing."
                                    ]
                                },
                                {
                                    "name": "InvalidBacking",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "Invalid (bad signature, unknown validator, etc.) backing."
                                    ]
                                },
                                {
                                    "name": "NotCollatorSigned",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "Collator did not sign PoV."
                                    ]
                                },
                                {
                                    "name": "ValidationDataHashMismatch",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "The validation data hash does not match expected."
                                    ]
                                },
                                {
                                    "name": "IncorrectDownwardMessageHandling",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "The downward message queue is not processed correctly."
                                    ]
                                },
                                {
                                    "name": "InvalidUpwardMessages",
                                    "fields": [],
                                    "index": 23,
                                    "docs": [
                                        "At least one upward message sent does not pass the acceptance criteria."
                                    ]
                                },
                                {
                                    "name": "HrmpWatermarkMishandling",
                                    "fields": [],
                                    "index": 24,
                                    "docs": [
                                        "The candidate didn't follow the rules of HRMP watermark advancement."
                                    ]
                                },
                                {
                                    "name": "InvalidOutboundHrmp",
                                    "fields": [],
                                    "index": 25,
                                    "docs": [
                                        "The HRMP messages sent by the candidate is not valid."
                                    ]
                                },
                                {
                                    "name": "InvalidValidationCodeHash",
                                    "fields": [],
                                    "index": 26,
                                    "docs": [
                                        "The validation code hash of the candidate is not valid."
                                    ]
                                },
                                {
                                    "name": "ParaHeadMismatch",
                                    "fields": [],
                                    "index": 27,
                                    "docs": [
                                        "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the",
                                        "commitments."
                                    ]
                                },
                                {
                                    "name": "BitfieldReferencesFreedCore",
                                    "fields": [],
                                    "index": 28,
                                    "docs": [
                                        "A bitfield that references a freed core,",
                                        "either intentionally or as part of a concluded",
                                        "invalid dispute."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 647,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ScrapedOnChainVotes"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "session",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "backing_validators_per_candidate",
                                    "type": 648,
                                    "typeName": "Vec<(CandidateReceipt<H>, Vec<(ValidatorIndex, ValidityAttestation)>)\n>",
                                    "docs": []
                                },
                                {
                                    "name": "disputes",
                                    "type": 397,
                                    "typeName": "MultiDisputeStatementSet",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 648,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 649
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 649,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            96,
                            650
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 650,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 651
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 651,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            385,
                            396
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 652,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooManyInclusionInherents",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Inclusion inherent called more than once per block."
                                    ]
                                },
                                {
                                    "name": "InvalidParentHeader",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The hash of the submitted parent header doesn't correspond to the saved block hash of",
                                        "the parent."
                                    ]
                                },
                                {
                                    "name": "CandidateConcludedInvalid",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Disputed candidate that was concluded invalid."
                                    ]
                                },
                                {
                                    "name": "InherentOverweight",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The data given to the inherent will result in an overweight block."
                                    ]
                                },
                                {
                                    "name": "DisputeStatementsUnsortedOrDuplicates",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The ordering of dispute statements was invalid."
                                    ]
                                },
                                {
                                    "name": "DisputeInvalid",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "A dispute statement was invalid."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 653,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 642
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 654,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "ParathreadClaimQueue"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "queue",
                                    "type": 655,
                                    "typeName": "Vec<QueuedParathread>",
                                    "docs": []
                                },
                                {
                                    "name": "next_core_offset",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 655,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 656
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 656,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "QueuedParathread"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "claim",
                                    "type": 657,
                                    "typeName": "ParathreadEntry",
                                    "docs": []
                                },
                                {
                                    "name": "core_offset",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 657,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ParathreadEntry"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "claim",
                                    "type": 658,
                                    "typeName": "ParathreadClaim",
                                    "docs": []
                                },
                                {
                                    "name": "retries",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 658,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "ParathreadClaim"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 98,
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": null,
                                    "type": 99,
                                    "typeName": "CollatorId",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 659,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 660
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 660,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 661
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 661,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 661,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "CoreOccupied"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parathread",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 657,
                                            "typeName": "ParathreadEntry",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 662,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 98
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 663,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 664
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 664,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "CoreAssignment"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "core",
                                    "type": 105,
                                    "typeName": "CoreIndex",
                                    "docs": []
                                },
                                {
                                    "name": "para_id",
                                    "type": 98,
                                    "typeName": "ParaId",
                                    "docs": []
                                },
                                {
                                    "name": "kind",
                                    "type": 665,
                                    "typeName": "AssignmentKind",
                                    "docs": []
                                },
                                {
                                    "name": "group_idx",
                                    "type": 106,
                                    "typeName": "GroupIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 665,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "AssignmentKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parathread",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 99,
                                            "typeName": "CollatorId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 666,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "PvfCheckActiveVoteState"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "votes_accept",
                                    "type": 383,
                                    "typeName": "BitVec<u8, BitOrderLsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "votes_reject",
                                    "type": 383,
                                    "typeName": "BitVec<u8, BitOrderLsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "age",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "created_at",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "causes",
                                    "type": 667,
                                    "typeName": "Vec<PvfCheckCause<BlockNumber>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 667,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 668
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 668,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "PvfCheckCause"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Onboarding",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Upgrade",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": 98,
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "relay_parent_number",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 669,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 103
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 670,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaLifecycle"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Onboarding",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parathread",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "UpgradingParathread",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "DowngradingParachain",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "OffboardingParathread",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "OffboardingParachain",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 671,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            98,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 672,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaPastCodeMeta"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "upgrade_times",
                                    "type": 673,
                                    "typeName": "Vec<ReplacementTimes<N>>",
                                    "docs": []
                                },
                                {
                                    "name": "last_pruned",
                                    "type": 236,
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 673,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 674
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 674,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ReplacementTimes"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "expected_at",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "activated_at",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 675,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 671
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 676,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "UpgradeGoAhead"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Abort",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "GoAhead",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 677,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "UpgradeRestriction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Present",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 678,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaGenesisArgs"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "genesis_head",
                                    "type": 104,
                                    "typeName": "HeadData",
                                    "docs": []
                                },
                                {
                                    "name": "validation_code",
                                    "type": 394,
                                    "typeName": "ValidationCode",
                                    "docs": []
                                },
                                {
                                    "name": "para_kind",
                                    "type": 43,
                                    "typeName": "ParaKind",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 679,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotRegistered",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Para is not registered in our system."
                                    ]
                                },
                                {
                                    "name": "CannotOnboard",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Para cannot be onboarded because it is already tracked by our system."
                                    ]
                                },
                                {
                                    "name": "CannotOffboard",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Para cannot be offboarded at this time."
                                    ]
                                },
                                {
                                    "name": "CannotUpgrade",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Para cannot be upgraded to a parachain."
                                    ]
                                },
                                {
                                    "name": "CannotDowngrade",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Para cannot be downgraded to a parathread."
                                    ]
                                },
                                {
                                    "name": "PvfCheckStatementStale",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The statement for PVF pre-checking is stale."
                                    ]
                                },
                                {
                                    "name": "PvfCheckStatementFuture",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The statement for PVF pre-checking is for a future session."
                                    ]
                                },
                                {
                                    "name": "PvfCheckValidatorIndexOutOfBounds",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Claimed validator index is out of bounds."
                                    ]
                                },
                                {
                                    "name": "PvfCheckInvalidSignature",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The signature for the PVF pre-checking is invalid."
                                    ]
                                },
                                {
                                    "name": "PvfCheckDoubleVote",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The given validator already has cast a vote."
                                    ]
                                },
                                {
                                    "name": "PvfCheckSubjectInvalid",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The given PVF does not exist at the moment of process a vote."
                                    ]
                                },
                                {
                                    "name": "PvfCheckDisabled",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The PVF pre-checking statement cannot be included since the PVF pre-checking mechanism",
                                        "is disabled."
                                    ]
                                },
                                {
                                    "name": "CannotUpgradeCode",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Parachain cannot currently schedule a code upgrade."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 680,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 681
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 681,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "BufferedSessionChange"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validators",
                                    "type": 643,
                                    "typeName": "Vec<ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "queued",
                                    "type": 643,
                                    "typeName": "Vec<ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "session_index",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 682,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 683
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 683,
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "InboundDownwardMessage"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sent_at",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "msg",
                                    "type": 12,
                                    "typeName": "DownwardMessage",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 684,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            98,
                            12
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 685,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "UnknownMessageIndex",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The message index given is unknown."
                                    ]
                                },
                                {
                                    "name": "WeightOverLimit",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The amount of weight given is possibly not enough for executing the message."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 686,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpOpenChannelRequest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "confirmed",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                },
                                {
                                    "name": "_age",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "sender_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "max_message_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_capacity",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_total_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 687,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 112
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 688,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpChannel"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max_capacity",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_total_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_message_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "msg_count",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "total_size",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "mqc_head",
                                    "type": 689,
                                    "typeName": "Option<Hash>",
                                    "docs": []
                                },
                                {
                                    "name": "sender_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "recipient_deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 689,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 11
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 11,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 690,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 691
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 691,
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "InboundHrmpMessage"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sent_at",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": 12,
                                    "typeName": "sp_std::vec::Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 692,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 693
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 693,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            662
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 694,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "OpenHrmpChannelToSelf",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The sender tried to open a channel to themselves."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelInvalidRecipient",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The recipient is not a valid para."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelZeroCapacity",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The requested capacity is zero."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelCapacityExceedsLimit",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The requested capacity exceeds the global limit."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelZeroMessageSize",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The requested maximum message size is 0."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelMessageSizeExceedsLimit",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The open request requested the message size that exceeds the global limit."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyExists",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The channel already exists"
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyRequested",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "There is already a request to open the same channel."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelLimitExceeded",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The sender already has the maximum number of allowed outbound channels."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The channel from the sender to the origin doesn't exist."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelAlreadyConfirmed",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The channel is already confirmed."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelLimitExceeded",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The recipient already has the maximum number of allowed inbound channels."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelUnauthorized",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The origin tries to close a channel where it is neither the sender nor the recipient."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The channel to be closed doesn't exist."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelAlreadyUnderway",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "The channel close request is already requested."
                                    ]
                                },
                                {
                                    "name": "CancelHrmpOpenChannelUnauthorized",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Canceling is requested by neither the sender nor recipient of the open channel request."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "The open request doesn't exist."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyConfirmed",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "Cannot cancel an HRMP open channel request because it is already confirmed."
                                    ]
                                },
                                {
                                    "name": "WrongWitness",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "The provided witness data is wrong."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 695,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 214
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 696,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "SessionInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "active_validator_indices",
                                    "type": 642,
                                    "typeName": "Vec<ValidatorIndex>",
                                    "docs": []
                                },
                                {
                                    "name": "random_seed",
                                    "type": 1,
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_period",
                                    "type": 4,
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "validators",
                                    "type": 697,
                                    "typeName": "IndexedVec<ValidatorIndex, ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "discovery_keys",
                                    "type": 698,
                                    "typeName": "Vec<AuthorityDiscoveryId>",
                                    "docs": []
                                },
                                {
                                    "name": "assignment_keys",
                                    "type": 695,
                                    "typeName": "Vec<AssignmentId>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_groups",
                                    "type": 699,
                                    "typeName": "IndexedVec<GroupIndex, Vec<ValidatorIndex>>",
                                    "docs": []
                                },
                                {
                                    "name": "n_cores",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "zeroth_delay_tranche_width",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "relay_vrf_modulo_samples",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "n_delay_tranches",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "no_show_slots",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "needed_approvals",
                                    "type": 4,
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 697,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "IndexedVec"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 385
                        },
                        {
                            "name": "V",
                            "type": 213
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 643,
                                    "typeName": "Vec<V>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 698,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 215
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 699,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "IndexedVec"
                    ],
                    "params": [
                        {
                            "name": "K",
                            "type": 106
                        },
                        {
                            "name": "V",
                            "type": 642
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 653,
                                    "typeName": "Vec<V>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 700,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            114
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 701,
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v2",
                        "DisputeState"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validators_for",
                                    "type": 383,
                                    "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "validators_against",
                                    "type": 383,
                                    "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                                    "docs": []
                                },
                                {
                                    "name": "start",
                                    "type": 4,
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "concluded_at",
                                    "type": 236,
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 702,
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "DuplicateDisputeStatementSets",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Duplicate dispute statement sets provided."
                                    ]
                                },
                                {
                                    "name": "AncientDisputeStatement",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Ancient dispute statement provided."
                                    ]
                                },
                                {
                                    "name": "ValidatorIndexOutOfBounds",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Validator index on statement is out of bounds for session."
                                    ]
                                },
                                {
                                    "name": "InvalidSignature",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Invalid signature on statement."
                                    ]
                                },
                                {
                                    "name": "DuplicateStatement",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Validator vote submitted more than once to dispute."
                                    ]
                                },
                                {
                                    "name": "PotentialSpam",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Too many spam slots used by some specific validator."
                                    ]
                                },
                                {
                                    "name": "SingleSidedDispute",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "A dispute where there are only votes on one side."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 703,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "ParaInfo"
                    ],
                    "params": [
                        {
                            "name": "Account",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "manager",
                                    "type": 0,
                                    "typeName": "Account",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "locked",
                                    "type": 43,
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 704,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotRegistered",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The ID is not registered."
                                    ]
                                },
                                {
                                    "name": "AlreadyRegistered",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The ID is already registered."
                                    ]
                                },
                                {
                                    "name": "NotOwner",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The caller is not the owner of this Id."
                                    ]
                                },
                                {
                                    "name": "CodeTooLarge",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Invalid para code size."
                                    ]
                                },
                                {
                                    "name": "HeadDataTooLarge",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Invalid para head data size."
                                    ]
                                },
                                {
                                    "name": "NotParachain",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Para is not a Parachain."
                                    ]
                                },
                                {
                                    "name": "NotParathread",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Para is not a Parathread."
                                    ]
                                },
                                {
                                    "name": "CannotDeregister",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot deregister para"
                                    ]
                                },
                                {
                                    "name": "CannotDowngrade",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Cannot schedule downgrade of parachain to parathread"
                                    ]
                                },
                                {
                                    "name": "CannotUpgrade",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Cannot schedule upgrade of parathread to parachain"
                                    ]
                                },
                                {
                                    "name": "ParaLocked",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Para is locked from manipulation by the manager. Must use parachain or relay chain governance."
                                    ]
                                },
                                {
                                    "name": "NotReserved",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The ID given for registration has not been reserved."
                                    ]
                                },
                                {
                                    "name": "EmptyCode",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "Registering parachain with empty code is not allowed."
                                    ]
                                },
                                {
                                    "name": "CannotSwap",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras are",
                                        "correct for the swap to work."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 705,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 452
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 706,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ParaNotOnboarding",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The parachain ID is not onboarding."
                                    ]
                                },
                                {
                                    "name": "LeaseError",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "There was an error with the lease."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 707,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            98
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 708,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 36,
                            "type": 709
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 709,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 710
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 710,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 710,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            0,
                            98,
                            6
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 711,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AuctionInProgress",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "This auction is already in progress."
                                    ]
                                },
                                {
                                    "name": "LeasePeriodInPast",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The lease period is in the past."
                                    ]
                                },
                                {
                                    "name": "ParaNotRegistered",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Para is not registered"
                                    ]
                                },
                                {
                                    "name": "NotCurrentAuction",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Not a current auction."
                                    ]
                                },
                                {
                                    "name": "NotAuction",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Not an auction."
                                    ]
                                },
                                {
                                    "name": "AuctionEnded",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Auction has already ended."
                                    ]
                                },
                                {
                                    "name": "AlreadyLeasedOut",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The para is already leased out for part of this range."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 712,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "FundInfo"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": 0
                        },
                        {
                            "name": "Balance",
                            "type": 6
                        },
                        {
                            "name": "BlockNumber",
                            "type": 4
                        },
                        {
                            "name": "LeasePeriod",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "depositor",
                                    "type": 0,
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "verifier",
                                    "type": 416,
                                    "typeName": "Option<MultiSigner>",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "raised",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "end",
                                    "type": 4,
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "cap",
                                    "type": 6,
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "last_contribution",
                                    "type": 713,
                                    "typeName": "LastContribution<BlockNumber>",
                                    "docs": []
                                },
                                {
                                    "name": "first_period",
                                    "type": 4,
                                    "typeName": "LeasePeriod",
                                    "docs": []
                                },
                                {
                                    "name": "last_period",
                                    "type": 4,
                                    "typeName": "LeasePeriod",
                                    "docs": []
                                },
                                {
                                    "name": "fund_index",
                                    "type": 4,
                                    "typeName": "FundIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 713,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "LastContribution"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Never",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PreEnding",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ending",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 714,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "FirstPeriodInPast",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The current lease period is more than the first lease period."
                                    ]
                                },
                                {
                                    "name": "FirstPeriodTooFarInFuture",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The first lease period needs to at least be less than 3 `max_value`."
                                    ]
                                },
                                {
                                    "name": "LastPeriodBeforeFirstPeriod",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Last lease period must be greater than first lease period."
                                    ]
                                },
                                {
                                    "name": "LastPeriodTooFarInFuture",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The last lease period cannot be more than 3 periods after the first period."
                                    ]
                                },
                                {
                                    "name": "CannotEndInPast",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The campaign ends before the current block number. The end must be in the future."
                                    ]
                                },
                                {
                                    "name": "EndTooFarInFuture",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The end date for this crowdloan is not sensible."
                                    ]
                                },
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "There was an overflow."
                                    ]
                                },
                                {
                                    "name": "ContributionTooSmall",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "The contribution was below the minimum, `MinContribution`."
                                    ]
                                },
                                {
                                    "name": "InvalidParaId",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Invalid fund index."
                                    ]
                                },
                                {
                                    "name": "CapExceeded",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Contributions exceed maximum amount."
                                    ]
                                },
                                {
                                    "name": "ContributionPeriodOver",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The contribution period has already ended."
                                    ]
                                },
                                {
                                    "name": "InvalidOrigin",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The origin of this call is invalid."
                                    ]
                                },
                                {
                                    "name": "NotParachain",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "This crowdloan does not correspond to a parachain."
                                    ]
                                },
                                {
                                    "name": "LeaseActive",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "This parachain lease is still active and retirement cannot yet begin."
                                    ]
                                },
                                {
                                    "name": "BidOrLeaseActive",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "This parachain's bid or lease is still active and withdraw cannot yet begin."
                                    ]
                                },
                                {
                                    "name": "FundNotEnded",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "The crowdloan has not yet ended."
                                    ]
                                },
                                {
                                    "name": "NoContributions",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "There are no contributions stored in this crowdloan."
                                    ]
                                },
                                {
                                    "name": "NotReadyToDissolve",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period."
                                    ]
                                },
                                {
                                    "name": "InvalidSignature",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Invalid signature."
                                    ]
                                },
                                {
                                    "name": "MemoTooLarge",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "The provided memo is too large."
                                    ]
                                },
                                {
                                    "name": "AlreadyInNewRaise",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "The fund is already in `NewRaise`"
                                    ]
                                },
                                {
                                    "name": "VrfDelayInProgress",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "No contributions allowed during the VRF delay"
                                    ]
                                },
                                {
                                    "name": "NoLeasePeriod",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "A lease period has not started yet, due to an offset in the starting block."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 715,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "QueryStatus"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": 4
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Pending",
                                    "fields": [
                                        {
                                            "name": "responder",
                                            "type": 155,
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_notify",
                                            "type": 716,
                                            "typeName": "Option<(u8, u8)>",
                                            "docs": []
                                        },
                                        {
                                            "name": "timeout",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "VersionNotifier",
                                    "fields": [
                                        {
                                            "name": "origin",
                                            "type": 155,
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "is_active",
                                            "type": 43,
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ready",
                                    "fields": [
                                        {
                                            "name": "response",
                                            "type": 718,
                                            "typeName": "VersionedResponse",
                                            "docs": []
                                        },
                                        {
                                            "name": "at",
                                            "type": 4,
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 716,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 717
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 717,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 717,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            2,
                            2
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 718,
                "type": {
                    "path": [
                        "xcm",
                        "VersionedResponse"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 429,
                                            "typeName": "v0::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 434,
                                            "typeName": "v1::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 140,
                                            "typeName": "v2::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 719,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            4,
                            155
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 720,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            10,
                            10,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 721,
                "type": {
                    "path": [
                        "sp_core",
                        "bounded",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 722
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 723,
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 722,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            155,
                            4
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 723,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": 722
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 724,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "VersionMigrationStage"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "MigrateSupportedVersion",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "MigrateVersionNotifiers",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "NotifyCurrentTargets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 725,
                                            "typeName": "Option<Vec<u8>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "MigrateAndNotifyOldTargets",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 725,
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": 12
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 12,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 726,
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unreachable",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The desired destination was unreachable, generally because there is a no way of routing",
                                        "to it."
                                    ]
                                },
                                {
                                    "name": "SendFailure",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
                                        "a lack of space for buffering the message."
                                    ]
                                },
                                {
                                    "name": "Filtered",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The message execution fails the filter."
                                    ]
                                },
                                {
                                    "name": "UnweighableMessage",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The message's weight could not be determined."
                                    ]
                                },
                                {
                                    "name": "DestinationNotInvertible",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The destination `MultiLocation` provided cannot be inverted."
                                    ]
                                },
                                {
                                    "name": "Empty",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The assets to be sent are empty."
                                    ]
                                },
                                {
                                    "name": "CannotReanchor",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Could not re-anchor the assets to declare the fees for the destination chain."
                                    ]
                                },
                                {
                                    "name": "TooManyAssets",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Too many assets have been attempted for transfer."
                                    ]
                                },
                                {
                                    "name": "InvalidOrigin",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Origin is invalid for sending."
                                    ]
                                },
                                {
                                    "name": "BadVersion",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The version of the `Versioned` value used is not able to be interpreted."
                                    ]
                                },
                                {
                                    "name": "BadLocation",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The given location could not be used (e.g. because it cannot be expressed in the",
                                        "desired version of XCM)."
                                    ]
                                },
                                {
                                    "name": "NoSubscription",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The referenced subscription could not be found."
                                    ]
                                },
                                {
                                    "name": "AlreadySubscribed",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The location is invalid since it already has a subscription from us."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": 727,
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "unchecked_extrinsic",
                        "UncheckedExtrinsic"
                    ],
                    "params": [
                        {
                            "name": "Address",
                            "type": 197
                        },
                        {
                            "name": "Call",
                            "type": 181
                        },
                        {
                            "name": "Signature",
                            "type": 421
                        },
                        {
                            "name": "Extra",
                            "type": 728
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 12,
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 728,
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            729,
                            730,
                            731,
                            732,
                            733,
                            735,
                            736,
                            737,
                            738
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": 729,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_non_zero_sender",
                        "CheckNonZeroSender"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 730,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_spec_version",
                        "CheckSpecVersion"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 731,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_tx_version",
                        "CheckTxVersion"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 732,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_genesis",
                        "CheckGenesis"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 733,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_mortality",
                        "CheckMortality"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 734,
                                    "typeName": "Era",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 734,
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "era",
                        "Era"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Immortal",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal9",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal10",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal11",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal12",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal13",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal14",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal15",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal16",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal17",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal18",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal19",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal20",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal21",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal22",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal23",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal24",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal25",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal26",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal27",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal28",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal29",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal30",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal31",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal33",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 33,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal34",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal35",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal36",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal37",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal38",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal39",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal40",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal41",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 41,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal42",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 42,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal43",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 43,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal44",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 44,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal45",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 45,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal46",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 46,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal47",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 47,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal48",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 48,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal49",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 49,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal50",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 50,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal51",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 51,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal52",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 52,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal53",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 53,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal54",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 54,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal55",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 55,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal56",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 56,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal57",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 57,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal58",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 58,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal59",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 59,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal60",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 60,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal61",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 61,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal62",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 62,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal63",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 63,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal64",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 64,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal65",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 65,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal66",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 66,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal67",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 67,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal68",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 68,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal69",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 69,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal70",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 70,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal71",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 71,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal72",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 72,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal73",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 73,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal74",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 74,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal75",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 75,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal76",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 76,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal77",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 77,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal78",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 78,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal79",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 79,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal80",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 80,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal81",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 81,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal82",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 82,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal83",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 83,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal84",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 84,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal85",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 85,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal86",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 86,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal87",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 87,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal88",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 88,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal89",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 89,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal90",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 90,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal91",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 91,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal92",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 92,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal93",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 93,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal94",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 94,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal95",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 95,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal96",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 96,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal97",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 97,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal98",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 98,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal99",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal100",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 100,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal101",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 101,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal102",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 102,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal103",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 103,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal104",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 104,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal105",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 105,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal106",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 106,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal107",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 107,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal108",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 108,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal109",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 109,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal110",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 110,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal111",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 111,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal112",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 112,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal113",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 113,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal114",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 114,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal115",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 115,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal116",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 116,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal117",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 117,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal118",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 118,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal119",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 119,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal120",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 120,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal121",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 121,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal122",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 122,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal123",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 123,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal124",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 124,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal125",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 125,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal126",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 126,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal127",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 127,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal128",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 128,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal129",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 129,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal130",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 130,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal131",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 131,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal132",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 132,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal133",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 133,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal134",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 134,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal135",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 135,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal136",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 136,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal137",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 137,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal138",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 138,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal139",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 139,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal140",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 140,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal141",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 141,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal142",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 142,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal143",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 143,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal144",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 144,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal145",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 145,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal146",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 146,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal147",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 147,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal148",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 148,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal149",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 149,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal150",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 150,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal151",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 151,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal152",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 152,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal153",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 153,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal154",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 154,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal155",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 155,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal156",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 156,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal157",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 157,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal158",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 158,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal159",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 159,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal160",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 160,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal161",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 161,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal162",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 162,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal163",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 163,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal164",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 164,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal165",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 165,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal166",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 166,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal167",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 167,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal168",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 168,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal169",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 169,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal170",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 170,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal171",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 171,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal172",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 172,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal173",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 173,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal174",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 174,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal175",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 175,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal176",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 176,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal177",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 177,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal178",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 178,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal179",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 179,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal180",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 180,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal181",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 181,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal182",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 182,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal183",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 183,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal184",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 184,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal185",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 185,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal186",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 186,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal187",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 187,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal188",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 188,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal189",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 189,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal190",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 190,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal191",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 191,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal192",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 192,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal193",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 193,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal194",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 194,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal195",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 195,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal196",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 196,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal197",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 197,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal198",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 198,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal199",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 199,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal200",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 200,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal201",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 201,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal202",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 202,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal203",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 203,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal204",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 204,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal205",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 205,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal206",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 206,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal207",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 207,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal208",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 208,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal209",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 209,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal210",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 210,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal211",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 211,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal212",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 212,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal213",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 213,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal214",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 214,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal215",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 215,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal216",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 216,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal217",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 217,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal218",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 218,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal219",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 219,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal220",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 220,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal221",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 221,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal222",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 222,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal223",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 223,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal224",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 224,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal225",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 225,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal226",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 226,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal227",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 227,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal228",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 228,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal229",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 229,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal230",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 230,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal231",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 231,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal232",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 232,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal233",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 233,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal234",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 234,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal235",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 235,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal236",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 236,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal237",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 237,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal238",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 238,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal239",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 239,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal240",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 240,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal241",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 241,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal242",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 242,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal243",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 243,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal244",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 244,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal245",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 245,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal246",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 246,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal247",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 247,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal248",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 248,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal249",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 249,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal250",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 250,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal251",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 251,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal252",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 252,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal253",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 253,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal254",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 254,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal255",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": 2,
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 255,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 735,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_nonce",
                        "CheckNonce"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 125,
                                    "typeName": "T::Index",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 736,
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_weight",
                        "CheckWeight"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 737,
                "type": {
                    "path": [
                        "pallet_transaction_payment",
                        "ChargeTransactionPayment"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": 58,
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 738,
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "claims",
                        "PrevalidateAttests"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": 739,
                "type": {
                    "path": [
                        "polkadot_runtime",
                        "Runtime"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            }
        ]
    },
    "pallets": [
        {
            "name": "System",
            "storage": {
                "prefix": "System",
                "items": [
                    {
                        "name": "Account",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 3
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The full account information for a particular account ID."
                        ]
                    },
                    {
                        "name": "ExtrinsicCount",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Total extrinsics count for the current block."
                        ]
                    },
                    {
                        "name": "BlockWeight",
                        "modifier": "Default",
                        "type": {
                            "Plain": 7
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The current weight for the block."
                        ]
                    },
                    {
                        "name": "AllExtrinsicsLen",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Total length (in bytes) for all extrinsics put together, for the current block."
                        ]
                    },
                    {
                        "name": "BlockHash",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 11
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Map of block numbers to block hashes."
                        ]
                    },
                    {
                        "name": "ExtrinsicData",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 12
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                        ]
                    },
                    {
                        "name": "Number",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The current block number being processed. Set by `execute_block`."
                        ]
                    },
                    {
                        "name": "ParentHash",
                        "modifier": "Default",
                        "type": {
                            "Plain": 11
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Hash of the previous block."
                        ]
                    },
                    {
                        "name": "Digest",
                        "modifier": "Default",
                        "type": {
                            "Plain": 13
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Digest of the current block, also part of the block header."
                        ]
                    },
                    {
                        "name": "Events",
                        "modifier": "Default",
                        "type": {
                            "Plain": 17
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Events deposited for the current block.",
                            "",
                            " NOTE: The item is unbound and should therefore never be read on chain.",
                            " It could otherwise inflate the PoV size of a block.",
                            "",
                            " Events have a large in-memory size. Box the events to not go out-of-memory",
                            " just in case someone still reads them from within the runtime."
                        ]
                    },
                    {
                        "name": "EventCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of events in the `Events<T>` list."
                        ]
                    },
                    {
                        "name": "EventTopics",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 11,
                                "value": 158
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                            " of events in the `<Events<T>>` list.",
                            "",
                            " All topic vectors have deterministic storage locations depending on the topic. This",
                            " allows light-clients to leverage the changes trie storage tracking mechanism and",
                            " in case of changes fetch the list of events of interest.",
                            "",
                            " The value has the type `(T::BlockNumber, EventIndex)` because if we used only just",
                            " the `EventIndex` then in case if the topic has the same contents on the next block",
                            " no notification will be triggered thus the event might be lost."
                        ]
                    },
                    {
                        "name": "LastRuntimeUpgrade",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 159
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                        ]
                    },
                    {
                        "name": "UpgradedToU32RefCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                        ]
                    },
                    {
                        "name": "UpgradedToTripleRefCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                            " (default) if not."
                        ]
                    },
                    {
                        "name": "ExecutionPhase",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 156
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The execution phase of the block."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 161
            },
            "events": {
                "type": 20
            },
            "constants": [
                {
                    "name": "BlockWeights",
                    "type": 165,
                    "value": [
                        7,
                        208,
                        66,
                        95,
                        105,
                        1,
                        0,
                        11,
                        0,
                        32,
                        74,
                        169,
                        209,
                        1,
                        2,
                        0,
                        64,
                        1,
                        130,
                        93,
                        86,
                        23,
                        0,
                        1,
                        11,
                        160,
                        56,
                        10,
                        145,
                        88,
                        1,
                        206,
                        204,
                        236,
                        0,
                        1,
                        11,
                        0,
                        152,
                        247,
                        62,
                        93,
                        1,
                        2,
                        0,
                        240,
                        0,
                        1,
                        0,
                        0,
                        130,
                        93,
                        86,
                        23,
                        0,
                        1,
                        11,
                        160,
                        192,
                        92,
                        251,
                        204,
                        1,
                        206,
                        204,
                        60,
                        1,
                        1,
                        11,
                        0,
                        32,
                        74,
                        169,
                        209,
                        1,
                        2,
                        0,
                        64,
                        1,
                        1,
                        7,
                        0,
                        136,
                        82,
                        106,
                        116,
                        2,
                        0,
                        80,
                        0,
                        130,
                        93,
                        86,
                        23,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Block & extrinsics weights: base values and limits."
                    ]
                },
                {
                    "name": "BlockLength",
                    "type": 169,
                    "value": [
                        0,
                        0,
                        60,
                        0,
                        0,
                        0,
                        80,
                        0,
                        0,
                        0,
                        80,
                        0
                    ],
                    "docs": [
                        " The maximum length of a block (in bytes)."
                    ]
                },
                {
                    "name": "BlockHashCount",
                    "type": 4,
                    "value": [
                        0,
                        16,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
                    ]
                },
                {
                    "name": "DbWeight",
                    "type": 171,
                    "value": [
                        56,
                        202,
                        56,
                        1,
                        0,
                        0,
                        0,
                        0,
                        152,
                        170,
                        249,
                        4,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The weight of runtime database operations the runtime can invoke."
                    ]
                },
                {
                    "name": "Version",
                    "type": 172,
                    "value": [
                        32,
                        112,
                        111,
                        108,
                        107,
                        97,
                        100,
                        111,
                        116,
                        60,
                        112,
                        97,
                        114,
                        105,
                        116,
                        121,
                        45,
                        112,
                        111,
                        108,
                        107,
                        97,
                        100,
                        111,
                        116,
                        0,
                        0,
                        0,
                        0,
                        144,
                        36,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        64,
                        223,
                        106,
                        203,
                        104,
                        153,
                        7,
                        96,
                        155,
                        4,
                        0,
                        0,
                        0,
                        55,
                        227,
                        151,
                        252,
                        124,
                        145,
                        245,
                        228,
                        1,
                        0,
                        0,
                        0,
                        64,
                        254,
                        58,
                        212,
                        1,
                        248,
                        149,
                        154,
                        6,
                        0,
                        0,
                        0,
                        23,
                        166,
                        188,
                        13,
                        0,
                        98,
                        174,
                        179,
                        1,
                        0,
                        0,
                        0,
                        210,
                        188,
                        152,
                        151,
                        238,
                        208,
                        143,
                        21,
                        3,
                        0,
                        0,
                        0,
                        247,
                        139,
                        39,
                        139,
                        229,
                        63,
                        69,
                        76,
                        2,
                        0,
                        0,
                        0,
                        175,
                        44,
                        2,
                        151,
                        162,
                        62,
                        109,
                        61,
                        2,
                        0,
                        0,
                        0,
                        73,
                        234,
                        175,
                        27,
                        84,
                        138,
                        12,
                        176,
                        1,
                        0,
                        0,
                        0,
                        145,
                        213,
                        223,
                        24,
                        176,
                        210,
                        207,
                        88,
                        1,
                        0,
                        0,
                        0,
                        237,
                        153,
                        197,
                        172,
                        178,
                        94,
                        237,
                        245,
                        3,
                        0,
                        0,
                        0,
                        203,
                        202,
                        37,
                        227,
                        159,
                        20,
                        35,
                        135,
                        2,
                        0,
                        0,
                        0,
                        104,
                        122,
                        212,
                        74,
                        211,
                        127,
                        3,
                        194,
                        1,
                        0,
                        0,
                        0,
                        171,
                        60,
                        5,
                        114,
                        41,
                        31,
                        235,
                        139,
                        1,
                        0,
                        0,
                        0,
                        188,
                        157,
                        137,
                        144,
                        79,
                        91,
                        146,
                        63,
                        1,
                        0,
                        0,
                        0,
                        55,
                        200,
                        187,
                        19,
                        80,
                        169,
                        162,
                        168,
                        2,
                        0,
                        0,
                        0,
                        243,
                        255,
                        20,
                        213,
                        171,
                        82,
                        112,
                        89,
                        2,
                        0,
                        0,
                        0,
                        19,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Get the chain's current version."
                    ]
                },
                {
                    "name": "SS58Prefix",
                    "type": 80,
                    "value": [
                        0,
                        0
                    ],
                    "docs": [
                        " The designated SS58 prefix of this chain.",
                        "",
                        " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                        " that the runtime should know about the prefix in order to make use of it as",
                        " an identifier of the chain."
                    ]
                }
            ],
            "errors": {
                "type": 176
            },
            "index": 0
        },
        {
            "name": "Scheduler",
            "storage": {
                "prefix": "Scheduler",
                "items": [
                    {
                        "name": "IncompleteSince",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "Agenda",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 177
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Items to be executed, indexed by the block number that they should be executed on."
                        ]
                    },
                    {
                        "name": "Lookup",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 1,
                                "value": 30
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Lookup from a name to the block number and index of the task.",
                            "",
                            " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                            " identities."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 182
            },
            "events": {
                "type": 29
            },
            "constants": [
                {
                    "name": "MaximumWeight",
                    "type": 8,
                    "value": [
                        11,
                        0,
                        128,
                        110,
                        135,
                        116,
                        1,
                        2,
                        0,
                        0,
                        1
                    ],
                    "docs": [
                        " The maximum weight that may be scheduled per block for any dispatchables."
                    ]
                },
                {
                    "name": "MaxScheduledPerBlock",
                    "type": 4,
                    "value": [
                        50,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of scheduled calls in the queue for a single block."
                    ]
                }
            ],
            "errors": {
                "type": 450
            },
            "index": 1
        },
        {
            "name": "Preimage",
            "storage": {
                "prefix": "Preimage",
                "items": [
                    {
                        "name": "StatusFor",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 451
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The request status of a given hash."
                        ]
                    },
                    {
                        "name": "PreimageFor",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 453,
                                "value": 454
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    }
                ]
            },
            "calls": {
                "type": 184
            },
            "events": {
                "type": 34
            },
            "constants": [],
            "errors": {
                "type": 455
            },
            "index": 10
        },
        {
            "name": "Babe",
            "storage": {
                "prefix": "Babe",
                "items": [
                    {
                        "name": "EpochIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 10
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Current epoch index."
                        ]
                    },
                    {
                        "name": "Authorities",
                        "modifier": "Default",
                        "type": {
                            "Plain": 456
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Current epoch authorities."
                        ]
                    },
                    {
                        "name": "GenesisSlot",
                        "modifier": "Default",
                        "type": {
                            "Plain": 190
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The slot at which the first epoch actually started. This is 0",
                            " until the first block of the chain."
                        ]
                    },
                    {
                        "name": "CurrentSlot",
                        "modifier": "Default",
                        "type": {
                            "Plain": 190
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Current slot number."
                        ]
                    },
                    {
                        "name": "Randomness",
                        "modifier": "Default",
                        "type": {
                            "Plain": 1
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The epoch randomness for the *current* epoch.",
                            "",
                            " # Security",
                            "",
                            " This MUST NOT be used for gambling, as it can be influenced by a",
                            " malicious validator in the short term. It MAY be used in many",
                            " cryptographic protocols, however, so long as one remembers that this",
                            " (like everything else on-chain) it is public. For example, it can be",
                            " used where a number is needed that cannot have been chosen by an",
                            " adversary, for purposes such as public-coin zero-knowledge proofs."
                        ]
                    },
                    {
                        "name": "PendingEpochConfigChange",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 192
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Pending epoch configuration change that will be applied when the next epoch is enacted."
                        ]
                    },
                    {
                        "name": "NextRandomness",
                        "modifier": "Default",
                        "type": {
                            "Plain": 1
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Next epoch randomness."
                        ]
                    },
                    {
                        "name": "NextAuthorities",
                        "modifier": "Default",
                        "type": {
                            "Plain": 456
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Next epoch authorities."
                        ]
                    },
                    {
                        "name": "SegmentIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Randomness under construction.",
                            "",
                            " We make a trade-off between storage accesses and list length.",
                            " We store the under-construction randomness in segments of up to",
                            " `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.",
                            "",
                            " Once a segment reaches this length, we begin the next one.",
                            " We reset all segments and return to `0` at the beginning of every",
                            " epoch."
                        ]
                    },
                    {
                        "name": "UnderConstruction",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 459
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay."
                        ]
                    },
                    {
                        "name": "Initialized",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 461
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Temporary value (cleared at block finalization) which is `Some`",
                            " if per-block initialization has already been called for current block."
                        ]
                    },
                    {
                        "name": "AuthorVrfRandomness",
                        "modifier": "Default",
                        "type": {
                            "Plain": 31
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " This field should always be populated during block processing unless",
                            " secondary plain slots are enabled (which don't contain a VRF output).",
                            "",
                            " It is set in `on_finalize`, before it will contain the value from the last block."
                        ]
                    },
                    {
                        "name": "EpochStart",
                        "modifier": "Default",
                        "type": {
                            "Plain": 30
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The block numbers when the last and current epoch have started, respectively `N-1` and",
                            " `N`.",
                            " NOTE: We track this is in order to annotate the block number when a given pool of",
                            " entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in",
                            " slots, which may be skipped, the block numbers may not line up with the slot numbers."
                        ]
                    },
                    {
                        "name": "Lateness",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " How late the current block is compared to its parent.",
                            "",
                            " This entry is populated as part of block execution and is cleaned up",
                            " on block finalization. Querying this storage entry outside of block",
                            " execution context should always yield zero."
                        ]
                    },
                    {
                        "name": "EpochConfig",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 466
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The configuration for the current epoch. Should never be `None` as it is initialized in",
                            " genesis."
                        ]
                    },
                    {
                        "name": "NextEpochConfig",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 466
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The configuration for the next epoch, `None` if the config will not change",
                            " (you can fallback to `EpochConfig` instead in that case)."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 185
            },
            "events": null,
            "constants": [
                {
                    "name": "EpochDuration",
                    "type": 10,
                    "value": [
                        96,
                        9,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount of time, in slots, that each epoch should last.",
                        " NOTE: Currently it is not possible to change the epoch duration after",
                        " the chain has started. Attempting to do so will brick block production."
                    ]
                },
                {
                    "name": "ExpectedBlockTime",
                    "type": 10,
                    "value": [
                        112,
                        23,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The expected average block time at which BABE should be creating",
                        " blocks. Since BABE is probabilistic it is not trivial to figure out",
                        " what the expected average block time should be based on the slot",
                        " duration and the security parameter `c` (where `1 - c` represents",
                        " the probability of a slot being empty)."
                    ]
                },
                {
                    "name": "MaxAuthorities",
                    "type": 4,
                    "value": [
                        160,
                        134,
                        1,
                        0
                    ],
                    "docs": [
                        " Max number of authorities allowed"
                    ]
                }
            ],
            "errors": {
                "type": 467
            },
            "index": 2
        },
        {
            "name": "Timestamp",
            "storage": {
                "prefix": "Timestamp",
                "items": [
                    {
                        "name": "Now",
                        "modifier": "Default",
                        "type": {
                            "Plain": 10
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Current time for the current block."
                        ]
                    },
                    {
                        "name": "DidUpdate",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Did the timestamp get updated in this block?"
                        ]
                    }
                ]
            },
            "calls": {
                "type": 195
            },
            "events": null,
            "constants": [
                {
                    "name": "MinimumPeriod",
                    "type": 10,
                    "value": [
                        184,
                        11,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum period between blocks. Beware that this is different to the *expected*",
                        " period that the block production apparatus provides. Your chosen consensus system will",
                        " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
                        " double this period on default settings."
                    ]
                }
            ],
            "errors": null,
            "index": 3
        },
        {
            "name": "Indices",
            "storage": {
                "prefix": "Indices",
                "items": [
                    {
                        "name": "Accounts",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 468
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The lookup from index to account."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 196
            },
            "events": {
                "type": 35
            },
            "constants": [
                {
                    "name": "Deposit",
                    "type": 6,
                    "value": [
                        0,
                        232,
                        118,
                        72,
                        23,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The deposit needed for reserving an index."
                    ]
                }
            ],
            "errors": {
                "type": 469
            },
            "index": 4
        },
        {
            "name": "Balances",
            "storage": {
                "prefix": "Balances",
                "items": [
                    {
                        "name": "TotalIssuance",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The total units issued in the system."
                        ]
                    },
                    {
                        "name": "InactiveIssuance",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The total units of outstanding deactivated balance in the system."
                        ]
                    },
                    {
                        "name": "Account",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 5
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The Balances pallet example of storing the balance of an account.",
                            "",
                            " # Example",
                            "",
                            " ```nocompile",
                            "  impl pallet_balances::Config for Runtime {",
                            "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                            "  }",
                            " ```",
                            "",
                            " You can also store the balance of an account in the `System` pallet.",
                            "",
                            " # Example",
                            "",
                            " ```nocompile",
                            "  impl pallet_balances::Config for Runtime {",
                            "   type AccountStore = System",
                            "  }",
                            " ```",
                            "",
                            " But this comes with tradeoffs, storing account balances in the system pallet stores",
                            " `frame_system` data alongside the account data contrary to storing account balances in the",
                            " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                            " NOTE: This is only used in the case that this pallet is used to store balances."
                        ]
                    },
                    {
                        "name": "Locks",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 470
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Any liquidity locks on some account balances.",
                            " NOTE: Should only be accessed when setting, changing and freeing a lock."
                        ]
                    },
                    {
                        "name": "Reserves",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 474
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Named reserves on some account balances."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 199
            },
            "events": {
                "type": 36
            },
            "constants": [
                {
                    "name": "ExistentialDeposit",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum amount required to keep an account open."
                    ]
                },
                {
                    "name": "MaxLocks",
                    "type": 4,
                    "value": [
                        50,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of locks that should exist on an account.",
                        " Not strictly enforced, but used for weight estimation."
                    ]
                },
                {
                    "name": "MaxReserves",
                    "type": 4,
                    "value": [
                        50,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of named reserves that can exist on an account."
                    ]
                }
            ],
            "errors": {
                "type": 477
            },
            "index": 5
        },
        {
            "name": "TransactionPayment",
            "storage": {
                "prefix": "TransactionPayment",
                "items": [
                    {
                        "name": "NextFeeMultiplier",
                        "modifier": "Default",
                        "type": {
                            "Plain": 478
                        },
                        "fallback": [
                            0,
                            0,
                            100,
                            167,
                            179,
                            182,
                            224,
                            13,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "StorageVersion",
                        "modifier": "Default",
                        "type": {
                            "Plain": 479
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    }
                ]
            },
            "calls": null,
            "events": {
                "type": 38
            },
            "constants": [
                {
                    "name": "OperationalFeeMultiplier",
                    "type": 2,
                    "value": [
                        5
                    ],
                    "docs": [
                        " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                        " `priority`",
                        "",
                        " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
                        " added to a tip component in regular `priority` calculations.",
                        " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                        " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                        "",
                        " ```rust,ignore",
                        " // For `Normal`",
                        " let priority = priority_calc(tip);",
                        "",
                        " // For `Operational`",
                        " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                        " let priority = priority_calc(tip + virtual_tip);",
                        " ```",
                        "",
                        " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                        " sent with the transaction. So, not only does the transaction get a priority bump based",
                        " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                        " transactions."
                    ]
                }
            ],
            "errors": null,
            "index": 32
        },
        {
            "name": "Authorship",
            "storage": {
                "prefix": "Authorship",
                "items": [
                    {
                        "name": "Uncles",
                        "modifier": "Default",
                        "type": {
                            "Plain": 480
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Uncles"
                        ]
                    },
                    {
                        "name": "Author",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 0
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Author of current block."
                        ]
                    },
                    {
                        "name": "DidSetUncles",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Whether uncles were already set in this block."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 200
            },
            "events": null,
            "constants": [
                {
                    "name": "UncleGenerations",
                    "type": 4,
                    "value": [
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The number of blocks back we should accept uncles.",
                        " This means that we will deal with uncle-parents that are",
                        " `UncleGenerations + 1` before `now`."
                    ]
                }
            ],
            "errors": {
                "type": 483
            },
            "index": 6
        },
        {
            "name": "Staking",
            "storage": {
                "prefix": "Staking",
                "items": [
                    {
                        "name": "ValidatorCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The ideal number of active validators."
                        ]
                    },
                    {
                        "name": "MinimumValidatorCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Minimum number of staking participants before emergency conditions are imposed."
                        ]
                    },
                    {
                        "name": "Invulnerables",
                        "modifier": "Default",
                        "type": {
                            "Plain": 206
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Any validators that may never be slashed or forcibly kicked. It's a Vec since they're",
                            " easy to initialize and the performance hit is minimal (we expect no more than four",
                            " invulnerables) and restricted to testnets."
                        ]
                    },
                    {
                        "name": "Bonded",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 0
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Map from all locked \"stash\" accounts to the controller account."
                        ]
                    },
                    {
                        "name": "MinNominatorBond",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The minimum active bond to become and maintain the role of a nominator."
                        ]
                    },
                    {
                        "name": "MinValidatorBond",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The minimum active bond to become and maintain the role of a validator."
                        ]
                    },
                    {
                        "name": "MinimumActiveStake",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The minimum active nominator stake of the last successful election."
                        ]
                    },
                    {
                        "name": "MinCommission",
                        "modifier": "Default",
                        "type": {
                            "Plain": 40
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The minimum amount of commission that validators can set.",
                            "",
                            " If set to `0`, no limit exists."
                        ]
                    },
                    {
                        "name": "Ledger",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 484
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Map from all (unlocked) \"controller\" accounts to the info regarding the staking."
                        ]
                    },
                    {
                        "name": "Payee",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 203
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Where the reward payment should be made. Keyed by stash."
                        ]
                    },
                    {
                        "name": "Validators",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 41
                            }
                        },
                        "fallback": [
                            0,
                            0
                        ],
                        "docs": [
                            " The map from (wannabe) validator stash key to the preferences of that validator."
                        ]
                    },
                    {
                        "name": "CounterForValidators",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "MaxValidatorsCount",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The maximum validator count before we stop allowing new validators to join.",
                            "",
                            " When this value is not set, no limits are enforced."
                        ]
                    },
                    {
                        "name": "Nominators",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 489
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The map from nominator stash key to their nomination preferences, namely the validators that",
                            " they wish to support.",
                            "",
                            " Note that the keys of this storage map might become non-decodable in case the",
                            " [`Config::MaxNominations`] configuration is decreased. In this rare case, these nominators",
                            " are still existent in storage, their key is correct and retrievable (i.e. `contains_key`",
                            " indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable",
                            " nominators will effectively not-exist, until they re-submit their preferences such that it",
                            " is within the bounds of the newly set `Config::MaxNominations`.",
                            "",
                            " This implies that `::iter_keys().count()` and `::iter().count()` might return different",
                            " values for this map. Moreover, the main `::count()` is aligned with the former, namely the",
                            " number of keys that exist.",
                            "",
                            " Lastly, if any of the nominators become non-decodable, they can be chilled immediately via",
                            " [`Call::chill_other`] dispatchable by anyone."
                        ]
                    },
                    {
                        "name": "CounterForNominators",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "MaxNominatorsCount",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The maximum nominator count before we stop allowing new validators to join.",
                            "",
                            " When this value is not set, no limits are enforced."
                        ]
                    },
                    {
                        "name": "CurrentEra",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current era index.",
                            "",
                            " This is the latest planned era, depending on how the Session pallet queues the validator",
                            " set, it might be active or not."
                        ]
                    },
                    {
                        "name": "ActiveEra",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 491
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The active era information, it holds index and start.",
                            "",
                            " The active era is the era being currently rewarded. Validator set of this era must be",
                            " equal to [`SessionInterface::validators`]."
                        ]
                    },
                    {
                        "name": "ErasStartSessionIndex",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The session index at which the era start for the last `HISTORY_DEPTH` eras.",
                            "",
                            " Note: This tracks the starting session (i.e. session index when era start being active)",
                            " for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`."
                        ]
                    },
                    {
                        "name": "ErasStakers",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 57
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Exposure of validator at era.",
                            "",
                            " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                            "",
                            " Is it removed after `HISTORY_DEPTH` eras.",
                            " If stakers hasn't been set or has been removed then empty exposure is returned."
                        ]
                    },
                    {
                        "name": "ErasStakersClipped",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 57
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Clipped Exposure of validator at era.",
                            "",
                            " This is similar to [`ErasStakers`] but number of nominators exposed is reduced to the",
                            " `T::MaxNominatorRewardedPerValidator` biggest stakers.",
                            " (Note: the field `total` and `own` of the exposure remains unchanged).",
                            " This is used to limit the i/o cost for the nominator payout.",
                            "",
                            " This is keyed fist by the era index to allow bulk deletion and then the stash account.",
                            "",
                            " Is it removed after `HISTORY_DEPTH` eras.",
                            " If stakers hasn't been set or has been removed then empty exposure is returned."
                        ]
                    },
                    {
                        "name": "ErasValidatorPrefs",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 41
                            }
                        },
                        "fallback": [
                            0,
                            0
                        ],
                        "docs": [
                            " Similar to `ErasStakers`, this holds the preferences of validators.",
                            "",
                            " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                            "",
                            " Is it removed after `HISTORY_DEPTH` eras."
                        ]
                    },
                    {
                        "name": "ErasValidatorReward",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The total validator era payout for the last `HISTORY_DEPTH` eras.",
                            "",
                            " Eras that haven't finished yet or has been removed doesn't have reward."
                        ]
                    },
                    {
                        "name": "ErasRewardPoints",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 494
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Rewards for the last `HISTORY_DEPTH` eras.",
                            " If reward hasn't been set or has been removed then 0 reward is returned."
                        ]
                    },
                    {
                        "name": "ErasTotalStake",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The total amount staked for the last `HISTORY_DEPTH` eras.",
                            " If total hasn't been set or has been removed then 0 stake is returned."
                        ]
                    },
                    {
                        "name": "ForceEra",
                        "modifier": "Default",
                        "type": {
                            "Plain": 498
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Mode of era forcing."
                        ]
                    },
                    {
                        "name": "SlashRewardFraction",
                        "modifier": "Default",
                        "type": {
                            "Plain": 40
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The percentage of the slash that is distributed to reporters.",
                            "",
                            " The rest of the slashed value is handled by the `Slash`."
                        ]
                    },
                    {
                        "name": "CanceledSlashPayout",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The amount of currency given to reporters of a slash event which was",
                            " canceled by extraordinary circumstances (e.g. governance)."
                        ]
                    },
                    {
                        "name": "UnappliedSlashes",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 499
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All unapplied slashes that are queued for later."
                        ]
                    },
                    {
                        "name": "BondedEras",
                        "modifier": "Default",
                        "type": {
                            "Plain": 158
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A mapping from still-bonded eras to the first session index of that era.",
                            "",
                            " Must contains information for eras for the range:",
                            " `[active_era - bounding_duration; active_era]`"
                        ]
                    },
                    {
                        "name": "ValidatorSlashInEra",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 501
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All slashing events on validators, mapped by era to the highest slash proportion",
                            " and slash value of the era."
                        ]
                    },
                    {
                        "name": "NominatorSlashInEra",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All slashing events on nominators, mapped by era to the highest slash value of the era."
                        ]
                    },
                    {
                        "name": "SlashingSpans",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 502
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Slashing spans for stash accounts."
                        ]
                    },
                    {
                        "name": "SpanSlash",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 497,
                                "value": 503
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Records information about the maximum slash of a stash within a slashing span,",
                            " as well as how much reward has been paid out."
                        ]
                    },
                    {
                        "name": "CurrentPlannedSession",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The last planned session scheduled by the session pallet.",
                            "",
                            " This is basically in sync with the call to [`pallet_session::SessionManager::new_session`]."
                        ]
                    },
                    {
                        "name": "OffendingValidators",
                        "modifier": "Default",
                        "type": {
                            "Plain": 504
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Indices of validators that have offended in the active era and whether they are currently",
                            " disabled.",
                            "",
                            " This value should be a superset of disabled validators since not all offences lead to the",
                            " validator being disabled (if there was no slash). This is needed to track the percentage of",
                            " validators that have offended in the current era, ensuring a new era is forced if",
                            " `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find",
                            " whether a given validator has previously offended using binary search. It gets cleared when",
                            " the era ends."
                        ]
                    },
                    {
                        "name": "StorageVersion",
                        "modifier": "Default",
                        "type": {
                            "Plain": 506
                        },
                        "fallback": [
                            10
                        ],
                        "docs": [
                            " True if network has been upgraded to this version.",
                            " Storage version of the pallet.",
                            "",
                            " This is set to v7.0.0 for new networks."
                        ]
                    },
                    {
                        "name": "ChillThreshold",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 205
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The threshold for when users can start calling `chill_other` for other validators /",
                            " nominators. The threshold is compared to the actual number of validators / nominators",
                            " (`CountFor*`) in the system compared to the configured max (`Max*Count`)."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 202
            },
            "events": {
                "type": 39
            },
            "constants": [
                {
                    "name": "MaxNominations",
                    "type": 4,
                    "value": [
                        16,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum number of nominations per nominator."
                    ]
                },
                {
                    "name": "HistoryDepth",
                    "type": 4,
                    "value": [
                        84,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of eras to keep in history.",
                        "",
                        " Following information is kept for eras in `[current_era -",
                        " HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`,",
                        " `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`,",
                        " `ErasTotalStake`, `ErasStartSessionIndex`,",
                        " `StakingLedger.claimed_rewards`.",
                        "",
                        " Must be more than the number of eras delayed by session.",
                        " I.e. active era must always be in history. I.e. `active_era >",
                        " current_era - history_depth` must be guaranteed.",
                        "",
                        " If migrating an existing pallet from storage value to config value,",
                        " this should be set to same value or greater as in storage.",
                        "",
                        " Note: `HistoryDepth` is used as the upper bound for the `BoundedVec`",
                        " item `StakingLedger.claimed_rewards`. Setting this value lower than",
                        " the existing value can lead to inconsistencies in the",
                        " `StakingLedger` and will need to be handled properly in a migration.",
                        " The test `reducing_history_depth_abrupt` shows this effect."
                    ]
                },
                {
                    "name": "SessionsPerEra",
                    "type": 4,
                    "value": [
                        6,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of sessions per era."
                    ]
                },
                {
                    "name": "BondingDuration",
                    "type": 4,
                    "value": [
                        28,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of eras that staked funds must remain bonded for."
                    ]
                },
                {
                    "name": "SlashDeferDuration",
                    "type": 4,
                    "value": [
                        27,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of eras that slashes are deferred by, after computation.",
                        "",
                        " This should be less than the bonding duration. Set to 0 if slashes",
                        " should be applied immediately, without opportunity for intervention."
                    ]
                },
                {
                    "name": "MaxNominatorRewardedPerValidator",
                    "type": 4,
                    "value": [
                        0,
                        2,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of nominators rewarded for each validator.",
                        "",
                        " For each validator only the `$MaxNominatorRewardedPerValidator` biggest stakers can",
                        " claim their reward. This used to limit the i/o cost for the nominator payout."
                    ]
                },
                {
                    "name": "MaxUnlockingChunks",
                    "type": 4,
                    "value": [
                        32,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of `unlocking` chunks a [`StakingLedger`] can",
                        " have. Effectively determines how many unique eras a staker may be",
                        " unbonding in.",
                        "",
                        " Note: `MaxUnlockingChunks` is used as the upper bound for the",
                        " `BoundedVec` item `StakingLedger.unlocking`. Setting this value",
                        " lower than the existing value can lead to inconsistencies in the",
                        " `StakingLedger` and will need to be handled properly in a runtime",
                        " migration. The test `reducing_max_unlocking_chunks_abrupt` shows",
                        " this effect."
                    ]
                }
            ],
            "errors": {
                "type": 507
            },
            "index": 7
        },
        {
            "name": "Offences",
            "storage": {
                "prefix": "Offences",
                "items": [
                    {
                        "name": "Reports",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 11,
                                "value": 508
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The primary structure that holds all offence records keyed by report identifiers."
                        ]
                    },
                    {
                        "name": "ConcurrentReportsIndex",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 509,
                                "value": 157
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A vector of reports of the same kind that happened at the same time slot."
                        ]
                    },
                    {
                        "name": "ReportsByKindIndex",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 45,
                                "value": 12
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Enumerates all reports of a kind along with the time they happened.",
                            "",
                            " All reports are sorted by the time of offence.",
                            "",
                            " Note that the actual type of this mapping is `Vec<u8>`, this is because values of",
                            " different types are not supported at the moment so we are doing the manual serialization."
                        ]
                    }
                ]
            },
            "calls": null,
            "events": {
                "type": 44
            },
            "constants": [],
            "errors": null,
            "index": 8
        },
        {
            "name": "Historical",
            "storage": null,
            "calls": null,
            "events": null,
            "constants": [],
            "errors": null,
            "index": 33
        },
        {
            "name": "Session",
            "storage": {
                "prefix": "Session",
                "items": [
                    {
                        "name": "Validators",
                        "modifier": "Default",
                        "type": {
                            "Plain": 206
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current set of validators."
                        ]
                    },
                    {
                        "name": "CurrentIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Current index of the session."
                        ]
                    },
                    {
                        "name": "QueuedChanged",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " True if the underlying economic identities or weighting behind the validators",
                            " has changed in the queued validator set."
                        ]
                    },
                    {
                        "name": "QueuedKeys",
                        "modifier": "Default",
                        "type": {
                            "Plain": 510
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The queued keys for the next session. When the next session begins, these keys",
                            " will be used to determine the validator's session keys."
                        ]
                    },
                    {
                        "name": "DisabledValidators",
                        "modifier": "Default",
                        "type": {
                            "Plain": 94
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Indices of disabled validators.",
                            "",
                            " The vec is always kept sorted so that we can find whether a given validator is",
                            " disabled using binary search. It gets cleared when `on_session_ending` returns",
                            " a new set of identities."
                        ]
                    },
                    {
                        "name": "NextKeys",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 212
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The next session keys for a validator."
                        ]
                    },
                    {
                        "name": "KeyOwner",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 512,
                                "value": 0
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 211
            },
            "events": {
                "type": 46
            },
            "constants": [],
            "errors": {
                "type": 514
            },
            "index": 9
        },
        {
            "name": "Grandpa",
            "storage": {
                "prefix": "Grandpa",
                "items": [
                    {
                        "name": "State",
                        "modifier": "Default",
                        "type": {
                            "Plain": 515
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " State of the current authority set."
                        ]
                    },
                    {
                        "name": "PendingChange",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 516
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Pending change: (signaled at, scheduled change)."
                        ]
                    },
                    {
                        "name": "NextForced",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " next block number where we can force a change."
                        ]
                    },
                    {
                        "name": "Stalled",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 30
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " `true` if we are currently stalled."
                        ]
                    },
                    {
                        "name": "CurrentSetId",
                        "modifier": "Default",
                        "type": {
                            "Plain": 10
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of changes (both in terms of keys and underlying economic responsibilities)",
                            " in the \"set\" of Grandpa validators from genesis."
                        ]
                    },
                    {
                        "name": "SetIdSession",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 10,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                            " members were responsible.",
                            "",
                            " TWOX-NOTE: `SetId` is not under user control."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 216
            },
            "events": {
                "type": 47
            },
            "constants": [
                {
                    "name": "MaxAuthorities",
                    "type": 4,
                    "value": [
                        160,
                        134,
                        1,
                        0
                    ],
                    "docs": [
                        " Max Authorities in use"
                    ]
                }
            ],
            "errors": {
                "type": 518
            },
            "index": 11
        },
        {
            "name": "ImOnline",
            "storage": {
                "prefix": "ImOnline",
                "items": [
                    {
                        "name": "HeartbeatAfter",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The block number after which it's ok to send heartbeats in the current",
                            " session.",
                            "",
                            " At the beginning of each session we set this to a value that should fall",
                            " roughly in the middle of the session duration. The idea is to first wait for",
                            " the validators to produce a block in the current session, so that the",
                            " heartbeat later on will not be necessary.",
                            "",
                            " This value will only be used as a fallback if we fail to get a proper session",
                            " progress estimate from `NextSessionRotation`, as those estimates should be",
                            " more accurate then the value we calculate for `HeartbeatAfter`."
                        ]
                    },
                    {
                        "name": "Keys",
                        "modifier": "Default",
                        "type": {
                            "Plain": 519
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current set of keys that may issue a heartbeat."
                        ]
                    },
                    {
                        "name": "ReceivedHeartbeats",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 30,
                                "value": 521
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " For each session index, we keep a mapping of `SessionIndex` and `AuthIndex` to",
                            " `WrapperOpaque<BoundedOpaqueNetworkState>`."
                        ]
                    },
                    {
                        "name": "AuthoredBlocks",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 493,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " For each session index, we keep a mapping of `ValidatorId<T>` to the",
                            " number of blocks authored by the given authority."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 227
            },
            "events": {
                "type": 52
            },
            "constants": [
                {
                    "name": "UnsignedPriority",
                    "type": 10,
                    "value": [
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255
                    ],
                    "docs": [
                        " A configuration for base priority of unsigned transactions.",
                        "",
                        " This is exposed so that it can be tuned for particular runtime, when",
                        " multiple pallets send unsigned transactions."
                    ]
                }
            ],
            "errors": {
                "type": 526
            },
            "index": 12
        },
        {
            "name": "AuthorityDiscovery",
            "storage": null,
            "calls": null,
            "events": null,
            "constants": [],
            "errors": null,
            "index": 13
        },
        {
            "name": "Democracy",
            "storage": {
                "prefix": "Democracy",
                "items": [
                    {
                        "name": "PublicPropCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of (public) proposals that have been made so far."
                        ]
                    },
                    {
                        "name": "PublicProps",
                        "modifier": "Default",
                        "type": {
                            "Plain": 527
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The public proposals. Unsorted. The second item is the proposal."
                        ]
                    },
                    {
                        "name": "DepositOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 530
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Those who have locked a deposit.",
                            "",
                            " TWOX-NOTE: Safe, as increasing integer keys are safe."
                        ]
                    },
                    {
                        "name": "ReferendumCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The next free referendum index, aka the number of referenda started so far."
                        ]
                    },
                    {
                        "name": "LowestUnbaked",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The lowest referendum index representing an unbaked referendum. Equal to",
                            " `ReferendumCount` if there isn't a unbaked referendum."
                        ]
                    },
                    {
                        "name": "ReferendumInfoOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 532
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Information concerning any given referendum.",
                            "",
                            " TWOX-NOTE: SAFE as indexes are not under an attackerâs control."
                        ]
                    },
                    {
                        "name": "VotingOf",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 535
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " All votes for a particular voter. We store the balance for the number of votes that we",
                            " have recorded. The second item is the total amount of delegations, that will be added.",
                            "",
                            " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
                        ]
                    },
                    {
                        "name": "LastTabledWasExternal",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " True if the last referendum tabled was submitted externally. False if it was a public",
                            " proposal."
                        ]
                    },
                    {
                        "name": "NextExternal",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 541
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The referendum to be tabled whenever it would be valid to table an external proposal.",
                            " This happens when a referendum needs to be tabled and one of two conditions are met:",
                            " - `LastTabledWasExternal` is `false`; or",
                            " - `PublicProps` is empty."
                        ]
                    },
                    {
                        "name": "Blacklist",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 542
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                            " (until when it may not be resubmitted) and who vetoed it."
                        ]
                    },
                    {
                        "name": "Cancellations",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 43
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Record of all proposals that have been subject to emergency cancellation."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 234
            },
            "events": {
                "type": 61
            },
            "constants": [
                {
                    "name": "EnactmentPeriod",
                    "type": 4,
                    "value": [
                        0,
                        39,
                        6,
                        0
                    ],
                    "docs": [
                        " The period between a proposal being approved and enacted.",
                        "",
                        " It should generally be a little more than the unstake period to ensure that",
                        " voting stakers have an opportunity to remove themselves from the system in the case",
                        " where they are on the losing side of a vote."
                    ]
                },
                {
                    "name": "LaunchPeriod",
                    "type": 4,
                    "value": [
                        0,
                        39,
                        6,
                        0
                    ],
                    "docs": [
                        " How often (in blocks) new public referenda are launched."
                    ]
                },
                {
                    "name": "VotingPeriod",
                    "type": 4,
                    "value": [
                        0,
                        39,
                        6,
                        0
                    ],
                    "docs": [
                        " How often (in blocks) to check for new votes."
                    ]
                },
                {
                    "name": "VoteLockingPeriod",
                    "type": 4,
                    "value": [
                        0,
                        39,
                        6,
                        0
                    ],
                    "docs": [
                        " The minimum period of vote locking.",
                        "",
                        " It should be no shorter than enactment period to ensure that in the case of an approval,",
                        " those successful voters are locked into the consequences that their votes entail."
                    ]
                },
                {
                    "name": "MinimumDeposit",
                    "type": 6,
                    "value": [
                        0,
                        16,
                        165,
                        212,
                        232,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum amount to be used as a deposit for a public referendum proposal."
                    ]
                },
                {
                    "name": "InstantAllowed",
                    "type": 43,
                    "value": [
                        1
                    ],
                    "docs": [
                        " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
                        " want to set this permanently to `false`, others may want to condition it on things such",
                        " as an upgrade having happened recently."
                    ]
                },
                {
                    "name": "FastTrackVotingPeriod",
                    "type": 4,
                    "value": [
                        8,
                        7,
                        0,
                        0
                    ],
                    "docs": [
                        " Minimum voting period allowed for a fast-track referendum."
                    ]
                },
                {
                    "name": "CooloffPeriod",
                    "type": 4,
                    "value": [
                        192,
                        137,
                        1,
                        0
                    ],
                    "docs": [
                        " Period in blocks where an external proposal may not be re-submitted after being vetoed."
                    ]
                },
                {
                    "name": "MaxVotes",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of votes for an account.",
                        "",
                        " Also used to compute weight, an overly big value can",
                        " lead to extrinsic with very big weight: see `delegate` for instance."
                    ]
                },
                {
                    "name": "MaxProposals",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of public proposals that can exist at any time."
                    ]
                },
                {
                    "name": "MaxDeposits",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of deposits a public proposal may have at any time."
                    ]
                },
                {
                    "name": "MaxBlacklisted",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of items which can be blacklisted."
                    ]
                }
            ],
            "errors": {
                "type": 543
            },
            "index": 14
        },
        {
            "name": "Council",
            "storage": {
                "prefix": "Council",
                "items": [
                    {
                        "name": "Proposals",
                        "modifier": "Default",
                        "type": {
                            "Plain": 544
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The hashes of the active proposals."
                        ]
                    },
                    {
                        "name": "ProposalOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 181
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Actual proposal for a given hash, if it's current."
                        ]
                    },
                    {
                        "name": "Voting",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 545
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Votes on a given proposal, if it is ongoing."
                        ]
                    },
                    {
                        "name": "ProposalCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Proposals so far."
                        ]
                    },
                    {
                        "name": "Members",
                        "modifier": "Default",
                        "type": {
                            "Plain": 206
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current members of the collective. This is stored sorted (just by value)."
                        ]
                    },
                    {
                        "name": "Prime",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 0
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The prime member that helps determine the default vote behavior in case of absentations."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 237
            },
            "events": {
                "type": 65
            },
            "constants": [],
            "errors": {
                "type": 546
            },
            "index": 15
        },
        {
            "name": "TechnicalCommittee",
            "storage": {
                "prefix": "TechnicalCommittee",
                "items": [
                    {
                        "name": "Proposals",
                        "modifier": "Default",
                        "type": {
                            "Plain": 547
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The hashes of the active proposals."
                        ]
                    },
                    {
                        "name": "ProposalOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 181
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Actual proposal for a given hash, if it's current."
                        ]
                    },
                    {
                        "name": "Voting",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 545
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Votes on a given proposal, if it is ongoing."
                        ]
                    },
                    {
                        "name": "ProposalCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Proposals so far."
                        ]
                    },
                    {
                        "name": "Members",
                        "modifier": "Default",
                        "type": {
                            "Plain": 206
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current members of the collective. This is stored sorted (just by value)."
                        ]
                    },
                    {
                        "name": "Prime",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 0
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The prime member that helps determine the default vote behavior in case of absentations."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 240
            },
            "events": {
                "type": 66
            },
            "constants": [],
            "errors": {
                "type": 548
            },
            "index": 16
        },
        {
            "name": "PhragmenElection",
            "storage": {
                "prefix": "PhragmenElection",
                "items": [
                    {
                        "name": "Members",
                        "modifier": "Default",
                        "type": {
                            "Plain": 549
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current elected members.",
                            "",
                            " Invariant: Always sorted based on account id."
                        ]
                    },
                    {
                        "name": "RunnersUp",
                        "modifier": "Default",
                        "type": {
                            "Plain": 549
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current reserved runners-up.",
                            "",
                            " Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the",
                            " last (i.e. _best_) runner-up will be replaced."
                        ]
                    },
                    {
                        "name": "Candidates",
                        "modifier": "Default",
                        "type": {
                            "Plain": 68
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The present candidate list. A current member or runner-up can never enter this vector",
                            " and is always implicitly assumed to be a candidate.",
                            "",
                            " Second element is the deposit.",
                            "",
                            " Invariant: Always sorted based on account id."
                        ]
                    },
                    {
                        "name": "ElectionRounds",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The total number of vote rounds that have happened, excluding the upcoming one."
                        ]
                    },
                    {
                        "name": "Voting",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 551
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Votes and locked stake of a particular voter.",
                            "",
                            " TWOX-NOTE: SAFE as `AccountId` is a crypto hash."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 241
            },
            "events": {
                "type": 67
            },
            "constants": [
                {
                    "name": "PalletId",
                    "type": 139,
                    "value": [
                        112,
                        104,
                        114,
                        101,
                        108,
                        101,
                        99,
                        116
                    ],
                    "docs": [
                        " Identifier for the elections-phragmen pallet's lock"
                    ]
                },
                {
                    "name": "CandidacyBond",
                    "type": 6,
                    "value": [
                        0,
                        16,
                        165,
                        212,
                        232,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " How much should be locked up in order to submit one's candidacy."
                    ]
                },
                {
                    "name": "VotingBondBase",
                    "type": 6,
                    "value": [
                        0,
                        112,
                        19,
                        183,
                        46,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Base deposit associated with voting.",
                        "",
                        " This should be sensibly high to economically ensure the pallet cannot be attacked by",
                        " creating a gigantic number of votes."
                    ]
                },
                {
                    "name": "VotingBondFactor",
                    "type": 6,
                    "value": [
                        0,
                        208,
                        18,
                        19,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount of bond that need to be locked for each vote (32 bytes)."
                    ]
                },
                {
                    "name": "DesiredMembers",
                    "type": 4,
                    "value": [
                        13,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of members to elect."
                    ]
                },
                {
                    "name": "DesiredRunnersUp",
                    "type": 4,
                    "value": [
                        20,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Number of runners_up to keep."
                    ]
                },
                {
                    "name": "TermDuration",
                    "type": 4,
                    "value": [
                        192,
                        137,
                        1,
                        0
                    ],
                    "docs": [
                        " How long each seat is kept. This defines the next block number at which an election",
                        " round will happen. If set to zero, no elections are ever triggered and the module will",
                        " be in passive mode."
                    ]
                },
                {
                    "name": "MaxCandidates",
                    "type": 4,
                    "value": [
                        232,
                        3,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of candidates in a phragmen election.",
                        "",
                        " Warning: The election happens onchain, and this value will determine",
                        " the size of the election. When this limit is reached no more",
                        " candidates are accepted in the election."
                    ]
                },
                {
                    "name": "MaxVoters",
                    "type": 4,
                    "value": [
                        16,
                        39,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of voters to allow in a phragmen election.",
                        "",
                        " Warning: This impacts the size of the election which is run onchain.",
                        " When the limit is reached the new voters are ignored."
                    ]
                }
            ],
            "errors": {
                "type": 552
            },
            "index": 17
        },
        {
            "name": "TechnicalMembership",
            "storage": {
                "prefix": "TechnicalMembership",
                "items": [
                    {
                        "name": "Members",
                        "modifier": "Default",
                        "type": {
                            "Plain": 553
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current membership, stored as an ordered Vec."
                        ]
                    },
                    {
                        "name": "Prime",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 0
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current prime member, if one exists."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 243
            },
            "events": {
                "type": 70
            },
            "constants": [],
            "errors": {
                "type": 554
            },
            "index": 18
        },
        {
            "name": "Treasury",
            "storage": {
                "prefix": "Treasury",
                "items": [
                    {
                        "name": "ProposalCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of proposals that have been made."
                        ]
                    },
                    {
                        "name": "Proposals",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 555
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Proposals that have been made."
                        ]
                    },
                    {
                        "name": "Inactive",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The amount which has been reported as inactive to Currency."
                        ]
                    },
                    {
                        "name": "Approvals",
                        "modifier": "Default",
                        "type": {
                            "Plain": 556
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Proposal indices that have been approved but not yet awarded."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 244
            },
            "events": {
                "type": 71
            },
            "constants": [
                {
                    "name": "ProposalBond",
                    "type": 557,
                    "value": [
                        80,
                        195,
                        0,
                        0
                    ],
                    "docs": [
                        " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                        " An accepted proposal gets these back. A rejected proposal does not."
                    ]
                },
                {
                    "name": "ProposalBondMinimum",
                    "type": 6,
                    "value": [
                        0,
                        16,
                        165,
                        212,
                        232,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Minimum amount of funds that should be placed in a deposit for making a proposal."
                    ]
                },
                {
                    "name": "ProposalBondMaximum",
                    "type": 558,
                    "value": [
                        1,
                        0,
                        80,
                        57,
                        39,
                        140,
                        4,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum amount of funds that should be placed in a deposit for making a proposal."
                    ]
                },
                {
                    "name": "SpendPeriod",
                    "type": 4,
                    "value": [
                        0,
                        70,
                        5,
                        0
                    ],
                    "docs": [
                        " Period between successive spends."
                    ]
                },
                {
                    "name": "Burn",
                    "type": 557,
                    "value": [
                        16,
                        39,
                        0,
                        0
                    ],
                    "docs": [
                        " Percentage of spare funds (if any) that are burnt per spend period."
                    ]
                },
                {
                    "name": "PalletId",
                    "type": 559,
                    "value": [
                        112,
                        121,
                        47,
                        116,
                        114,
                        115,
                        114,
                        121
                    ],
                    "docs": [
                        " The treasury's pallet id, used for deriving its sovereign account ID."
                    ]
                },
                {
                    "name": "MaxApprovals",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of approvals that can wait in the spending queue.",
                        "",
                        " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
                    ]
                }
            ],
            "errors": {
                "type": 560
            },
            "index": 19
        },
        {
            "name": "Claims",
            "storage": {
                "prefix": "Claims",
                "items": [
                    {
                        "name": "Claims",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 73,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "Total",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "Vesting",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 73,
                                "value": 249
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Vesting schedule for a claim.",
                            " First balance is the total amount that should be held for vesting.",
                            " Second balance is how much should be unlocked per block.",
                            " The block number is when the vesting should start."
                        ]
                    },
                    {
                        "name": "Signing",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 73,
                                "value": 251
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The statement kind that must be signed, if any."
                        ]
                    },
                    {
                        "name": "Preclaims",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 0,
                                "value": 73
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Pre-claimed Ethereum accounts, by the Account ID that they are claimed to."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 245
            },
            "events": {
                "type": 72
            },
            "constants": [
                {
                    "name": "Prefix",
                    "type": 12,
                    "value": [
                        132,
                        80,
                        97,
                        121,
                        32,
                        68,
                        79,
                        84,
                        115,
                        32,
                        116,
                        111,
                        32,
                        116,
                        104,
                        101,
                        32,
                        80,
                        111,
                        108,
                        107,
                        97,
                        100,
                        111,
                        116,
                        32,
                        97,
                        99,
                        99,
                        111,
                        117,
                        110,
                        116,
                        58
                    ],
                    "docs": []
                }
            ],
            "errors": {
                "type": 561
            },
            "index": 24
        },
        {
            "name": "Vesting",
            "storage": {
                "prefix": "Vesting",
                "items": [
                    {
                        "name": "Vesting",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 562
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Information regarding the vesting of a given account."
                        ]
                    },
                    {
                        "name": "StorageVersion",
                        "modifier": "Default",
                        "type": {
                            "Plain": 564
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Storage version of the pallet.",
                            "",
                            " New networks start with latest version, as determined by the genesis build."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 252
            },
            "events": {
                "type": 75
            },
            "constants": [
                {
                    "name": "MinVestedTransfer",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum amount transferred to call `vested_transfer`."
                    ]
                },
                {
                    "name": "MaxVestingSchedules",
                    "type": 4,
                    "value": [
                        28,
                        0,
                        0,
                        0
                    ],
                    "docs": []
                }
            ],
            "errors": {
                "type": 565
            },
            "index": 25
        },
        {
            "name": "Utility",
            "storage": null,
            "calls": {
                "type": 254
            },
            "events": {
                "type": 76
            },
            "constants": [
                {
                    "name": "batched_calls_limit",
                    "type": 4,
                    "value": [
                        170,
                        42,
                        0,
                        0
                    ],
                    "docs": [
                        " The limit on the number of batched calls."
                    ]
                }
            ],
            "errors": {
                "type": 566
            },
            "index": 26
        },
        {
            "name": "Identity",
            "storage": {
                "prefix": "Identity",
                "items": [
                    {
                        "name": "IdentityOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 567
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Information that is pertinent to identify the entity behind an account.",
                            "",
                            " TWOX-NOTE: OK â `AccountId` is a secure hash."
                        ]
                    },
                    {
                        "name": "SuperOf",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 299
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The super-identity of an alternative \"sub\" identity together with its name, within that",
                            " context. If the account is not some other account's sub-identity, then just `None`."
                        ]
                    },
                    {
                        "name": "SubsOf",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 571
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Alternative \"sub\" identities of this account.",
                            "",
                            " The first item is the deposit, the second is a vector of the accounts.",
                            "",
                            " TWOX-NOTE: OK â `AccountId` is a secure hash."
                        ]
                    },
                    {
                        "name": "Registrars",
                        "modifier": "Default",
                        "type": {
                            "Plain": 573
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The set of registrars. Not expected to get very big as can only be added through a",
                            " special origin (likely a council motion).",
                            "",
                            " The index into this can be cast to `RegistrarIndex` to get a valid value."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 263
            },
            "events": {
                "type": 77
            },
            "constants": [
                {
                    "name": "BasicDeposit",
                    "type": 6,
                    "value": [
                        0,
                        125,
                        181,
                        42,
                        47,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit for a registered identity"
                    ]
                },
                {
                    "name": "FieldDeposit",
                    "type": 6,
                    "value": [
                        0,
                        205,
                        86,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit per additional field for a registered identity."
                    ]
                },
                {
                    "name": "SubAccountDeposit",
                    "type": 6,
                    "value": [
                        128,
                        248,
                        132,
                        176,
                        46,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit for a registered subaccount. This should account for the fact",
                        " that one storage item's value will increase by the size of an account ID, and there will",
                        " be another trie item whose value is the size of an account ID plus 32 bytes."
                    ]
                },
                {
                    "name": "MaxSubAccounts",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of sub-accounts allowed per identified account."
                    ]
                },
                {
                    "name": "MaxAdditionalFields",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O",
                        " required to access an identity, but can be pretty high."
                    ]
                },
                {
                    "name": "MaxRegistrars",
                    "type": 4,
                    "value": [
                        20,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
                        " of, e.g., updating judgements."
                    ]
                }
            ],
            "errors": {
                "type": 577
            },
            "index": 28
        },
        {
            "name": "Proxy",
            "storage": {
                "prefix": "Proxy",
                "items": [
                    {
                        "name": "Proxies",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 578
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The set of account proxies. Maps the account which has delegated to the accounts",
                            " which are being delegated to, together with the amount held on deposit."
                        ]
                    },
                    {
                        "name": "Announcements",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 582
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The announcements made by the proxy (key)."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 303
            },
            "events": {
                "type": 78
            },
            "constants": [
                {
                    "name": "ProxyDepositBase",
                    "type": 6,
                    "value": [
                        0,
                        132,
                        178,
                        149,
                        46,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The base amount of currency needed to reserve for creating a proxy.",
                        "",
                        " This is held for an additional storage item whose value size is",
                        " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
                    ]
                },
                {
                    "name": "ProxyDepositFactor",
                    "type": 6,
                    "value": [
                        128,
                        102,
                        171,
                        19,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount of currency needed per proxy added.",
                        "",
                        " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                        " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                        " into account `32 + proxy_type.encode().len()` bytes of data."
                    ]
                },
                {
                    "name": "MaxProxies",
                    "type": 4,
                    "value": [
                        32,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum amount of proxies allowed for a single account."
                    ]
                },
                {
                    "name": "MaxPending",
                    "type": 4,
                    "value": [
                        32,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum amount of time-delayed announcements that are allowed to be pending."
                    ]
                },
                {
                    "name": "AnnouncementDepositBase",
                    "type": 6,
                    "value": [
                        0,
                        132,
                        178,
                        149,
                        46,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The base amount of currency needed to reserve for creating an announcement.",
                        "",
                        " This is held when a new storage item holding a `Balance` is created (typically 16",
                        " bytes)."
                    ]
                },
                {
                    "name": "AnnouncementDepositFactor",
                    "type": 6,
                    "value": [
                        0,
                        205,
                        86,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount of currency needed per announcement made.",
                        "",
                        " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                        " into a pre-existing storage value."
                    ]
                }
            ],
            "errors": {
                "type": 586
            },
            "index": 29
        },
        {
            "name": "Multisig",
            "storage": {
                "prefix": "Multisig",
                "items": [
                    {
                        "name": "Multisigs",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 587,
                                "value": 588
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The set of open multisig operations."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 305
            },
            "events": {
                "type": 81
            },
            "constants": [
                {
                    "name": "DepositBase",
                    "type": 6,
                    "value": [
                        0,
                        140,
                        97,
                        197,
                        46,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The base amount of currency needed to reserve for creating a multisig execution or to",
                        " store a dispatch call for later.",
                        "",
                        " This is held for an additional storage item whose value size is",
                        " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                        " `32 + sizeof(AccountId)` bytes."
                    ]
                },
                {
                    "name": "DepositFactor",
                    "type": 6,
                    "value": [
                        0,
                        208,
                        18,
                        19,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount of currency needed per unit threshold when creating a multisig execution.",
                        "",
                        " This is held for adding 32 bytes more into a pre-existing storage value."
                    ]
                },
                {
                    "name": "MaxSignatories",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum amount of signatories allowed in the multisig."
                    ]
                }
            ],
            "errors": {
                "type": 590
            },
            "index": 30
        },
        {
            "name": "Bounties",
            "storage": {
                "prefix": "Bounties",
                "items": [
                    {
                        "name": "BountyCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of bounty proposals that have been made."
                        ]
                    },
                    {
                        "name": "Bounties",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 591
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Bounties that have been made."
                        ]
                    },
                    {
                        "name": "BountyDescriptions",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 593
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The description of each bounty."
                        ]
                    },
                    {
                        "name": "BountyApprovals",
                        "modifier": "Default",
                        "type": {
                            "Plain": 556
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Bounty indices that have been approved but not yet funded."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 307
            },
            "events": {
                "type": 83
            },
            "constants": [
                {
                    "name": "BountyDepositBase",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit for placing a bounty proposal."
                    ]
                },
                {
                    "name": "BountyDepositPayoutDelay",
                    "type": 4,
                    "value": [
                        0,
                        194,
                        1,
                        0
                    ],
                    "docs": [
                        " The delay period for which a bounty beneficiary need to wait before claim the payout."
                    ]
                },
                {
                    "name": "BountyUpdatePeriod",
                    "type": 4,
                    "value": [
                        128,
                        198,
                        19,
                        0
                    ],
                    "docs": [
                        " Bounty duration in blocks."
                    ]
                },
                {
                    "name": "CuratorDepositMultiplier",
                    "type": 557,
                    "value": [
                        32,
                        161,
                        7,
                        0
                    ],
                    "docs": [
                        " The curator deposit is calculated as a percentage of the curator fee.",
                        "",
                        " This deposit has optional upper and lower bounds with `CuratorDepositMax` and",
                        " `CuratorDepositMin`."
                    ]
                },
                {
                    "name": "CuratorDepositMax",
                    "type": 558,
                    "value": [
                        1,
                        0,
                        32,
                        74,
                        169,
                        209,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum amount of funds that should be placed in a deposit for making a proposal."
                    ]
                },
                {
                    "name": "CuratorDepositMin",
                    "type": 558,
                    "value": [
                        1,
                        0,
                        232,
                        118,
                        72,
                        23,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Minimum amount of funds that should be placed in a deposit for making a proposal."
                    ]
                },
                {
                    "name": "BountyValueMinimum",
                    "type": 6,
                    "value": [
                        0,
                        232,
                        118,
                        72,
                        23,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Minimum value for a bounty."
                    ]
                },
                {
                    "name": "DataDepositPerByte",
                    "type": 6,
                    "value": [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit per byte within the tip report reason or bounty description."
                    ]
                },
                {
                    "name": "MaximumReasonLength",
                    "type": 4,
                    "value": [
                        0,
                        64,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum acceptable reason length.",
                        "",
                        " Benchmarks depend on this value, be sure to update weights file when changing this value"
                    ]
                }
            ],
            "errors": {
                "type": 594
            },
            "index": 34
        },
        {
            "name": "ChildBounties",
            "storage": {
                "prefix": "ChildBounties",
                "items": [
                    {
                        "name": "ChildBountyCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of total child bounties."
                        ]
                    },
                    {
                        "name": "ParentChildBounties",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of child bounties per parent bounty.",
                            " Map of parent bounty index to number of child bounties."
                        ]
                    },
                    {
                        "name": "ChildBounties",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 30,
                                "value": 595
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Child bounties that have been added."
                        ]
                    },
                    {
                        "name": "ChildBountyDescriptions",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 593
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The description of each child-bounty."
                        ]
                    },
                    {
                        "name": "ChildrenCuratorFees",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The cumulative child-bounty curator fee for each parent bounty."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 308
            },
            "events": {
                "type": 84
            },
            "constants": [
                {
                    "name": "MaxActiveChildBountyCount",
                    "type": 4,
                    "value": [
                        100,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum number of child bounties that can be added to a parent bounty."
                    ]
                },
                {
                    "name": "ChildBountyValueMinimum",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Minimum value for a child-bounty."
                    ]
                }
            ],
            "errors": {
                "type": 597
            },
            "index": 38
        },
        {
            "name": "Tips",
            "storage": {
                "prefix": "Tips",
                "items": [
                    {
                        "name": "Tips",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 11,
                                "value": 598
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " TipsMap that are not yet completed. Keyed by the hash of `(reason, who)` from the value.",
                            " This has the insecure enumerable hash function since the key itself is already",
                            " guaranteed to be a secure hash."
                        ]
                    },
                    {
                        "name": "Reasons",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 12
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Simple preimage lookup from the reason's hash to the original data. Again, has an",
                            " insecure enumerable hash since the key is guaranteed to be the result of a secure hash."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 309
            },
            "events": {
                "type": 85
            },
            "constants": [
                {
                    "name": "MaximumReasonLength",
                    "type": 4,
                    "value": [
                        0,
                        64,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum acceptable reason length.",
                        "",
                        " Benchmarks depend on this value, be sure to update weights file when changing this value"
                    ]
                },
                {
                    "name": "DataDepositPerByte",
                    "type": 6,
                    "value": [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit per byte within the tip report reason or bounty description."
                    ]
                },
                {
                    "name": "TipCountdown",
                    "type": 4,
                    "value": [
                        64,
                        56,
                        0,
                        0
                    ],
                    "docs": [
                        " The period for which a tip remains open after is has achieved threshold tippers."
                    ]
                },
                {
                    "name": "TipFindersFee",
                    "type": 205,
                    "value": [
                        20
                    ],
                    "docs": [
                        " The percent of the final tip which goes to the original reporter of the tip."
                    ]
                },
                {
                    "name": "TipReportDepositBase",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The amount held on deposit for placing a tip report."
                    ]
                }
            ],
            "errors": {
                "type": 599
            },
            "index": 35
        },
        {
            "name": "ElectionProviderMultiPhase",
            "storage": {
                "prefix": "ElectionProviderMultiPhase",
                "items": [
                    {
                        "name": "Round",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            1,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Internal counter for the number of rounds.",
                            "",
                            " This is useful for de-duplication of transactions submitted to the pool, and general",
                            " diagnostics of the pallet.",
                            "",
                            " This is merely incremented once per every time that an upstream `elect` is called."
                        ]
                    },
                    {
                        "name": "CurrentPhase",
                        "modifier": "Default",
                        "type": {
                            "Plain": 600
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Current phase."
                        ]
                    },
                    {
                        "name": "QueuedSolution",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 602
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Current best solution, signed or unsigned, queued to be returned upon `elect`."
                        ]
                    },
                    {
                        "name": "Snapshot",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 604
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Snapshot data of the round.",
                            "",
                            " This is created at the beginning of the signed phase and cleared upon calling `elect`."
                        ]
                    },
                    {
                        "name": "DesiredTargets",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Desired number of targets to elect for this round.",
                            "",
                            " Only exists when [`Snapshot`] is present."
                        ]
                    },
                    {
                        "name": "SnapshotMetadata",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 363
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The metadata of the [`RoundSnapshot`]",
                            "",
                            " Only exists when [`Snapshot`] is present."
                        ]
                    },
                    {
                        "name": "SignedSubmissionNextIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The next index to be assigned to an incoming signed submission.",
                            "",
                            " Every accepted submission is assigned a unique index; that index is bound to that particular",
                            " submission for the duration of the election. On election finalization, the next index is",
                            " reset to 0.",
                            "",
                            " We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its",
                            " capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`,",
                            " because iteration is slow. Instead, we store the value here."
                        ]
                    },
                    {
                        "name": "SignedSubmissionIndices",
                        "modifier": "Default",
                        "type": {
                            "Plain": 607
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a",
                            " value in `SignedSubmissions`.",
                            "",
                            " We never need to process more than a single signed submission at a time. Signed submissions",
                            " can be quite large, so we're willing to pay the cost of multiple database accesses to access",
                            " them one at a time instead of reading and decoding all of them at once."
                        ]
                    },
                    {
                        "name": "SignedSubmissionsMap",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 610
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Unchecked, signed solutions.",
                            "",
                            " Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while",
                            " allowing us to keep only a single one in memory at a time.",
                            "",
                            " Twox note: the key of the map is an auto-incrementing index which users cannot inspect or",
                            " affect; we shouldn't need a cryptographically secure hasher."
                        ]
                    },
                    {
                        "name": "MinimumUntrustedScore",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 88
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The minimum score that each 'untrusted' solution must attain in order to be considered",
                            " feasible.",
                            "",
                            " Can be set via `set_minimum_untrusted_score`."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 310
            },
            "events": {
                "type": 86
            },
            "constants": [
                {
                    "name": "UnsignedPhase",
                    "type": 4,
                    "value": [
                        88,
                        2,
                        0,
                        0
                    ],
                    "docs": [
                        " Duration of the unsigned phase."
                    ]
                },
                {
                    "name": "SignedPhase",
                    "type": 4,
                    "value": [
                        88,
                        2,
                        0,
                        0
                    ],
                    "docs": [
                        " Duration of the signed phase."
                    ]
                },
                {
                    "name": "BetterSignedThreshold",
                    "type": 40,
                    "value": [
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum amount of improvement to the solution score that defines a solution as",
                        " \"better\" in the Signed phase."
                    ]
                },
                {
                    "name": "BetterUnsignedThreshold",
                    "type": 40,
                    "value": [
                        32,
                        161,
                        7,
                        0
                    ],
                    "docs": [
                        " The minimum amount of improvement to the solution score that defines a solution as",
                        " \"better\" in the Unsigned phase."
                    ]
                },
                {
                    "name": "OffchainRepeat",
                    "type": 4,
                    "value": [
                        18,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The repeat threshold of the offchain worker.",
                        "",
                        " For example, if it is 5, that means that at least 5 blocks will elapse between attempts",
                        " to submit the worker's solution."
                    ]
                },
                {
                    "name": "MinerTxPriority",
                    "type": 10,
                    "value": [
                        101,
                        102,
                        102,
                        102,
                        102,
                        102,
                        102,
                        230
                    ],
                    "docs": [
                        " The priority of the unsigned transaction submitted in the unsigned-phase"
                    ]
                },
                {
                    "name": "SignedMaxSubmissions",
                    "type": 4,
                    "value": [
                        16,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Maximum number of signed submissions that can be queued.",
                        "",
                        " It is best to avoid adjusting this during an election, as it impacts downstream data",
                        " structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you",
                        " update this value during an election, you _must_ ensure that",
                        " `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise,",
                        " attempts to submit new solutions may cause a runtime panic."
                    ]
                },
                {
                    "name": "SignedMaxWeight",
                    "type": 8,
                    "value": [
                        11,
                        208,
                        245,
                        170,
                        39,
                        87,
                        1,
                        206,
                        204,
                        236,
                        0
                    ],
                    "docs": [
                        " Maximum weight of a signed solution.",
                        "",
                        " If [`Config::MinerConfig`] is being implemented to submit signed solutions (outside of",
                        " this pallet), then [`MinerConfig::solution_weight`] is used to compare against",
                        " this value."
                    ]
                },
                {
                    "name": "SignedMaxRefunds",
                    "type": 4,
                    "value": [
                        4,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum amount of unchecked solutions to refund the call fee for."
                    ]
                },
                {
                    "name": "SignedRewardBase",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Base reward for a signed solution"
                    ]
                },
                {
                    "name": "SignedDepositBase",
                    "type": 6,
                    "value": [
                        0,
                        160,
                        219,
                        33,
                        93,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Base deposit for a signed solution."
                    ]
                },
                {
                    "name": "SignedDepositByte",
                    "type": 6,
                    "value": [
                        120,
                        125,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Per-byte deposit for a signed solution."
                    ]
                },
                {
                    "name": "SignedDepositWeight",
                    "type": 6,
                    "value": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Per-weight deposit for a signed solution."
                    ]
                },
                {
                    "name": "MaxElectingVoters",
                    "type": 4,
                    "value": [
                        228,
                        87,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of electing voters to put in the snapshot. At the moment, snapshots",
                        " are only over a single block, but once multi-block elections are introduced they will",
                        " take place over multiple blocks."
                    ]
                },
                {
                    "name": "MaxElectableTargets",
                    "type": 80,
                    "value": [
                        255,
                        255
                    ],
                    "docs": [
                        " The maximum number of electable targets to put in the snapshot."
                    ]
                },
                {
                    "name": "MaxWinners",
                    "type": 4,
                    "value": [
                        176,
                        4,
                        0,
                        0
                    ],
                    "docs": [
                        " The maximum number of winners that can be elected by this `ElectionProvider`",
                        " implementation.",
                        "",
                        " Note: This must always be greater or equal to `T::DataProvider::desired_targets()`."
                    ]
                },
                {
                    "name": "MinerMaxLength",
                    "type": 4,
                    "value": [
                        0,
                        0,
                        54,
                        0
                    ],
                    "docs": []
                },
                {
                    "name": "MinerMaxWeight",
                    "type": 8,
                    "value": [
                        11,
                        208,
                        245,
                        170,
                        39,
                        87,
                        1,
                        206,
                        204,
                        236,
                        0
                    ],
                    "docs": []
                },
                {
                    "name": "MinerMaxVotesPerVoter",
                    "type": 4,
                    "value": [
                        16,
                        0,
                        0,
                        0
                    ],
                    "docs": []
                }
            ],
            "errors": {
                "type": 611
            },
            "index": 36
        },
        {
            "name": "VoterList",
            "storage": {
                "prefix": "VoterList",
                "items": [
                    {
                        "name": "ListNodes",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 612
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A single node, within some bag.",
                            "",
                            " Nodes store links forward and back within their respective bags."
                        ]
                    },
                    {
                        "name": "CounterForListNodes",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "ListBags",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 10,
                                "value": 613
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A bag stored in storage.",
                            "",
                            " Stores a `Bag` struct, which stores head and tail pointers to itself."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 368
            },
            "events": {
                "type": 89
            },
            "constants": [
                {
                    "name": "BagThresholds",
                    "type": 614,
                    "value": [
                        33,
                        3,
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        243,
                        158,
                        128,
                        151,
                        2,
                        0,
                        0,
                        0,
                        168,
                        177,
                        151,
                        226,
                        2,
                        0,
                        0,
                        0,
                        148,
                        73,
                        46,
                        54,
                        3,
                        0,
                        0,
                        0,
                        39,
                        156,
                        58,
                        147,
                        3,
                        0,
                        0,
                        0,
                        3,
                        188,
                        206,
                        250,
                        3,
                        0,
                        0,
                        0,
                        66,
                        192,
                        27,
                        110,
                        4,
                        0,
                        0,
                        0,
                        27,
                        71,
                        117,
                        238,
                        4,
                        0,
                        0,
                        0,
                        56,
                        94,
                        85,
                        125,
                        5,
                        0,
                        0,
                        0,
                        70,
                        220,
                        96,
                        28,
                        6,
                        0,
                        0,
                        0,
                        137,
                        56,
                        108,
                        205,
                        6,
                        0,
                        0,
                        0,
                        182,
                        238,
                        128,
                        146,
                        7,
                        0,
                        0,
                        0,
                        254,
                        126,
                        227,
                        109,
                        8,
                        0,
                        0,
                        0,
                        232,
                        27,
                        26,
                        98,
                        9,
                        0,
                        0,
                        0,
                        176,
                        25,
                        244,
                        113,
                        10,
                        0,
                        0,
                        0,
                        16,
                        53,
                        146,
                        160,
                        11,
                        0,
                        0,
                        0,
                        207,
                        201,
                        111,
                        241,
                        12,
                        0,
                        0,
                        0,
                        65,
                        20,
                        109,
                        104,
                        14,
                        0,
                        0,
                        0,
                        231,
                        155,
                        218,
                        9,
                        16,
                        0,
                        0,
                        0,
                        206,
                        232,
                        133,
                        218,
                        17,
                        0,
                        0,
                        0,
                        40,
                        169,
                        199,
                        223,
                        19,
                        0,
                        0,
                        0,
                        187,
                        112,
                        147,
                        31,
                        22,
                        0,
                        0,
                        0,
                        142,
                        64,
                        137,
                        160,
                        24,
                        0,
                        0,
                        0,
                        129,
                        10,
                        9,
                        106,
                        27,
                        0,
                        0,
                        0,
                        54,
                        106,
                        72,
                        132,
                        30,
                        0,
                        0,
                        0,
                        91,
                        211,
                        106,
                        248,
                        33,
                        0,
                        0,
                        0,
                        128,
                        124,
                        156,
                        208,
                        37,
                        0,
                        0,
                        0,
                        201,
                        85,
                        48,
                        24,
                        42,
                        0,
                        0,
                        0,
                        189,
                        99,
                        193,
                        219,
                        46,
                        0,
                        0,
                        0,
                        113,
                        224,
                        87,
                        41,
                        52,
                        0,
                        0,
                        0,
                        104,
                        144,
                        146,
                        16,
                        58,
                        0,
                        0,
                        0,
                        237,
                        196,
                        212,
                        162,
                        64,
                        0,
                        0,
                        0,
                        105,
                        147,
                        121,
                        243,
                        71,
                        0,
                        0,
                        0,
                        143,
                        216,
                        12,
                        24,
                        80,
                        0,
                        0,
                        0,
                        75,
                        175,
                        138,
                        40,
                        89,
                        0,
                        0,
                        0,
                        106,
                        22,
                        166,
                        63,
                        99,
                        0,
                        0,
                        0,
                        9,
                        149,
                        23,
                        123,
                        110,
                        0,
                        0,
                        0,
                        120,
                        197,
                        244,
                        251,
                        122,
                        0,
                        0,
                        0,
                        98,
                        200,
                        17,
                        231,
                        136,
                        0,
                        0,
                        0,
                        81,
                        191,
                        109,
                        101,
                        152,
                        0,
                        0,
                        0,
                        4,
                        142,
                        171,
                        164,
                        169,
                        0,
                        0,
                        0,
                        84,
                        70,
                        152,
                        215,
                        188,
                        0,
                        0,
                        0,
                        145,
                        202,
                        192,
                        54,
                        210,
                        0,
                        0,
                        0,
                        23,
                        95,
                        24,
                        1,
                        234,
                        0,
                        0,
                        0,
                        189,
                        21,
                        178,
                        124,
                        4,
                        1,
                        0,
                        0,
                        67,
                        53,
                        143,
                        247,
                        33,
                        1,
                        0,
                        0,
                        184,
                        252,
                        132,
                        200,
                        66,
                        1,
                        0,
                        0,
                        153,
                        103,
                        60,
                        80,
                        103,
                        1,
                        0,
                        0,
                        7,
                        228,
                        78,
                        250,
                        143,
                        1,
                        0,
                        0,
                        179,
                        65,
                        131,
                        62,
                        189,
                        1,
                        0,
                        0,
                        2,
                        127,
                        46,
                        162,
                        239,
                        1,
                        0,
                        0,
                        152,
                        131,
                        188,
                        185,
                        39,
                        2,
                        0,
                        0,
                        22,
                        77,
                        101,
                        42,
                        102,
                        2,
                        0,
                        0,
                        180,
                        149,
                        19,
                        172,
                        171,
                        2,
                        0,
                        0,
                        45,
                        142,
                        130,
                        11,
                        249,
                        2,
                        0,
                        0,
                        161,
                        230,
                        152,
                        44,
                        79,
                        3,
                        0,
                        0,
                        166,
                        22,
                        8,
                        13,
                        175,
                        3,
                        0,
                        0,
                        204,
                        157,
                        55,
                        199,
                        25,
                        4,
                        0,
                        0,
                        160,
                        213,
                        132,
                        149,
                        144,
                        4,
                        0,
                        0,
                        66,
                        231,
                        224,
                        213,
                        20,
                        5,
                        0,
                        0,
                        2,
                        140,
                        215,
                        13,
                        168,
                        5,
                        0,
                        0,
                        15,
                        117,
                        10,
                        239,
                        75,
                        6,
                        0,
                        0,
                        234,
                        141,
                        46,
                        92,
                        2,
                        7,
                        0,
                        0,
                        195,
                        203,
                        153,
                        110,
                        205,
                        7,
                        0,
                        0,
                        177,
                        229,
                        113,
                        124,
                        175,
                        8,
                        0,
                        0,
                        170,
                        43,
                        142,
                        31,
                        171,
                        9,
                        0,
                        0,
                        181,
                        193,
                        32,
                        61,
                        195,
                        10,
                        0,
                        0,
                        38,
                        208,
                        61,
                        14,
                        251,
                        11,
                        0,
                        0,
                        112,
                        199,
                        89,
                        41,
                        86,
                        13,
                        0,
                        0,
                        235,
                        173,
                        218,
                        140,
                        216,
                        14,
                        0,
                        0,
                        247,
                        151,
                        219,
                        170,
                        134,
                        16,
                        0,
                        0,
                        207,
                        240,
                        68,
                        118,
                        101,
                        18,
                        0,
                        0,
                        31,
                        38,
                        96,
                        113,
                        122,
                        20,
                        0,
                        0,
                        9,
                        166,
                        17,
                        190,
                        203,
                        22,
                        0,
                        0,
                        29,
                        251,
                        232,
                        47,
                        96,
                        25,
                        0,
                        0,
                        148,
                        58,
                        60,
                        96,
                        63,
                        28,
                        0,
                        0,
                        138,
                        254,
                        137,
                        196,
                        113,
                        31,
                        0,
                        0,
                        206,
                        217,
                        99,
                        199,
                        0,
                        35,
                        0,
                        0,
                        3,
                        169,
                        42,
                        228,
                        246,
                        38,
                        0,
                        0,
                        254,
                        114,
                        238,
                        197,
                        95,
                        43,
                        0,
                        0,
                        54,
                        201,
                        204,
                        105,
                        72,
                        48,
                        0,
                        0,
                        218,
                        227,
                        50,
                        69,
                        191,
                        53,
                        0,
                        0,
                        6,
                        42,
                        116,
                        112,
                        212,
                        59,
                        0,
                        0,
                        124,
                        151,
                        50,
                        214,
                        153,
                        66,
                        0,
                        0,
                        132,
                        163,
                        36,
                        104,
                        35,
                        74,
                        0,
                        0,
                        87,
                        26,
                        212,
                        89,
                        135,
                        82,
                        0,
                        0,
                        231,
                        241,
                        2,
                        98,
                        222,
                        91,
                        0,
                        0,
                        13,
                        184,
                        118,
                        3,
                        68,
                        102,
                        0,
                        0,
                        174,
                        4,
                        1,
                        222,
                        214,
                        113,
                        0,
                        0,
                        125,
                        158,
                        179,
                        8,
                        185,
                        126,
                        0,
                        0,
                        30,
                        4,
                        74,
                        118,
                        16,
                        141,
                        0,
                        0,
                        58,
                        29,
                        240,
                        100,
                        7,
                        157,
                        0,
                        0,
                        224,
                        79,
                        175,
                        218,
                        204,
                        174,
                        0,
                        0,
                        86,
                        121,
                        240,
                        47,
                        149,
                        194,
                        0,
                        0,
                        149,
                        195,
                        170,
                        169,
                        154,
                        216,
                        0,
                        0,
                        150,
                        124,
                        5,
                        37,
                        30,
                        241,
                        0,
                        0,
                        23,
                        122,
                        102,
                        214,
                        103,
                        12,
                        1,
                        0,
                        40,
                        203,
                        31,
                        30,
                        200,
                        42,
                        1,
                        0,
                        250,
                        40,
                        47,
                        117,
                        152,
                        76,
                        1,
                        0,
                        213,
                        125,
                        200,
                        116,
                        60,
                        114,
                        1,
                        0,
                        125,
                        196,
                        179,
                        251,
                        34,
                        156,
                        1,
                        0,
                        54,
                        92,
                        222,
                        116,
                        199,
                        202,
                        1,
                        0,
                        158,
                        184,
                        225,
                        66,
                        179,
                        254,
                        1,
                        0,
                        12,
                        49,
                        174,
                        84,
                        127,
                        56,
                        2,
                        0,
                        95,
                        225,
                        1,
                        232,
                        213,
                        120,
                        2,
                        0,
                        99,
                        115,
                        218,
                        126,
                        116,
                        192,
                        2,
                        0,
                        81,
                        209,
                        166,
                        13,
                        46,
                        16,
                        3,
                        0,
                        199,
                        233,
                        164,
                        104,
                        237,
                        104,
                        3,
                        0,
                        97,
                        192,
                        145,
                        247,
                        183,
                        203,
                        3,
                        0,
                        191,
                        39,
                        161,
                        183,
                        176,
                        57,
                        4,
                        0,
                        123,
                        20,
                        153,
                        148,
                        27,
                        180,
                        4,
                        0,
                        133,
                        35,
                        237,
                        34,
                        97,
                        60,
                        5,
                        0,
                        105,
                        165,
                        212,
                        197,
                        18,
                        212,
                        5,
                        0,
                        236,
                        140,
                        147,
                        77,
                        239,
                        124,
                        6,
                        0,
                        245,
                        170,
                        144,
                        27,
                        232,
                        56,
                        7,
                        0,
                        140,
                        190,
                        93,
                        219,
                        38,
                        10,
                        8,
                        0,
                        2,
                        151,
                        140,
                        225,
                        19,
                        243,
                        8,
                        0,
                        250,
                        227,
                        20,
                        67,
                        93,
                        246,
                        9,
                        0,
                        221,
                        241,
                        45,
                        186,
                        254,
                        22,
                        11,
                        0,
                        46,
                        186,
                        220,
                        111,
                        74,
                        88,
                        12,
                        0,
                        12,
                        85,
                        24,
                        196,
                        242,
                        189,
                        13,
                        0,
                        240,
                        187,
                        84,
                        49,
                        21,
                        76,
                        15,
                        0,
                        73,
                        142,
                        134,
                        107,
                        70,
                        7,
                        17,
                        0,
                        178,
                        193,
                        83,
                        222,
                        159,
                        244,
                        18,
                        0,
                        39,
                        138,
                        47,
                        178,
                        206,
                        25,
                        21,
                        0,
                        178,
                        57,
                        159,
                        132,
                        36,
                        125,
                        23,
                        0,
                        225,
                        153,
                        231,
                        4,
                        170,
                        37,
                        26,
                        0,
                        186,
                        19,
                        245,
                        171,
                        51,
                        27,
                        29,
                        0,
                        38,
                        71,
                        133,
                        204,
                        120,
                        102,
                        32,
                        0,
                        136,
                        191,
                        128,
                        63,
                        45,
                        17,
                        36,
                        0,
                        28,
                        152,
                        35,
                        248,
                        29,
                        38,
                        40,
                        0,
                        204,
                        196,
                        34,
                        212,
                        80,
                        177,
                        44,
                        0,
                        240,
                        136,
                        130,
                        5,
                        40,
                        192,
                        49,
                        0,
                        54,
                        124,
                        109,
                        126,
                        137,
                        97,
                        55,
                        0,
                        110,
                        147,
                        41,
                        211,
                        10,
                        166,
                        61,
                        0,
                        140,
                        188,
                        108,
                        19,
                        34,
                        160,
                        68,
                        0,
                        0,
                        112,
                        243,
                        42,
                        92,
                        100,
                        76,
                        0,
                        180,
                        59,
                        132,
                        105,
                        153,
                        9,
                        85,
                        0,
                        128,
                        180,
                        171,
                        228,
                        80,
                        169,
                        94,
                        0,
                        160,
                        205,
                        169,
                        121,
                        219,
                        95,
                        105,
                        0,
                        76,
                        194,
                        127,
                        76,
                        199,
                        76,
                        117,
                        0,
                        208,
                        172,
                        14,
                        186,
                        52,
                        147,
                        130,
                        0,
                        72,
                        62,
                        12,
                        207,
                        61,
                        90,
                        145,
                        0,
                        104,
                        198,
                        142,
                        116,
                        105,
                        205,
                        161,
                        0,
                        40,
                        30,
                        111,
                        165,
                        43,
                        29,
                        180,
                        0,
                        152,
                        169,
                        35,
                        38,
                        116,
                        127,
                        200,
                        0,
                        240,
                        154,
                        116,
                        99,
                        77,
                        48,
                        223,
                        0,
                        128,
                        205,
                        252,
                        75,
                        141,
                        114,
                        248,
                        0,
                        144,
                        20,
                        96,
                        45,
                        154,
                        144,
                        20,
                        1,
                        240,
                        180,
                        19,
                        217,
                        69,
                        221,
                        51,
                        1,
                        32,
                        151,
                        53,
                        150,
                        193,
                        180,
                        86,
                        1,
                        80,
                        220,
                        251,
                        174,
                        173,
                        125,
                        125,
                        1,
                        224,
                        17,
                        152,
                        185,
                        71,
                        170,
                        168,
                        1,
                        48,
                        199,
                        238,
                        22,
                        187,
                        185,
                        216,
                        1,
                        32,
                        110,
                        72,
                        134,
                        151,
                        57,
                        14,
                        2,
                        160,
                        250,
                        75,
                        29,
                        114,
                        199,
                        73,
                        2,
                        192,
                        17,
                        113,
                        112,
                        181,
                        18,
                        140,
                        2,
                        128,
                        138,
                        22,
                        67,
                        166,
                        222,
                        213,
                        2,
                        192,
                        248,
                        35,
                        177,
                        162,
                        4,
                        40,
                        3,
                        128,
                        175,
                        89,
                        112,
                        162,
                        118,
                        131,
                        3,
                        192,
                        111,
                        45,
                        135,
                        255,
                        65,
                        233,
                        3,
                        64,
                        147,
                        127,
                        172,
                        143,
                        146,
                        90,
                        4,
                        0,
                        145,
                        9,
                        113,
                        23,
                        182,
                        216,
                        4,
                        64,
                        15,
                        223,
                        91,
                        33,
                        32,
                        101,
                        5,
                        0,
                        73,
                        193,
                        73,
                        68,
                        110,
                        1,
                        6,
                        0,
                        142,
                        188,
                        166,
                        229,
                        108,
                        175,
                        6,
                        0,
                        89,
                        86,
                        134,
                        133,
                        28,
                        113,
                        7,
                        128,
                        104,
                        170,
                        52,
                        164,
                        183,
                        72,
                        8,
                        128,
                        161,
                        226,
                        158,
                        82,
                        185,
                        56,
                        9,
                        0,
                        189,
                        171,
                        232,
                        128,
                        228,
                        67,
                        10,
                        0,
                        42,
                        114,
                        180,
                        32,
                        76,
                        109,
                        11,
                        128,
                        241,
                        192,
                        19,
                        51,
                        92,
                        184,
                        12,
                        0,
                        160,
                        60,
                        203,
                        220,
                        227,
                        40,
                        14,
                        128,
                        184,
                        98,
                        154,
                        158,
                        32,
                        195,
                        15,
                        0,
                        222,
                        86,
                        147,
                        210,
                        202,
                        139,
                        17,
                        0,
                        93,
                        127,
                        76,
                        147,
                        35,
                        136,
                        19,
                        0,
                        26,
                        135,
                        223,
                        53,
                        4,
                        190,
                        21,
                        0,
                        167,
                        206,
                        75,
                        132,
                        239,
                        51,
                        24,
                        0,
                        1,
                        16,
                        251,
                        234,
                        36,
                        241,
                        26,
                        0,
                        128,
                        42,
                        229,
                        209,
                        181,
                        253,
                        29,
                        0,
                        34,
                        161,
                        52,
                        96,
                        157,
                        98,
                        33,
                        0,
                        68,
                        33,
                        107,
                        240,
                        218,
                        41,
                        37,
                        0,
                        2,
                        97,
                        241,
                        130,
                        143,
                        94,
                        41,
                        0,
                        102,
                        32,
                        207,
                        133,
                        30,
                        13,
                        46,
                        0,
                        132,
                        16,
                        25,
                        82,
                        82,
                        67,
                        51,
                        0,
                        160,
                        193,
                        143,
                        202,
                        132,
                        16,
                        57,
                        0,
                        38,
                        173,
                        20,
                        147,
                        204,
                        133,
                        63,
                        0,
                        208,
                        205,
                        36,
                        102,
                        47,
                        182,
                        70,
                        0,
                        156,
                        225,
                        154,
                        28,
                        218,
                        182,
                        78,
                        0,
                        88,
                        204,
                        194,
                        12,
                        95,
                        159,
                        87,
                        0,
                        32,
                        10,
                        117,
                        120,
                        251,
                        137,
                        97,
                        0,
                        48,
                        187,
                        187,
                        214,
                        228,
                        147,
                        108,
                        0,
                        96,
                        203,
                        167,
                        220,
                        158,
                        221,
                        120,
                        0,
                        184,
                        59,
                        192,
                        66,
                        91,
                        139,
                        134,
                        0,
                        184,
                        134,
                        35,
                        97,
                        100,
                        197,
                        149,
                        0,
                        248,
                        241,
                        95,
                        220,
                        147,
                        184,
                        166,
                        0,
                        32,
                        106,
                        145,
                        192,
                        214,
                        150,
                        185,
                        0,
                        216,
                        239,
                        226,
                        143,
                        192,
                        151,
                        206,
                        0,
                        104,
                        41,
                        155,
                        245,
                        46,
                        249,
                        229,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255
                    ],
                    "docs": [
                        " The list of thresholds separating the various bags.",
                        "",
                        " Ids are separated into unsorted bags according to their score. This specifies the",
                        " thresholds separating the bags. An id's bag is the largest bag for which the id's score",
                        " is less than or equal to its upper threshold.",
                        "",
                        " When ids are iterated, higher bags are iterated completely before lower bags. This means",
                        " that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower",
                        " score, but peer ids within a particular bag are sorted in insertion order.",
                        "",
                        " # Expressing the constant",
                        "",
                        " This constant must be sorted in strictly increasing order. Duplicate items are not",
                        " permitted.",
                        "",
                        " There is an implied upper limit of `Score::MAX`; that value does not need to be",
                        " specified within the bag. For any two threshold lists, if one ends with",
                        " `Score::MAX`, the other one does not, and they are otherwise equal, the two",
                        " lists will behave identically.",
                        "",
                        " # Calculation",
                        "",
                        " It is recommended to generate the set of thresholds in a geometric series, such that",
                        " there exists some constant ratio such that `threshold[k + 1] == (threshold[k] *",
                        " constant_ratio).max(threshold[k] + 1)` for all `k`.",
                        "",
                        " The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.",
                        "",
                        " # Examples",
                        "",
                        " - If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and",
                        "   iteration is strictly in insertion order.",
                        " - If `BagThresholds::get().len() == 64`, and the thresholds are determined according to",
                        "   the procedure given above, then the constant ratio is equal to 2.",
                        " - If `BagThresholds::get().len() == 200`, and the thresholds are determined according to",
                        "   the procedure given above, then the constant ratio is approximately equal to 1.248.",
                        " - If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall",
                        "   into bag 0, an id with score 2 will fall into bag 1, etc.",
                        "",
                        " # Migration",
                        "",
                        " In the event that this list ever changes, a copy of the old bags list must be retained.",
                        " With that `List::migrate` can be called, which will perform the appropriate migration."
                    ]
                }
            ],
            "errors": {
                "type": 615
            },
            "index": 37
        },
        {
            "name": "NominationPools",
            "storage": {
                "prefix": "NominationPools",
                "items": [
                    {
                        "name": "MinJoinBond",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Minimum amount to bond to join a pool."
                        ]
                    },
                    {
                        "name": "MinCreateBond",
                        "modifier": "Default",
                        "type": {
                            "Plain": 6
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Minimum bond required to create a pool.",
                            "",
                            " This is the amount that the depositor must put as their initial stake in the pool, as an",
                            " indication of \"skin in the game\".",
                            "",
                            " This is the value that will always exist in the staking ledger of the pool bonded account",
                            " while all other accounts leave."
                        ]
                    },
                    {
                        "name": "MaxPools",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Maximum number of nomination pools that can exist. If `None`, then an unbounded number of",
                            " pools can exist."
                        ]
                    },
                    {
                        "name": "MaxPoolMembers",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Maximum number of members that can exist in the system. If `None`, then the count",
                            " members are not bound on a system wide basis."
                        ]
                    },
                    {
                        "name": "MaxPoolMembersPerPool",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Maximum number of members that may belong to pool. If `None`, then the count of",
                            " members is not bound on a per pool basis."
                        ]
                    },
                    {
                        "name": "PoolMembers",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 617
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Active members."
                        ]
                    },
                    {
                        "name": "CounterForPoolMembers",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "BondedPools",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 622
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Storage for bonded pools."
                        ]
                    },
                    {
                        "name": "CounterForBondedPools",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "RewardPools",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 624
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Reward pools. This is where there rewards for each pool accumulate. When a members payout",
                            " is claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account."
                        ]
                    },
                    {
                        "name": "CounterForRewardPools",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "SubPoolsStorage",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 625
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Groups of unbonding pools. Each group of unbonding pools belongs to a bonded pool,",
                            " hence the name sub-pools. Keyed by the bonded pools account."
                        ]
                    },
                    {
                        "name": "CounterForSubPoolsStorage",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "Metadata",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 631
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Metadata for the pool."
                        ]
                    },
                    {
                        "name": "CounterForMetadata",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "LastPoolId",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Ever increasing number of all pools created so far."
                        ]
                    },
                    {
                        "name": "ReversePoolIdLookup",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A reverse lookup from the pool's account id to its id.",
                            "",
                            " This is only used for slashing. In all other instances, the pool id is used, and the",
                            " accounts are deterministically derived from it."
                        ]
                    },
                    {
                        "name": "CounterForReversePoolIdLookup",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    }
                ]
            },
            "calls": {
                "type": 369
            },
            "events": {
                "type": 90
            },
            "constants": [
                {
                    "name": "PalletId",
                    "type": 559,
                    "value": [
                        112,
                        121,
                        47,
                        110,
                        111,
                        112,
                        108,
                        115
                    ],
                    "docs": [
                        " The nomination pool's pallet id."
                    ]
                },
                {
                    "name": "MaxPointsToBalance",
                    "type": 2,
                    "value": [
                        10
                    ],
                    "docs": [
                        " The maximum pool points-to-balance ratio that an `open` pool can have.",
                        "",
                        " This is important in the event slashing takes place and the pool's points-to-balance",
                        " ratio becomes disproportional.",
                        "",
                        " Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations",
                        " are a function of number of points, and by setting this value to e.g. 10, you ensure",
                        " that the total number of points in the system are at most 10 times the total_issuance of",
                        " the chain, in the absolute worse case.",
                        "",
                        " For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1.",
                        " Such a scenario would also be the equivalent of the pool being 90% slashed."
                    ]
                }
            ],
            "errors": {
                "type": 632
            },
            "index": 39
        },
        {
            "name": "FastUnstake",
            "storage": {
                "prefix": "FastUnstake",
                "items": [
                    {
                        "name": "Head",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 634
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current \"head of the queue\" being unstaked."
                        ]
                    },
                    {
                        "name": "Queue",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 0,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The map of all accounts wishing to be unstaked.",
                            "",
                            " Keeps track of `AccountId` wishing to unstake and it's corresponding deposit."
                        ]
                    },
                    {
                        "name": "CounterForQueue",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            "Counter for the related counted storage map"
                        ]
                    },
                    {
                        "name": "ErasToCheckPerBlock",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of eras to check per block.",
                            "",
                            " If set to 0, this pallet does absolutely nothing.",
                            "",
                            " Based on the amount of weight available at `on_idle`, up to this many eras of a single",
                            " nominator might be checked."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 374
            },
            "events": {
                "type": 93
            },
            "constants": [
                {
                    "name": "Deposit",
                    "type": 6,
                    "value": [
                        0,
                        228,
                        11,
                        84,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " Deposit to take for unstaking, to make sure we're able to slash the it in order to cover",
                        " the costs of resources on unsuccessful unstake."
                    ]
                }
            ],
            "errors": {
                "type": 637
            },
            "index": 40
        },
        {
            "name": "ParachainsOrigin",
            "storage": null,
            "calls": null,
            "events": null,
            "constants": [],
            "errors": null,
            "index": 50
        },
        {
            "name": "Configuration",
            "storage": {
                "prefix": "Configuration",
                "items": [
                    {
                        "name": "ActiveConfig",
                        "modifier": "Default",
                        "type": {
                            "Plain": 638
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            2,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            6,
                            0,
                            0,
                            0,
                            100,
                            0,
                            0,
                            0,
                            2,
                            0,
                            0,
                            0,
                            200,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            7,
                            0,
                            200,
                            23,
                            168,
                            4,
                            2,
                            0,
                            64,
                            1,
                            0,
                            2,
                            0,
                            0,
                            0,
                            2,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The active configuration for the current session."
                        ]
                    },
                    {
                        "name": "PendingConfigs",
                        "modifier": "Default",
                        "type": {
                            "Plain": 639
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Pending configuration changes.",
                            "",
                            " This is a list of configuration changes, each with a session index at which it should",
                            " be applied.",
                            "",
                            " The list is sorted ascending by session index. Also, this list can only contain at most",
                            " 2 items: for the next session and for the `scheduled_session`."
                        ]
                    },
                    {
                        "name": "BypassConsistencyCheck",
                        "modifier": "Default",
                        "type": {
                            "Plain": 43
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " If this is set, then the configuration setters will bypass the consistency checks. This",
                            " is meant to be used only as the last resort."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 375
            },
            "events": null,
            "constants": [],
            "errors": {
                "type": 641
            },
            "index": 51
        },
        {
            "name": "ParasShared",
            "storage": {
                "prefix": "ParasShared",
                "items": [
                    {
                        "name": "CurrentSessionIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The current session index."
                        ]
                    },
                    {
                        "name": "ActiveValidatorIndices",
                        "modifier": "Default",
                        "type": {
                            "Plain": 642
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All the validators actively participating in parachain consensus.",
                            " Indices are into the broader validator set."
                        ]
                    },
                    {
                        "name": "ActiveValidatorKeys",
                        "modifier": "Default",
                        "type": {
                            "Plain": 643
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The parachain attestation keys of the validators actively participating in parachain consensus.",
                            " This should be the same length as `ActiveValidatorIndices`."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 376
            },
            "events": null,
            "constants": [],
            "errors": null,
            "index": 52
        },
        {
            "name": "ParaInclusion",
            "storage": {
                "prefix": "ParaInclusion",
                "items": [
                    {
                        "name": "AvailabilityBitfields",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 385,
                                "value": 644
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The latest bitfield for each validator, referred to by their index in the validator set."
                        ]
                    },
                    {
                        "name": "PendingAvailability",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 645
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Candidates pending availability by `ParaId`."
                        ]
                    },
                    {
                        "name": "PendingAvailabilityCommitments",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 390
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The commitments of candidates pending availability, by `ParaId`."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 377
            },
            "events": {
                "type": 95
            },
            "constants": [],
            "errors": {
                "type": 646
            },
            "index": 53
        },
        {
            "name": "ParaInherent",
            "storage": {
                "prefix": "ParaInherent",
                "items": [
                    {
                        "name": "Included",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 33
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Whether the paras inherent was included within this block.",
                            "",
                            " The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant",
                            " due to the guarantees of FRAME's storage APIs.",
                            "",
                            " If this is `None` at the end of the block, we panic and render the block invalid."
                        ]
                    },
                    {
                        "name": "OnChainVotes",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 647
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Scraped on chain data for extracting resolved disputes as well as backing votes."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 378
            },
            "events": null,
            "constants": [],
            "errors": {
                "type": 652
            },
            "index": 54
        },
        {
            "name": "ParaScheduler",
            "storage": {
                "prefix": "ParaScheduler",
                "items": [
                    {
                        "name": "ValidatorGroups",
                        "modifier": "Default",
                        "type": {
                            "Plain": 653
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All the validator groups. One for each core. Indices are into `ActiveValidators` - not the",
                            " broader set of Polkadot validators, but instead just the subset used for parachains during",
                            " this session.",
                            "",
                            " Bound: The number of cores is the sum of the numbers of parachains and parathread multiplexers.",
                            " Reasonably, 100-1000. The dominant factor is the number of validators: safe upper bound at 10k."
                        ]
                    },
                    {
                        "name": "ParathreadQueue",
                        "modifier": "Default",
                        "type": {
                            "Plain": 654
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " A queue of upcoming claims and which core they should be mapped onto.",
                            "",
                            " The number of queued claims is bounded at the `scheduling_lookahead`",
                            " multiplied by the number of parathread multiplexer cores. Reasonably, 10 * 50 = 500."
                        ]
                    },
                    {
                        "name": "AvailabilityCores",
                        "modifier": "Default",
                        "type": {
                            "Plain": 659
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " One entry for each availability core. Entries are `None` if the core is not currently occupied. Can be",
                            " temporarily `Some` if scheduled but not occupied.",
                            " The i'th parachain belongs to the i'th core, with the remaining cores all being",
                            " parathread-multiplexers.",
                            "",
                            " Bounded by the maximum of either of these two values:",
                            "   * The number of parachains and parathread multiplexers",
                            "   * The number of validators divided by `configuration.max_validators_per_core`."
                        ]
                    },
                    {
                        "name": "ParathreadClaimIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 662
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " An index used to ensure that only one claim on a parathread exists in the queue or is",
                            " currently being handled by an occupied core.",
                            "",
                            " Bounded by the number of parathread cores and scheduling lookahead. Reasonably, 10 * 50 = 500."
                        ]
                    },
                    {
                        "name": "SessionStartBlock",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The block number where the session start occurred. Used to track how many group rotations have occurred.",
                            "",
                            " Note that in the context of parachains modules the session change is signaled during",
                            " the block and enacted at the end of the block (at the finalization stage, to be exact).",
                            " Thus for all intents and purposes the effect of the session change is observed at the",
                            " block following the session change, block number of which we save in this storage value."
                        ]
                    },
                    {
                        "name": "Scheduled",
                        "modifier": "Default",
                        "type": {
                            "Plain": 663
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Currently scheduled cores - free but up to be occupied.",
                            "",
                            " Bounded by the number of cores: one for each parachain and parathread multiplexer.",
                            "",
                            " The value contained here will not be valid after the end of a block. Runtime APIs should be used to determine scheduled cores/",
                            " for the upcoming block."
                        ]
                    }
                ]
            },
            "calls": null,
            "events": null,
            "constants": [],
            "errors": null,
            "index": 55
        },
        {
            "name": "Paras",
            "storage": {
                "prefix": "Paras",
                "items": [
                    {
                        "name": "PvfActiveVoteMap",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 103,
                                "value": 666
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All currently active PVF pre-checking votes.",
                            "",
                            " Invariant:",
                            " - There are no PVF pre-checking votes that exists in list but not in the set and vice versa."
                        ]
                    },
                    {
                        "name": "PvfActiveVoteList",
                        "modifier": "Default",
                        "type": {
                            "Plain": 669
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`."
                        ]
                    },
                    {
                        "name": "Parachains",
                        "modifier": "Default",
                        "type": {
                            "Plain": 662
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All parachains. Ordered ascending by `ParaId`. Parathreads are not included.",
                            "",
                            " Consider using the [`ParachainsCache`] type of modifying."
                        ]
                    },
                    {
                        "name": "ParaLifecycles",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 670
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current lifecycle of a all known Para IDs."
                        ]
                    },
                    {
                        "name": "Heads",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 104
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The head-data of every registered para."
                        ]
                    },
                    {
                        "name": "CurrentCodeHash",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 103
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The validation code hash of every live para.",
                            "",
                            " Corresponding code can be retrieved with [`CodeByHash`]."
                        ]
                    },
                    {
                        "name": "PastCodeHash",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 671,
                                "value": 103
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Actual past code hash, indicated by the para id as well as the block number at which it",
                            " became outdated.",
                            "",
                            " Corresponding code can be retrieved with [`CodeByHash`]."
                        ]
                    },
                    {
                        "name": "PastCodeMeta",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 672
                            }
                        },
                        "fallback": [
                            0,
                            0
                        ],
                        "docs": [
                            " Past code of parachains. The parachains themselves may not be registered anymore,",
                            " but we also keep their code on-chain for the same amount of time as outdated code",
                            " to keep it available for approval checkers."
                        ]
                    },
                    {
                        "name": "PastCodePruning",
                        "modifier": "Default",
                        "type": {
                            "Plain": 675
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Which paras have past code that needs pruning and the relay-chain block at which the code was replaced.",
                            " Note that this is the actual height of the included block, not the expected height at which the",
                            " code upgrade would be applied, although they may be equal.",
                            " This is to ensure the entire acceptance period is covered, not an offset acceptance period starting",
                            " from the time at which the parachain perceives a code upgrade as having occurred.",
                            " Multiple entries for a single para are permitted. Ordered ascending by block number."
                        ]
                    },
                    {
                        "name": "FutureCodeUpgrades",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The block number at which the planned code change is expected for a para.",
                            " The change will be applied after the first parablock for this ID included which executes",
                            " in the context of a relay chain block with a number >= `expected_at`."
                        ]
                    },
                    {
                        "name": "FutureCodeHash",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 103
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The actual future code hash of a para.",
                            "",
                            " Corresponding code can be retrieved with [`CodeByHash`]."
                        ]
                    },
                    {
                        "name": "UpgradeGoAheadSignal",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 676
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.",
                            "",
                            " This value is absent when there are no upgrades scheduled or during the time the relay chain",
                            " performs the checks. It is set at the first relay-chain block when the corresponding parachain",
                            " can switch its upgrade function. As soon as the parachain's block is included, the value",
                            " gets reset to `None`.",
                            "",
                            " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                            " the format will require migration of parachains."
                        ]
                    },
                    {
                        "name": "UpgradeRestrictionSignal",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 677
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " This is used by the relay-chain to communicate that there are restrictions for performing",
                            " an upgrade for this parachain.",
                            "",
                            " This may be a because the parachain waits for the upgrade cooldown to expire. Another",
                            " potential use case is when we want to perform some maintenance (such as storage migration)",
                            " we could restrict upgrades to make the process simpler.",
                            "",
                            " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                            " the format will require migration of parachains."
                        ]
                    },
                    {
                        "name": "UpgradeCooldowns",
                        "modifier": "Default",
                        "type": {
                            "Plain": 675
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The list of parachains that are awaiting for their upgrade restriction to cooldown.",
                            "",
                            " Ordered ascending by block number."
                        ]
                    },
                    {
                        "name": "UpcomingUpgrades",
                        "modifier": "Default",
                        "type": {
                            "Plain": 675
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The list of upcoming code upgrades. Each item is a pair of which para performs a code",
                            " upgrade and at which relay-chain block it is expected at.",
                            "",
                            " Ordered ascending by block number."
                        ]
                    },
                    {
                        "name": "ActionsQueue",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 662
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The actions to perform during the start of a specific session index."
                        ]
                    },
                    {
                        "name": "UpcomingParasGenesis",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 678
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Upcoming paras instantiation arguments.",
                            "",
                            " NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set",
                            " to empty. Instead, the code will be saved into the storage right away via `CodeByHash`."
                        ]
                    },
                    {
                        "name": "CodeByHashRefs",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 103,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of reference on the validation code in [`CodeByHash`] storage."
                        ]
                    },
                    {
                        "name": "CodeByHash",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 103,
                                "value": 394
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Validation code stored by its hash.",
                            "",
                            " This storage is consistent with [`FutureCodeHash`], [`CurrentCodeHash`] and",
                            " [`PastCodeHash`]."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 404
            },
            "events": {
                "type": 107
            },
            "constants": [
                {
                    "name": "UnsignedPriority",
                    "type": 10,
                    "value": [
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255,
                        255
                    ],
                    "docs": []
                }
            ],
            "errors": {
                "type": 679
            },
            "index": 56
        },
        {
            "name": "Initializer",
            "storage": {
                "prefix": "Initializer",
                "items": [
                    {
                        "name": "HasInitialized",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 33
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Whether the parachains modules have been initialized within this block.",
                            "",
                            " Semantically a `bool`, but this guarantees it should never hit the trie,",
                            " as this is cleared in `on_finalize` and Frame optimizes `None` values to be empty values.",
                            "",
                            " As a `bool`, `set(false)` and `remove()` both lead to the next `get()` being false, but one of",
                            " them writes to the trie and one does not. This confusion makes `Option<()>` more suitable for",
                            " the semantics of this variable."
                        ]
                    },
                    {
                        "name": "BufferedSessionChanges",
                        "modifier": "Default",
                        "type": {
                            "Plain": 680
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Buffered session changes along with the block number at which they should be applied.",
                            "",
                            " Typically this will be empty or one element long. Apart from that this item never hits",
                            " the storage.",
                            "",
                            " However this is a `Vec` regardless to handle various edge cases that may occur at runtime",
                            " upgrade boundaries or if governance intervenes."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 406
            },
            "events": null,
            "constants": [],
            "errors": null,
            "index": 57
        },
        {
            "name": "Dmp",
            "storage": {
                "prefix": "Dmp",
                "items": [
                    {
                        "name": "DownwardMessageQueues",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 682
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The downward messages addressed for a certain para."
                        ]
                    },
                    {
                        "name": "DownwardMessageQueueHeads",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 11
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " A mapping that stores the downward message queue MQC head for each para.",
                            "",
                            " Each link in this chain has a form:",
                            " `(prev_head, B, H(M))`, where",
                            " - `prev_head`: is the previous head hash or zero if none.",
                            " - `B`: is the relay-chain block number in which a message was appended.",
                            " - `H(M)`: is the hash of the message being appended."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 407
            },
            "events": null,
            "constants": [],
            "errors": null,
            "index": 58
        },
        {
            "name": "Ump",
            "storage": {
                "prefix": "Ump",
                "items": [
                    {
                        "name": "RelayDispatchQueues",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 164
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The messages waiting to be handled by the relay-chain originating from a certain parachain.",
                            "",
                            " Note that some upward messages might have been already processed by the inclusion logic. E.g.",
                            " channel management messages.",
                            "",
                            " The messages are processed in FIFO order."
                        ]
                    },
                    {
                        "name": "RelayDispatchQueueSize",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 30
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Size of the dispatch queues. Caches sizes of the queues in `RelayDispatchQueue`.",
                            "",
                            " First item in the tuple is the count of messages and second",
                            " is the total length (in bytes) of the message payloads.",
                            "",
                            " Note that this is an auxiliary mapping: it's possible to tell the byte size and the number of",
                            " messages only looking at `RelayDispatchQueues`. This mapping is separate to avoid the cost of",
                            " loading the whole message queue if only the total size and count are required.",
                            "",
                            " Invariant:",
                            " - The set of keys should exactly match the set of keys of `RelayDispatchQueues`."
                        ]
                    },
                    {
                        "name": "NeedsDispatch",
                        "modifier": "Default",
                        "type": {
                            "Plain": 662
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The ordered list of `ParaId`s that have a `RelayDispatchQueue` entry.",
                            "",
                            " Invariant:",
                            " - The set of items from this vector should be exactly the set of the keys in",
                            "   `RelayDispatchQueues` and `RelayDispatchQueueSize`."
                        ]
                    },
                    {
                        "name": "NextDispatchRoundStartWith",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 98
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " This is the para that gets will get dispatched first during the next upward dispatchable queue",
                            " execution round.",
                            "",
                            " Invariant:",
                            " - If `Some(para)`, then `para` must be present in `NeedsDispatch`."
                        ]
                    },
                    {
                        "name": "Overweight",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 10,
                                "value": 684
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The messages that exceeded max individual message weight budget.",
                            "",
                            " These messages stay there until manually dispatched."
                        ]
                    },
                    {
                        "name": "OverweightCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 10
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of overweight messages ever recorded in `Overweight` (and thus the lowest free",
                            " index)."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 408
            },
            "events": {
                "type": 108
            },
            "constants": [],
            "errors": {
                "type": 685
            },
            "index": 59
        },
        {
            "name": "Hrmp",
            "storage": {
                "prefix": "Hrmp",
                "items": [
                    {
                        "name": "HrmpOpenChannelRequests",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 112,
                                "value": 686
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The set of pending HRMP open channel requests.",
                            "",
                            " The set is accompanied by a list for iteration.",
                            "",
                            " Invariant:",
                            " - There are no channels that exists in list but not in the set and vice versa."
                        ]
                    },
                    {
                        "name": "HrmpOpenChannelRequestsList",
                        "modifier": "Default",
                        "type": {
                            "Plain": 687
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "HrmpOpenChannelRequestCount",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " This mapping tracks how many open channel requests are initiated by a given sender para.",
                            " Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has",
                            " `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`."
                        ]
                    },
                    {
                        "name": "HrmpAcceptedChannelRequestCount",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " This mapping tracks how many open channel requests were accepted by a given recipient para.",
                            " Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with",
                            " `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`."
                        ]
                    },
                    {
                        "name": "HrmpCloseChannelRequests",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 112,
                                "value": 33
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " A set of pending HRMP close channel requests that are going to be closed during the session",
                            " change. Used for checking if a given channel is registered for closure.",
                            "",
                            " The set is accompanied by a list for iteration.",
                            "",
                            " Invariant:",
                            " - There are no channels that exists in list but not in the set and vice versa."
                        ]
                    },
                    {
                        "name": "HrmpCloseChannelRequestsList",
                        "modifier": "Default",
                        "type": {
                            "Plain": 687
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "HrmpWatermarks",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The HRMP watermark associated with each para.",
                            " Invariant:",
                            " - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session."
                        ]
                    },
                    {
                        "name": "HrmpChannels",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 112,
                                "value": 688
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " HRMP channel data associated with each para.",
                            " Invariant:",
                            " - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session."
                        ]
                    },
                    {
                        "name": "HrmpIngressChannelsIndex",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 662
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Ingress/egress indexes allow to find all the senders and receivers given the opposite side.",
                            " I.e.",
                            "",
                            " (a) ingress index allows to find all the senders for a given recipient.",
                            " (b) egress index allows to find all the recipients for a given sender.",
                            "",
                            " Invariants:",
                            " - for each ingress index entry for `P` each item `I` in the index should present in",
                            "   `HrmpChannels` as `(I, P)`.",
                            " - for each egress index entry for `P` each item `E` in the index should present in",
                            "   `HrmpChannels` as `(P, E)`.",
                            " - there should be no other dangling channels in `HrmpChannels`.",
                            " - the vectors are sorted."
                        ]
                    },
                    {
                        "name": "HrmpEgressChannelsIndex",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 662
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": []
                    },
                    {
                        "name": "HrmpChannelContents",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 112,
                                "value": 690
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Storage for the messages for each channel.",
                            " Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`."
                        ]
                    },
                    {
                        "name": "HrmpChannelDigests",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 692
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Maintains a mapping that can be used to answer the question: What paras sent a message at",
                            " the given block number for a given receiver. Invariants:",
                            " - The inner `Vec<ParaId>` is never empty.",
                            " - The inner `Vec<ParaId>` cannot store two same `ParaId`.",
                            " - The outer vector is sorted ascending by block number and cannot store two items with the",
                            "   same block number."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 409
            },
            "events": {
                "type": 111
            },
            "constants": [],
            "errors": {
                "type": 694
            },
            "index": 60
        },
        {
            "name": "ParaSessionInfo",
            "storage": {
                "prefix": "ParaSessionInfo",
                "items": [
                    {
                        "name": "AssignmentKeysUnsafe",
                        "modifier": "Default",
                        "type": {
                            "Plain": 695
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Assignment keys for the current session.",
                            " Note that this API is private due to it being prone to 'off-by-one' at session boundaries.",
                            " When in doubt, use `Sessions` API instead."
                        ]
                    },
                    {
                        "name": "EarliestStoredSession",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The earliest session for which previous session info is stored."
                        ]
                    },
                    {
                        "name": "Sessions",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 4,
                                "value": 696
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Session information in a rolling window.",
                            " Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.",
                            " Does not have any entries before the session index in the first session change notification."
                        ]
                    },
                    {
                        "name": "AccountKeys",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 4,
                                "value": 206
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The validator account keys of the validators actively participating in parachain consensus."
                        ]
                    }
                ]
            },
            "calls": null,
            "events": null,
            "constants": [],
            "errors": null,
            "index": 61
        },
        {
            "name": "ParasDisputes",
            "storage": {
                "prefix": "ParasDisputes",
                "items": [
                    {
                        "name": "LastPrunedSession",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The last pruned session, if any. All data stored by this module",
                            " references sessions."
                        ]
                    },
                    {
                        "name": "Disputes",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 700,
                                "value": 701
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All ongoing or concluded disputes for the last several sessions."
                        ]
                    },
                    {
                        "name": "Included",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 700,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All included blocks on the chain, as well as the block number in this chain that",
                            " should be reverted back to if the candidate is disputed and determined to be invalid."
                        ]
                    },
                    {
                        "name": "SpamSlots",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 94
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Maps session indices to a vector indicating the number of potentially-spam disputes",
                            " each validator is participating in. Potentially-spam disputes are remote disputes which have",
                            " fewer than `byzantine_threshold + 1` validators.",
                            "",
                            " The i'th entry of the vector corresponds to the i'th validator in the session."
                        ]
                    },
                    {
                        "name": "Frozen",
                        "modifier": "Default",
                        "type": {
                            "Plain": 236
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Whether the chain is frozen. Starts as `None`. When this is `Some`,",
                            " the chain will not accept any new parachain blocks for backing or inclusion,",
                            " and its value indicates the last valid block number in the chain.",
                            " It can only be set back to `None` by governance intervention."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 410
            },
            "events": {
                "type": 113
            },
            "constants": [],
            "errors": {
                "type": 702
            },
            "index": 62
        },
        {
            "name": "Registrar",
            "storage": {
                "prefix": "Registrar",
                "items": [
                    {
                        "name": "PendingSwap",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 98
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Pending swap operations."
                        ]
                    },
                    {
                        "name": "Paras",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 703
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Amount held on deposit for each para and the original depositor.",
                            "",
                            " The given account ID is responsible for registering the code and initial head data, but may only do",
                            " so if it isn't yet registered. (After that, it's up to governance to do so.)"
                        ]
                    },
                    {
                        "name": "NextFreeParaId",
                        "modifier": "Default",
                        "type": {
                            "Plain": 98
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The next free `ParaId`."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 411
            },
            "events": {
                "type": 117
            },
            "constants": [
                {
                    "name": "ParaDeposit",
                    "type": 6,
                    "value": [
                        0,
                        16,
                        165,
                        212,
                        232,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The deposit to be paid to run a parathread.",
                        " This should include the cost for storing the genesis head and validation code."
                    ]
                },
                {
                    "name": "DataDepositPerByte",
                    "type": 6,
                    "value": [
                        128,
                        150,
                        152,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The deposit to be paid per byte stored on chain."
                    ]
                }
            ],
            "errors": {
                "type": 704
            },
            "index": 70
        },
        {
            "name": "Slots",
            "storage": {
                "prefix": "Slots",
                "items": [
                    {
                        "name": "Leases",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 705
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Amounts held on deposit for each (possibly future) leased parachain.",
                            "",
                            " The actual amount locked on its behalf by any account at any time is the maximum of the second values",
                            " of the items in this list whose first value is the account.",
                            "",
                            " The first item in the list is the amount locked for the current Lease Period. Following",
                            " items are for the subsequent lease periods.",
                            "",
                            " The default value (an empty list) implies that the parachain no longer exists (or never",
                            " existed) as far as this pallet is concerned.",
                            "",
                            " If a parachain doesn't exist *yet* but is scheduled to exist in the future, then it",
                            " will be left-padded with one or more `None`s to denote the fact that nothing is held on",
                            " deposit for the non-existent chain currently, but is held at some point in the future.",
                            "",
                            " It is illegal for a `None` value to trail in the list."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 412
            },
            "events": {
                "type": 118
            },
            "constants": [
                {
                    "name": "LeasePeriod",
                    "type": 4,
                    "value": [
                        0,
                        117,
                        18,
                        0
                    ],
                    "docs": [
                        " The number of blocks over which a single period lasts."
                    ]
                },
                {
                    "name": "LeaseOffset",
                    "type": 4,
                    "value": [
                        0,
                        16,
                        14,
                        0
                    ],
                    "docs": [
                        " The number of blocks to offset each lease period by."
                    ]
                }
            ],
            "errors": {
                "type": 706
            },
            "index": 71
        },
        {
            "name": "Auctions",
            "storage": {
                "prefix": "Auctions",
                "items": [
                    {
                        "name": "AuctionCounter",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Number of auctions started so far."
                        ]
                    },
                    {
                        "name": "AuctionInfo",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 30
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Information relating to the current auction, if there is one.",
                            "",
                            " The first item in the tuple is the lease period index that the first of the four",
                            " contiguous lease periods on auction is for. The second is the block number when the",
                            " auction will \"begin to end\", i.e. the first block of the Ending Period of the auction."
                        ]
                    },
                    {
                        "name": "ReservedAmounts",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 707,
                                "value": 6
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Amounts currently reserved in the accounts of the bidders currently winning",
                            " (sub-)ranges."
                        ]
                    },
                    {
                        "name": "Winning",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 4,
                                "value": 708
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The winning bids for each of the 10 ranges at each sample in the final Ending Period of",
                            " the current auction. The map's key is the 0-based index into the Sample Size. The",
                            " first sample of the ending period is 0; the last is `Sample Size - 1`."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 413
            },
            "events": {
                "type": 119
            },
            "constants": [
                {
                    "name": "EndingPeriod",
                    "type": 4,
                    "value": [
                        64,
                        25,
                        1,
                        0
                    ],
                    "docs": [
                        " The number of blocks over which an auction may be retroactively ended."
                    ]
                },
                {
                    "name": "SampleLength",
                    "type": 4,
                    "value": [
                        20,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The length of each sample to take during the ending period.",
                        "",
                        " `EndingPeriod` / `SampleLength` = Total # of Samples"
                    ]
                },
                {
                    "name": "SlotRangeCount",
                    "type": 4,
                    "value": [
                        36,
                        0,
                        0,
                        0
                    ],
                    "docs": []
                },
                {
                    "name": "LeasePeriodsPerSlot",
                    "type": 4,
                    "value": [
                        8,
                        0,
                        0,
                        0
                    ],
                    "docs": []
                }
            ],
            "errors": {
                "type": 711
            },
            "index": 72
        },
        {
            "name": "Crowdloan",
            "storage": {
                "prefix": "Crowdloan",
                "items": [
                    {
                        "name": "Funds",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    }
                                ],
                                "key": 98,
                                "value": 712
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Info on all of the funds."
                        ]
                    },
                    {
                        "name": "NewRaise",
                        "modifier": "Default",
                        "type": {
                            "Plain": 662
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The funds that have had additional contributions during the last block. This is used",
                            " in order to determine which funds should submit new or updated bids."
                        ]
                    },
                    {
                        "name": "EndingsCount",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The number of auctions that have entered into their ending period so far."
                        ]
                    },
                    {
                        "name": "NextFundIndex",
                        "modifier": "Default",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " Tracker for the next available fund index"
                        ]
                    }
                ]
            },
            "calls": {
                "type": 415
            },
            "events": {
                "type": 120
            },
            "constants": [
                {
                    "name": "PalletId",
                    "type": 559,
                    "value": [
                        112,
                        121,
                        47,
                        99,
                        102,
                        117,
                        110,
                        100
                    ],
                    "docs": [
                        " `PalletId` for the crowdloan pallet. An appropriate value could be `PalletId(*b\"py/cfund\")`"
                    ]
                },
                {
                    "name": "MinContribution",
                    "type": 6,
                    "value": [
                        0,
                        116,
                        59,
                        164,
                        11,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "docs": [
                        " The minimum amount that may be contributed into a crowdloan. Should almost certainly be at",
                        " least `ExistentialDeposit`."
                    ]
                },
                {
                    "name": "RemoveKeysLimit",
                    "type": 4,
                    "value": [
                        232,
                        3,
                        0,
                        0
                    ],
                    "docs": [
                        " Max number of storage keys to remove per extrinsic call."
                    ]
                }
            ],
            "errors": {
                "type": 714
            },
            "index": 73
        },
        {
            "name": "XcmPallet",
            "storage": {
                "prefix": "XcmPallet",
                "items": [
                    {
                        "name": "QueryCounter",
                        "modifier": "Default",
                        "type": {
                            "Plain": 10
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The latest available query index."
                        ]
                    },
                    {
                        "name": "Queries",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 10,
                                "value": 715
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The ongoing queries."
                        ]
                    },
                    {
                        "name": "AssetTraps",
                        "modifier": "Default",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Identity": null
                                    }
                                ],
                                "key": 11,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "docs": [
                            " The existing asset traps.",
                            "",
                            " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                            " times this pair has been trapped (usually just 1 if it exists at all)."
                        ]
                    },
                    {
                        "name": "SafeXcmVersion",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 4
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                            " then the destinations whose XCM version is unknown are considered unreachable."
                        ]
                    },
                    {
                        "name": "SupportedVersion",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 719,
                                "value": 4
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The Latest versions that we know various locations support."
                        ]
                    },
                    {
                        "name": "VersionNotifiers",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 719,
                                "value": 10
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " All locations that we have requested version notifications from."
                        ]
                    },
                    {
                        "name": "VersionNotifyTargets",
                        "modifier": "Optional",
                        "type": {
                            "Map": {
                                "hashers": [
                                    {
                                        "Twox64Concat": null
                                    },
                                    {
                                        "Blake2_128Concat": null
                                    }
                                ],
                                "key": 719,
                                "value": 720
                            }
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The target locations that are subscribed to our version changes, as well as the most recent",
                            " of our versions we informed them of."
                        ]
                    },
                    {
                        "name": "VersionDiscoveryQueue",
                        "modifier": "Default",
                        "type": {
                            "Plain": 721
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                            " the `u32` counter is the number of times that a send to the destination has been attempted,",
                            " which is used as a prioritization."
                        ]
                    },
                    {
                        "name": "CurrentMigration",
                        "modifier": "Optional",
                        "type": {
                            "Plain": 724
                        },
                        "fallback": [
                            0
                        ],
                        "docs": [
                            " The current migration's stage, if any."
                        ]
                    }
                ]
            },
            "calls": {
                "type": 423
            },
            "events": {
                "type": 121
            },
            "constants": [],
            "errors": {
                "type": 726
            },
            "index": 99
        }
    ],
    "extrinsic": {
        "type": 727,
        "version": 4,
        "signedExtensions": [
            {
                "identifier": "CheckNonZeroSender",
                "type": 729,
                "additionalSigned": 33
            },
            {
                "identifier": "CheckSpecVersion",
                "type": 730,
                "additionalSigned": 4
            },
            {
                "identifier": "CheckTxVersion",
                "type": 731,
                "additionalSigned": 4
            },
            {
                "identifier": "CheckGenesis",
                "type": 732,
                "additionalSigned": 11
            },
            {
                "identifier": "CheckMortality",
                "type": 733,
                "additionalSigned": 11
            },
            {
                "identifier": "CheckNonce",
                "type": 735,
                "additionalSigned": 33
            },
            {
                "identifier": "CheckWeight",
                "type": 736,
                "additionalSigned": 33
            },
            {
                "identifier": "ChargeTransactionPayment",
                "type": 737,
                "additionalSigned": 33
            },
            {
                "identifier": "PrevalidateAttests",
                "type": 738,
                "additionalSigned": 33
            }
        ]
    },
    "type": 739
}