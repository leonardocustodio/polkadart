{
    "source": {
        "hash": "0xc1c8f7908a009379743280998a998580c8c7415919cb873cb320756b972a7d3a",
        "language": "ink! 4.0.0-rc",
        "compiler": "rustc 1.67.0",
        "build_info": {
            "build_mode": "Debug",
            "cargo_contract_version": "2.0.0-rc",
            "rust_toolchain": "stable-aarch64-apple-darwin",
            "wasm_opt_settings": {
                "keep_debug_symbols": false,
                "optimization_passes": "Z"
            }
        }
    },
    "contract": {
        "name": "flipper",
        "version": "0.1.0",
        "authors": [
            "[your_name] <[your_email]>"
        ]
    },
    "spec": {
        "constructors": [
            {
                "args": [
                    {
                        "label": "init_value",
                        "type": {
                            "displayName": [
                                "bool"
                            ],
                            "type": 0
                        }
                    }
                ],
                "docs": [
                    "Creates a new flipper smart contract initialized with the given value."
                ],
                "label": "new",
                "payable": false,
                "returnType": {
                    "displayName": [
                        "ink_primitives",
                        "ConstructorResult"
                    ],
                    "type": 1
                },
                "selector": "0x9bae9d5e"
            },
            {
                "args": [],
                "docs": [
                    "Creates a new flipper smart contract initialized to `false`."
                ],
                "label": "new_default",
                "payable": false,
                "returnType": {
                    "displayName": [
                        "ink_primitives",
                        "ConstructorResult"
                    ],
                    "type": 1
                },
                "selector": "0x61ef7e3e"
            }
        ],
        "docs": [],
        "events": [],
        "lang_error": {
            "displayName": [
                "ink",
                "LangError"
            ],
            "type": 3
        },
        "messages": [
            {
                "args": [],
                "docs": [
                    " Flips the current value of the Flipper's boolean."
                ],
                "label": "flip",
                "mutates": true,
                "payable": false,
                "returnType": {
                    "displayName": [
                        "ink",
                        "MessageResult"
                    ],
                    "type": 1
                },
                "selector": "0x633aa551"
            },
            {
                "args": [],
                "docs": [
                    " Returns the current value of the Flipper's boolean."
                ],
                "label": "get",
                "mutates": false,
                "payable": false,
                "returnType": {
                    "displayName": [
                        "ink",
                        "MessageResult"
                    ],
                    "type": 4
                },
                "selector": "0x2f865bd9"
            }
        ]
    },
    "storage": {
        "root": {
            "layout": {
                "struct": {
                    "fields": [
                        {
                            "layout": {
                                "leaf": {
                                    "key": "0x00000000",
                                    "ty": 0
                                }
                            },
                            "name": "value"
                        }
                    ],
                    "name": "Flipper"
                }
            },
            "root_key": "0x00000000"
        }
    },
    "types": [
        {
            "id": 0,
            "type": {
                "def": {
                    "primitive": "bool"
                }
            }
        },
        {
            "id": 1,
            "type": {
                "def": {
                    "variant": {
                        "variants": [
                            {
                                "fields": [
                                    {
                                        "type": 2
                                    }
                                ],
                                "index": 0,
                                "name": "Ok"
                            },
                            {
                                "fields": [
                                    {
                                        "type": 3
                                    }
                                ],
                                "index": 1,
                                "name": "Err"
                            }
                        ]
                    }
                },
                "params": [
                    {
                        "name": "T",
                        "type": 2
                    },
                    {
                        "name": "E",
                        "type": 3
                    }
                ],
                "path": [
                    "Result"
                ]
            }
        },
        {
            "id": 2,
            "type": {
                "def": {
                    "tuple": []
                }
            }
        },
        {
            "id": 3,
            "type": {
                "def": {
                    "variant": {
                        "variants": [
                            {
                                "index": 1,
                                "name": "CouldNotReadInput"
                            }
                        ]
                    }
                },
                "path": [
                    "ink_primitives",
                    "LangError"
                ]
            }
        },
        {
            "id": 4,
            "type": {
                "def": {
                    "variant": {
                        "variants": [
                            {
                                "fields": [
                                    {
                                        "type": 0
                                    }
                                ],
                                "index": 0,
                                "name": "Ok"
                            },
                            {
                                "fields": [
                                    {
                                        "type": 3
                                    }
                                ],
                                "index": 1,
                                "name": "Err"
                            }
                        ]
                    }
                },
                "params": [
                    {
                        "name": "T",
                        "type": 0
                    },
                    {
                        "name": "E",
                        "type": 3
                    }
                ],
                "path": [
                    "Result"
                ]
            }
        }
    ],
    "version": "4"
}