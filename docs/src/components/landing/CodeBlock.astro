---
import { createHighlighter } from 'shiki'

// Create a singleton highlighter instance
let sharedHighlighter: Awaited<ReturnType<typeof createHighlighter>>;
async function getHighlighter() {
  if (!sharedHighlighter) {
    sharedHighlighter = await createHighlighter({
      themes: ['github-dark'],
      langs: ['dart', 'bash', 'yaml'],
    });
  }
  return sharedHighlighter;
}

interface Props {
	code: string;
	lang: string;
	title?: string;
	statusBar?: boolean;
}

const { code, lang, statusBar } = Astro.props;

// Get the shared highlighter instance
const highlighter = await getHighlighter();

// Highlight the code
const html = highlighter.codeToHtml(code, {
	lang: lang,
	theme: 'github-dark',
});
---

<div class="code-window">
	{statusBar !== false && (
		<div class="code-header">
			<div class="window-controls">
				<span class="control red"></span>
				<span class="control yellow"></span>
				<span class="control green"></span>
			</div>
			<span class="filename">{'\u00A0'}</span>
		</div>
	)}
	<pre class="code-content" set:html={html}></pre>
</div>

<style>
	.code-content :global(pre) {
		margin: 0;
		padding: 0;
		background-color: transparent !important;
	}

	.code-content :global(code) {
		font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
		font-size: 0.875rem;
		line-height: 1.7;
		width: 100%;
	}
</style>
